Q21,707693.0,->  Nested Loop Semi Join  (cost=2406.31..2845824.41 rows=1 width=34) (actual time=32.118..43604.401 rows=707693 loops=1)
Q3,319239.8,->  Sort  (cost=2548781.20..2556762.20 rows=3192398 width=20) (actual time=42324.115..42324.117 rows=10 loops=1)
Q18,304473.2,->  GroupAggregate  (cost=10195349.04..11024277.36 rows=30142848 width=39) (actual time=85194.953..85195.382 rows=99 loops=1)
Q18,76135.9,->  Hash Join  (cost=2187822.50..2803776.27 rows=7537460 width=39) (actual time=52686.685..59998.006 rows=99 loops=1)
Q18,76135.9,->  Hash Join  (cost=2118794.50..2621686.38 rows=7537460 width=20) (actual time=51492.734..58803.722 rows=99 loops=1)
Q18,76135.9,->  Hash  (cost=2803776.27..2803776.27 rows=7537460 width=39) (actual time=59998.225..59998.225 rows=99 loops=1)
Q18,43496.1,->  Sort  (cost=10195349.04..10270706.16 rows=30142848 width=39) (actual time=85194.942..85194.997 rows=693 loops=1)
Q18,43496.1,->  Hash Join  (cost=2897994.52..5626588.17 rows=30142848 width=39) (actual time=60477.556..85193.808 rows=693 loops=1)
Q18,41492.6,->  Hash  (cost=2067447.33..2067447.33 rows=4107773 width=4) (actual time=51276.688..51276.688 rows=99 loops=1)
Q18,41492.6,->  HashAggregate  (cost=1975022.44..2026369.60 rows=4107773 width=8) (actual time=44048.993..51276.433 rows=99 loops=1)
Q21,39858.0,->  Nested Loop Anti Join  (cost=2406.88..2845826.20 rows=1 width=26) (actual time=34.396..47041.470 rows=39858 loops=1)
Q10,27764.1,->  Sort  (cost=2299598.68..2300986.88 rows=555282 width=175) (actual time=35995.558..35995.561 rows=20 loops=1)
Q9,24706.5,->  Sort  (cost=1171862.77..1171863.10 rows=133 width=46) (actual time=122685.708..123355.217 rows=3285969 loops=1)
Q9,24706.5,->  Nested Loop  (cost=66874.60..1171854.02 rows=133 width=24) (actual time=1268.967..112138.569 rows=3285969 loops=1)
Q9,24706.5,->  Nested Loop  (cost=66874.17..1171789.57 rows=133 width=24) (actual time=1268.944..69008.445 rows=3285969 loops=1)
Q9,24706.5,->  Nested Loop  (cost=66873.88..1171746.65 rows=133 width=28) (actual time=1268.934..56693.438 rows=3285969 loops=1)
Q9,24706.5,->  Hash Join  (cost=66876.17..1171858.08 rows=133 width=46) (actual time=1269.037..116166.656 rows=3285969 loops=1)
Q2,4838.0,->  Merge Join  (cost=465687.75..883254.46 rows=1 width=190) (actual time=8939.567..11033.064 rows=4838 loops=1)
Q21,4007.0,->  HashAggregate  (cost=2845826.20..2845826.21 rows=1 width=26) (actual time=47112.218..47113.401 rows=4007 loops=1)
Q15,3715.0,->  Subquery Scan on revenue5  (cost=2008213.24..2008296.82 rows=3715 width=12) (actual time=43015.793..43030.705 rows=1 loops=1)
Q15,3715.0,->  Sort  (cost=2008517.11..2008526.40 rows=3715 width=12) (actual time=43030.724..43030.725 rows=1 loops=1)
Q15,3715.0,Merge Join  (cost=4000064.69..4005161.62 rows=3715 width=79) (actual time=43056.161..43056.163 rows=1 loops=1)
Q15,3715.0,->  HashAggregate  (cost=2008213.24..2008259.68 rows=3715 width=12) (actual time=43015.792..43030.703 rows=1 loops=1)
Q7,768.0,Sort  (cost=2121033.55..2121041.23 rows=3072 width=64) (actual time=22600.168..22600.169 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2120809.52..2120855.60 rows=3072 width=64) (actual time=22600.107..22600.113 rows=4 loops=1)
Q8,365.0,Sort  (cost=1777102.18..1777104.00 rows=730 width=38) (actual time=15085.488..15085.488 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1777054.69..1777067.46 rows=730 width=38) (actual time=15085.447..15085.449 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=47114.529..47114.536 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=47114.531..47114.547 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=883254.47..883254.47 rows=1 width=190) (actual time=11038.421..11038.434 rows=100 loops=1)
Q2,100.0,Limit  (cost=883254.47..883254.47 rows=1 width=190) (actual time=11038.423..11038.447 rows=100 loops=1)
Q11,32.9,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9637.564..9638.685 rows=9722 loops=1)
Q11,32.9,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9549.954..9632.194 rows=9722 loops=1)
Q3,28.0,->  HashAggregate  (cost=2447870.65..2479794.63 rows=3192398 width=20) (actual time=42240.781..42299.637 rows=113829 loops=1)
Q15,26.9,->  HashAggregate  (cost=1991463.69..1991500.84 rows=3715 width=12) (actual time=20931.341..20972.602 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=734231)
Q14,13.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7919.82 rows=777182 width=0) (actual time=287.192..287.192 rows=10728960 loops=1)
Q3,10.5,->  Hash Join  (cost=768484.06..2399984.68 rows=3192398 width=20) (actual time=11617.338..41948.262 rows=301462 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2415.01 rows=320400 width=0) (actual time=35.985..35.985 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.89 rows=1 width=24) (actual time=0.021..0.111 rows=7 loops=438284)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.904..3.904 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.283..0.283 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1875694.52..1875694.58 rows=25 width=34) (actual time=20581.439..20581.440 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1875693.69..1875693.94 rows=25 width=34) (actual time=20581.398..20581.400 rows=5 loops=1)
Q4,5.0,Sort  (cost=1493423.14..1493423.15 rows=1 width=16) (actual time=15838.236..15838.236 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.04 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574264)
Q4,5.0,->  HashAggregate  (cost=1493423.12..1493423.13 rows=1 width=16) (actual time=15838.189..15838.191 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=707693)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5694.42 rows=565442 width=0) (actual time=30.253..30.253 rows=2568960 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5832.85 rows=579285 width=0) (actual time=27.288..27.288 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=850822.09..850822.59 rows=200 width=8) (actual time=29649.409..29649.411 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850812.45..850814.45 rows=200 width=8) (actual time=29649.332..29649.341 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.009 rows=1 loops=1198332)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=457511)
Q17,3.5,->  Nested Loop  (cost=82.69..114025.09 rows=20275 width=4) (actual time=1.829..306.009 rows=5733 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5978.24..1492632.30 rows=158164 width=16) (actual time=27.493..15531.305 rows=526367 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=2146)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..242272.76 rows=32283301 width=0) (actual time=119.287..119.287 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.330..0.409 rows=3 loops=21770)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..56012.40 rows=7462987 width=0) (actual time=27.412..27.412 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=694866.82..694866.83 rows=3 width=20) (actual time=11262.918..11262.919 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641867.08..641867.13 rows=3 width=20) (actual time=11262.869..11262.871 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.043..0.059 rows=2 loops=6520)
Q20,2.0,->  Nested Loop  (cost=754.64..11676009.33 rows=29605 width=4) (actual time=15.973..9321.578 rows=59340 loops=1)
Q20,2.0,->  Hash  (cost=11676009.33..11676009.33 rows=29605 width=4) (actual time=9358.476..9358.476 rows=59340 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.221..4.221 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3059219.43..3059219.43 rows=1 width=27) (actual time=36103.866..36103.866 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3059219.41..3059219.42 rows=1 width=27) (actual time=36103.818..36103.818 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347228.00..2265387.96 rows=555282 width=175) (actual time=10670.997..33659.823 rows=1121544 loops=1)
Q10,2.0,->  Hash Join  (cost=347226.43..2257751.27 rows=555282 width=153) (actual time=10670.965..33257.825 rows=1121544 loops=1)
Q10,2.0,->  Hash Join  (cost=278198.43..2180394.04 rows=555282 width=12) (actual time=9124.483..30986.290 rows=1121544 loops=1)
Q16,1.9,->  Sort  (cost=403691.04..405177.68 rows=594654 width=40) (actual time=10165.771..10319.162 rows=1184902 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.453..3761.785 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54754.15..346658.69 rows=594654 width=40) (actual time=1287.186..6569.285 rows=1184902 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.25 rows=20015207 width=8) (actual time=0.012..22341.521 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323953.49 rows=390603 width=38) (actual time=32.063..38491.320 rows=734231 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902511.67 rows=800608 width=34) (actual time=31.905..30105.509 rows=1520420 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.412 rows=56 loops=1)
Q20,1.5,Sort  (cost=11678823.26..11678826.22 rows=1184 width=51) (actual time=9389.209..9389.308 rows=1823 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11676422.39..11678762.82 rows=1184 width=51) (actual time=9358.936..9388.425 rows=1823 loops=1)
Q15,1.5,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..19.048 rows=64983 loops=1)
Q1,1.5,Sort  (cost=4221998.42..4221998.44 rows=6 width=20) (actual time=93185.262..93185.262 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4221998.24..4221998.34 rows=6 width=20) (actual time=93185.215..93185.218 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27421.22 rows=3650830 width=0) (actual time=27.645..27.645 rows=2563840 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.174..4.174 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2279270.01..2284822.83 rows=555282 width=175) (actual time=35635.500..35856.607 rows=375068 loops=1)
Q9,1.3,GroupAggregate  (cost=1171862.77..1171867.43 rows=133 width=46) (actual time=122695.605..125539.136 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2910.07 rows=140708 width=0) (actual time=965.442..965.442 rows=191061 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2945.25..41916.84 rows=140708 width=24) (actual time=974.408..1372.468 rows=191061 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91408.52 rows=9126052 width=0) (actual time=119.193..119.193 rows=10691840 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108105 width=4) (actual time=0.016..1222.173 rows=109571 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.31..352155.51 rows=432420 width=16) (actual time=1268.890..6696.587 rows=438284 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108105 width=4) (actual time=1268.340..1268.340 rows=109571 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=5.237..2157.464 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.91..1728853.45 rows=126478 width=20) (actual time=6.944..12434.164 rows=121434 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.48..1524642.05 rows=417044 width=16) (actual time=6.900..5889.793 rows=400205 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.35..1776072.90 rows=25296 width=16) (actual time=2265.381..14979.901 rows=24336 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.57 rows=31 width=20) (actual time=0.035..0.406 rows=30 loops=13377)
Q8,1.0,->  Hash Join  (cost=38759.92..1776548.77 rows=25296 width=38) (actual time=2265.424..15024.297 rows=24336 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.06..1767910.85 rows=25296 width=16) (actual time=2265.367..14806.944 rows=24336 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2255.805..2255.805 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.48 rows=13740 width=0) (actual time=4.577..4.577 rows=13377 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=426.91..28615.49 rows=13740 width=4) (actual time=6.853..286.887 rows=13377 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.944..421.505 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.006..2905.482 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2108014.45 rows=1465417 width=42) (actual time=899.940..21787.032 rows=1459202 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2119894.75 rows=60985 width=64) (actual time=950.961..22507.269 rows=58823 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532007.47 rows=1204795 width=30) (actual time=899.848..9722.064 rows=1198332 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..847.671 rows=120049 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..47.657 rows=8069 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=899.254..899.254 rows=120049 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=50.810..50.810 rows=8069 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91507.91..1365961.08 rows=397573 width=8) (actual time=120.199..35634.824 rows=397364 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.698..1932.697 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=66339.80..1855709.80 rows=1843967 width=46) (actual time=2079.995..19639.209 rows=1826940 loops=1)
Q5,1.0,->  Hash Join  (cost=71018.80..1874956.12 rows=73757 width=34) (actual time=2141.168..20488.624 rows=73121 loops=1)
Q5,1.0,->  Hash Join  (cost=66339.23..390665.39 rows=461103 width=38) (actual time=2079.973..12179.053 rows=457511 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2049.718..2049.718 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27997.60..339067.05 rows=2305513 width=8) (actual time=27.825..9051.748 rows=2278195 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.639..376.664 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5977.67..268694.95 rows=579285 width=20) (actual time=27.461..7172.247 rows=574264 loops=1)
Q3,1.0,->  Hash Join  (cost=107644.26..499432.32 rows=1496652 width=12) (actual time=779.180..10811.764 rows=1481829 loops=1)
Q3,1.0,->  Hash  (cost=499432.32..499432.32 rows=1496652 width=12) (actual time=11487.208..11487.208 rows=1481829 loops=1)
Q3,1.0,->  Hash  (cost=46005.93..46005.93 rows=300815 width=4) (actual time=749.086..749.086 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.54 rows=300815 width=0) (actual time=69.640..69.640 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57878.15..406713.48 rows=7462987 width=16) (actual time=27.575..6909.857 rows=7390578 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=250343.59..1728857.85 rows=32283301 width=12) (actual time=120.033..24346.396 rows=31988801 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.74..46005.93 rows=300815 width=4) (actual time=78.773..653.536 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.014..4719.157 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=9671.478..9671.478 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597847.58..641420.89 rows=59493 width=20) (actual time=10715.911..11236.768 rows=63666 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6589.89 rows=383854 width=0) (actual time=92.195..92.195 rows=382006 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6685.86..52040.02 rows=383854 width=4) (actual time=101.245..824.139 rows=382006 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.264..30.685 rows=4007 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.787..31.787 rows=4007 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.254..30.072 rows=4007 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=8939.123..9061.419 rows=1603190 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.320..175.328 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7858 width=30) (actual time=0.181..1232.053 rows=8094 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=191.342..7592.459 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=191.194..191.194 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..33.933 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.306..27.852 rows=4009 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.70 rows=20015 width=0) (actual time=10.344..10.344 rows=21770 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.289..27.248 rows=4009 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.21..34902.37 rows=22035 width=4) (actual time=15.303..379.367 rows=21770 loops=1)
Q19,1.0,->  Nested Loop  (cost=12849.73..614727.09 rows=1141 width=8) (actual time=82.731..6439.687 rows=1191 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.182..4.182 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.39 rows=8068 width=0) (actual time=3.954..3.954 rows=7912 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8018 width=0) (actual time=13.263..13.263 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.71 rows=8001 width=0) (actual time=3.704..3.704 rows=8091 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.030..0.030 rows=30 loops=4861)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12844.99..26622.48 rows=4793 width=30) (actual time=44.540..333.067 rows=4861 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..3475.601 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673593.96 rows=60285696 width=8) (actual time=0.006..9732.105 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673593.96 rows=60285696 width=8) (actual time=0.017..12948.515 rows=60046221 loops=1)
Q18,1.0,Limit  (cost=10195349.04..10195351.79 rows=100 width=39) (actual time=85194.956..85195.396 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.080 rows=30 loops=2146)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.080 rows=30 loops=2146)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.43 rows=2000 width=0) (actual time=1.069..1.069 rows=2146 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.93..6625.65 rows=2000 width=4) (actual time=1.484..38.276 rows=2146 loops=1)
Q16,1.0,Sort  (cost=413461.07..413530.76 rows=27875 width=40) (actual time=10967.589..10971.070 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51021.34..51021.34 rows=297327 width=40) (actual time=1284.699..1284.699 rows=296404 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403691.04..411402.97 rows=27875 width=40) (actual time=10165.838..10908.253 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2489.34..51021.34 rows=297327 width=40) (actual time=36.055..1160.362 rows=296404 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1969130.96 rows=2233273 width=12) (actual time=0.023..18940.743 rows=2249760 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1969130.96 rows=2233273 width=12) (actual time=0.019..19818.727 rows=2249760 loops=1)
Q14,1.0,->  Hash Join  (cost=93636.11..1150919.01 rows=777182 width=29) (actual time=1949.671..37689.464 rows=774026 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8114.11..1053739.28 rows=777182 width=12) (actual time=287.996..35011.461 rows=774026 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444294.89 rows=14999478 width=8) (actual time=0.020..7306.641 rows=14853609 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738315.06 rows=14999478 width=8) (actual time=833.329..18179.227 rows=15353627 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=20) (actual time=0.012..4610.245 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2446485.23 rows=293101 width=15) (actual time=0.253..24832.606 rows=312834 loops=1)
Q12,1.0,->  Hash Join  (cost=598445.50..3054090.14 rows=293101 width=27) (actual time=10564.157..35782.175 rows=312834 loops=1)
Q12,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=20) (actual time=10445.737..10445.737 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.322..87.336 rows=3973 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.292..24.273 rows=3973 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.228..4200.401 rows=317840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=88.754..5003.910 rows=317840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=88.683..88.683 rows=3973 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.164..25.164 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.273..23.603 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.301..86.611 rows=3973 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.20 rows=59716201 width=20) (actual time=0.012..19752.364 rows=59200308 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1840630.49 rows=14936612 width=12) (actual time=0.012..18439.757 rows=14822462 loops=1)
Q10,1.0,->  Hash  (cost=271130.41..271130.41 rows=565442 width=8) (actual time=9118.515..9118.515 rows=561064 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5835.78..271130.41 rows=565442 width=8) (actual time=30.421..8861.245 rows=561064 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.016..0.016 rows=0 loops=400205)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1520420)
Q19,,->  BitmapOr  (cost=12844.99..12844.99 rows=4796 width=0) (actual time=40.708..40.708 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=1.140..1.226 rows=0 loops=4861)
Q19,,->  BitmapAnd  (cost=6271.71..6271.71 rows=2407 width=0) (actual time=8.808..8.808 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.43..4280.43 rows=1594 width=0) (actual time=18.197..18.197 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.36..2292.36 rows=795 width=0) (actual time=10.090..10.090 rows=0 loops=1)

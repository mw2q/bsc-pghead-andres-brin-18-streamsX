Q21,704632.0,->  Nested Loop Semi Join  (cost=2406.31..2885810.28 rows=1 width=34) (actual time=83.611..44307.108 rows=704632 loops=1)
Q3,321420.4,->  Sort  (cost=2571669.14..2579704.65 rows=3214204 width=20) (actual time=38109.128..38109.128 rows=10 loops=1)
Q18,301126.4,->  GroupAggregate  (cost=10185177.76..11013275.42 rows=30112642 width=39) (actual time=97413.709..97414.036 rows=100 loops=1)
Q18,67837.5,->  Hash Join  (cost=2185843.30..2801225.67 rows=7529968 width=39) (actual time=48227.127..57875.483 rows=111 loops=1)
Q18,67837.5,->  Hash Join  (cost=2116815.30..2619248.15 rows=7529968 width=20) (actual time=47336.191..56984.115 rows=111 loops=1)
Q18,67837.5,->  Hash  (cost=2801225.67..2801225.67 rows=7529968 width=39) (actual time=57875.780..57875.780 rows=111 loops=1)
Q18,42956.6,->  Sort  (cost=10185177.76..10260459.37 rows=30112642 width=39) (actual time=97413.700..97413.743 rows=701 loops=1)
Q21,39317.0,->  Nested Loop Anti Join  (cost=2406.88..2885812.06 rows=1 width=26) (actual time=84.143..47587.553 rows=39317 loops=1)
Q18,38755.0,->  Hash Join  (cost=2895350.27..5621209.56 rows=30112642 width=39) (actual time=58102.096..97412.547 rows=777 loops=1)
Q18,37006.9,->  Hash  (cost=2065468.14..2065468.14 rows=4107773 width=4) (actual time=47195.401..47195.401 rows=111 loops=1)
Q18,37006.9,->  HashAggregate  (cost=1973043.25..2024390.41 rows=4107773 width=8) (actual time=40783.458..47195.078 rows=111 loops=1)
Q10,28722.0,->  Sort  (cost=2306497.57..2307933.67 rows=574441 width=175) (actual time=36937.363..36937.367 rows=20 loops=1)
Q9,28352.1,->  Sort  (cost=1063586.16..1063586.45 rows=115 width=46) (actual time=201342.339..202065.386 rows=3260501 loops=1)
Q9,28352.1,->  Nested Loop  (cost=66699.59..1063578.51 rows=115 width=24) (actual time=2780.415..191066.281 rows=3260501 loops=1)
Q9,28352.1,->  Nested Loop  (cost=66699.16..1063522.77 rows=115 width=24) (actual time=2780.397..132776.871 rows=3260501 loops=1)
Q9,28352.1,->  Nested Loop  (cost=66698.87..1063485.67 rows=115 width=28) (actual time=2780.386..120149.296 rows=3260501 loops=1)
Q9,28352.1,->  Hash Join  (cost=66701.15..1063582.23 rows=115 width=46) (actual time=2780.470..194848.587 rows=3260501 loops=1)
Q2,4775.0,->  Merge Join  (cost=465687.75..887895.55 rows=1 width=190) (actual time=7172.610..9350.648 rows=4775 loops=1)
Q21,3987.0,->  HashAggregate  (cost=2885812.06..2885812.07 rows=1 width=26) (actual time=47648.818..47650.007 rows=3987 loops=1)
Q15,3798.0,->  Subquery Scan on revenue12  (cost=1562932.60..1563018.05 rows=3798 width=12) (actual time=55686.171..55689.877 rows=1 loops=1)
Q15,3798.0,->  Sort  (cost=1563243.86..1563253.36 rows=3798 width=12) (actual time=55689.901..55689.902 rows=1 loops=1)
Q15,3798.0,Merge Join  (cost=3108846.98..3113945.16 rows=3798 width=79) (actual time=55723.540..55723.543 rows=1 loops=1)
Q15,3798.0,->  HashAggregate  (cost=1562932.60..1562980.07 rows=3798 width=12) (actual time=55686.169..55689.874 rows=1 loops=1)
Q7,768.0,Sort  (cost=2118944.52..2118952.20 rows=3072 width=64) (actual time=26311.127..26311.127 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2118720.49..2118766.57 rows=3072 width=64) (actual time=26311.065..26311.071 rows=4 loops=1)
Q8,365.0,Sort  (cost=1716444.64..1716446.47 rows=730 width=38) (actual time=14457.962..14457.962 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1716397.15..1716409.93 rows=730 width=38) (actual time=14457.922..14457.923 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2885812.08..2885812.09 rows=1 width=26) (actual time=47651.160..47651.165 rows=100 loops=1)
Q21,100.0,Limit  (cost=2885812.08..2885812.09 rows=1 width=26) (actual time=47651.162..47651.178 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887895.56..887895.56 rows=1 width=190) (actual time=9356.112..9356.133 rows=100 loops=1)
Q2,100.0,Limit  (cost=887895.56..887895.56 rows=1 width=190) (actual time=9356.114..9356.144 rows=100 loops=1)
Q11,35.7,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=10744.701..10745.866 rows=8951 loops=1)
Q11,35.7,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=10655.680..10739.262 rows=8951 loops=1)
Q3,28.3,->  HashAggregate  (cost=2470069.31..2502211.35 rows=3214204 width=20) (actual time=38039.041..38088.117 rows=113416 loops=1)
Q15,26.3,->  HashAggregate  (cost=1545517.36..1545555.34 rows=3798 width=12) (actual time=26413.013..26445.571 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.007..0.007 rows=1 loops=731144)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8015.80 rows=786780 width=0) (actual time=121.091..121.091 rows=10846720 loops=1)
Q3,10.7,->  Hash Join  (cost=774202.36..2421856.25 rows=3214204 width=20) (actual time=7557.145..37735.750 rows=299273 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2425.31 rows=321773 width=0) (actual time=63.937..63.937 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.047..0.241 rows=8 loops=433988)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.667..3.667 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=5.390..5.390 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2024291.90..2024291.96 rows=25 width=34) (actual time=29392.103..29392.104 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2024291.07..2024291.32 rows=25 width=34) (actual time=29392.062..29392.063 rows=5 loops=1)
Q4,5.0,Sort  (cost=1495103.07..1495103.07 rows=1 width=16) (actual time=44795.763..44795.763 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.14 rows=5 width=4) (actual time=0.050..0.050 rows=1 loops=567680)
Q4,5.0,->  HashAggregate  (cost=1495103.05..1495103.06 rows=1 width=16) (actual time=44795.713..44795.715 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704632)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5789.72 rows=574972 width=0) (actual time=55.298..55.298 rows=2566400 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5889.55 rows=584955 width=0) (actual time=27.697..27.697 rows=2574080 loops=1)
Q13,4.3,Sort  (cost=856112.84..856113.34 rows=200 width=8) (actual time=35296.816..35296.819 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=856103.20..856105.20 rows=200 width=8) (actual time=35296.746..35296.754 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.012 rows=1 loops=1205282)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.033..0.036 rows=4 loops=455891)
Q17,3.7,->  Nested Loop  (cost=82.79..114580.36 rows=20175 width=4) (actual time=1.538..266.914 rows=5449 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5934.03..1494325.86 rows=155437 width=16) (actual time=55.509..44389.813 rows=520274 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.017..0.038 rows=3 loops=2040)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245686.39 rows=32738452 width=0) (actual time=120.236..120.236 rows=10835200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.49 rows=1 width=8) (actual time=0.420..0.500 rows=3 loops=21685)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..56057.18 rows=7468957 width=0) (actual time=27.674..27.674 rows=2576640 loops=1)
Q22,2.3,Sort  (cost=694245.69..694245.70 rows=3 width=20) (actual time=11063.368..11063.369 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641262.56..641262.60 rows=3 width=20) (actual time=11063.330..11063.334 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=753.98..10614989.22 rows=26897 width=4) (actual time=13.430..11148.255 rows=58721 loops=1)
Q20,2.1,->  Hash  (cost=10614989.22..10614989.22 rows=26897 width=4) (actual time=11187.315..11187.315 rows=58721 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.050..0.067 rows=2 loops=6445)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.177..4.177 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3038090.02..3038090.02 rows=1 width=27) (actual time=34553.459..34553.459 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038090.00..3038090.01 rows=1 width=27) (actual time=34553.409..34553.410 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=404114.05..405608.60 rows=597820 width=40) (actual time=10886.384..11053.794 rows=1190251 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.460..3952.938 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54818.96..346755.16 rows=597820 width=40) (actual time=1601.354..7180.885 rows=1190251 loops=1)
Q10,1.9,->  Hash Join  (cost=348471.62..2271106.47 rows=574441 width=175) (actual time=12668.264..34600.853 rows=1147772 loops=1)
Q10,1.9,->  Hash Join  (cost=348470.06..2263206.34 rows=574441 width=153) (actual time=12668.235..34185.564 rows=1147772 loops=1)
Q10,1.9,->  Hash Join  (cost=279442.06..2185561.73 rows=574441 width=12) (actual time=11155.730..31933.807 rows=1147772 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842439.90 rows=20294957 width=8) (actual time=0.017..21957.981 rows=37965829 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2356493.95 rows=396063 width=38) (actual time=83.553..38748.874 rows=731144 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1929069.28 rows=811798 width=34) (actual time=83.455..30102.886 rows=1514440 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.426 rows=56 loops=1)
Q15,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..145454.52 rows=19374202 width=0) (actual time=120.911..120.911 rows=10856960 loops=1)
Q15,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..145454.52 rows=19374202 width=0) (actual time=120.245..120.245 rows=10856960 loops=1)
Q20,1.6,Sort  (cost=10617761.44..10617764.13 rows=1076 width=51) (actual time=11255.554..11255.659 rows=1784 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10615368.44..10617707.26 rows=1076 width=51) (actual time=11187.752..11253.931 rows=1784 loops=1)
Q9,1.5,GroupAggregate  (cost=1063586.16..1063590.19 rows=115 width=46) (actual time=201352.892..204307.344 rows=175 loops=1)
Q1,1.5,Sort  (cost=4188357.03..4188357.05 rows=6 width=20) (actual time=92455.606..92455.607 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4188356.85..4188356.96 rows=6 width=20) (actual time=92455.556..92455.557 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2285467.49..2291211.90 rows=574441 width=175) (actual time=36591.513..36795.517 rows=381506 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.172..4.172 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.026..26.493 rows=70971 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.39 rows=140542 width=0) (actual time=711.898..711.898 rows=190855 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2943.53..41910.76 rows=140542 width=24) (actual time=721.445..884.800 rows=190855 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94104 width=4) (actual time=0.016..2719.912 rows=108497 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.30..351420.46 rows=376416 width=16) (actual time=2780.347..14047.536 rows=433988 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94104 width=4) (actual time=2779.802..2779.802 rows=108497 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91364.54 rows=9121654 width=0) (actual time=187.376..187.376 rows=10728960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.758..2408.353 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.73..1668623.50 rows=121002 width=20) (actual time=7.451..11497.709 rows=122328 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.29..1473265.97 rows=398986 width=16) (actual time=7.407..5418.896 rows=403804 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.17..1715457.84 rows=24200 width=16) (actual time=2532.977..14372.628 rows=24681 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.18 rows=31 width=20) (actual time=0.036..0.376 rows=30 loops=13458)
Q8,1.0,->  Hash Join  (cost=38743.73..1715913.15 rows=24200 width=38) (actual time=2533.022..14415.219 rows=24681 loops=1)
Q8,1.0,->  Hash Join  (cost=38741.88..1707649.41 rows=24200 width=16) (actual time=2532.960..14127.207 rows=24681 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2523.100..2523.100 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.43 rows=13200 width=0) (actual time=5.044..5.044 rows=13458 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=410.73..27958.35 rows=13200 width=4) (actual time=7.362..182.467 rows=13458 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.712..471.137 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..3519.628 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1463966 width=42) (actual time=605.571..25454.783 rows=1462378 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117806.63 rows=60924 width=64) (actual time=644.929..26209.982 rows=58055 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=605.549..10013.491 rows=1205282 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.040..565.890 rows=120188 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..36.806 rows=7969 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=605.075..605.075 rows=120188 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=38.952..38.952 rows=7969 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91554.97..1369646.19 rows=761717 width=8) (actual time=188.264..31876.181 rows=763855 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..484961.42 rows=2307895 width=8) (actual time=0.017..5564.606 rows=2279376 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=12.710..3933.148 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..2004291.34 rows=1845876 width=46) (actual time=4050.867..28328.443 rows=1825251 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2023552.74 rows=73833 width=34) (actual time=4158.943..29294.955 rows=72542 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..536573.45 rows=461579 width=38) (actual time=4050.846..10980.132 rows=455891 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=4048.822..4048.822 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=5.430..765.802 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5933.46..271118.04 rows=574972 width=20) (actual time=55.476..15536.209 rows=567680 loops=1)
Q3,1.0,->  Hash Join  (cost=107689.56..501610.11 rows=1497700 width=12) (actual time=410.576..6964.789 rows=1468585 loops=1)
Q3,1.0,->  Hash  (cost=501610.11..501610.11 rows=1497700 width=12) (actual time=7429.450..7429.450 rows=1468585 loops=1)
Q3,1.0,->  Hash  (cost=46005.32..46005.32 rows=300785 width=4) (actual time=380.747..380.747 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.31 rows=300785 width=0) (actual time=66.112..66.112 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57924.42..408859.38 rows=7468957 width=16) (actual time=27.834..4239.134 rows=7340776 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253871.00..1746613.65 rows=32738452 width=12) (actual time=121.000..24485.780 rows=32190531 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.51..46005.32 rows=300785 width=4) (actual time=75.120..302.752 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.014..4958.106 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=9953.735..9953.735 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597253.37..640816.88 rows=59423 width=20) (actual time=10750.967..11041.241 rows=63538 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6586.48 rows=383399 width=0) (actual time=92.590..92.590 rows=381561 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6682.33..52024.55 rows=383399 width=4) (actual time=101.361..553.574 rows=381561 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.307..82.144 rows=3987 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=83.409..83.409 rows=3987 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.292..81.395 rows=3987 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7172.282..7298.127 rows=1602411 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.369..136.295 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7976 width=30) (actual time=0.095..1273.123 rows=8061 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=147.548..5906.062 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=147.406..147.406 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.269..26.408 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.289..64.757 rows=3990 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.115..9.115 rows=21685 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.273..64.134 rows=3990 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=753.55..34889.83 rows=20019 width=4) (actual time=12.755..272.932 rows=21685 loops=1)
Q19,1.0,->  Nested Loop  (cost=12826.26..609408.16 rows=1143 width=8) (actual time=37.034..1685.488 rows=1131 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.183..4.183 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7988 width=0) (actual time=3.719..3.719 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.91 rows=7918 width=0) (actual time=3.413..3.413 rows=7876 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.31 rows=7859 width=0) (actual time=4.051..4.051 rows=8101 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12825.69..26455.44 rows=4728 width=30) (actual time=33.391..270.157 rows=4780 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.006..5582.303 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1671916.83 rows=60225283 width=8) (actual time=0.005..8625.687 rows=60045303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671916.83 rows=60225283 width=8) (actual time=9.929..25244.731 rows=60045303 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.033..0.063 rows=30 loops=2040)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.033..0.063 rows=30 loops=2040)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.53 rows=2010 width=0) (actual time=0.964..0.964 rows=2040 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.03..6656.02 rows=2010 width=4) (actual time=1.307..41.235 rows=2040 loops=1)
Q16,1.0,Sort  (cost=413937.14..414007.20 rows=28023 width=40) (actual time=11721.832..11725.396 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51066.36..51066.36 rows=298910 width=40) (actual time=1598.062..1598.062 rows=297730 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404114.05..411867.03 rows=28023 width=40) (actual time=10886.442..11662.051 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2500.04..51066.36 rows=298910 width=40) (actual time=64.065..1436.510 rows=297730 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=146035.02..1522297.05 rows=2322031 width=12) (actual time=121.703..24199.954 rows=2248895 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=146035.02..1522297.05 rows=2322031 width=12) (actual time=121.056..26825.415 rows=2248895 loops=1)
Q14,1.0,->  Hash Join  (cost=93734.49..1163032.71 rows=786780 width=29) (actual time=1677.692..27172.404 rows=774391 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8212.49..1065709.01 rows=786780 width=12) (actual time=121.909..24679.679 rows=774391 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447819.04 rows=15087808 width=8) (actual time=0.021..9239.243 rows=14853633 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..743164.16 rows=15087808 width=8) (actual time=1622.836..22561.995 rows=15353651 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.015..4252.267 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429563.44 rows=291625 width=15) (actual time=0.104..24998.266 rows=311355 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032986.56 rows=291625 width=27) (actual time=8858.897..34197.871 rows=311355 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=8789.273..8789.273 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.304..34.495 rows=4044 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.295..24.281 rows=4044 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.222..6113.373 rows=323520 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=35.602..4192.576 rows=323520 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=35.538..35.538 rows=4044 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.160..25.160 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.268..23.620 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.284..33.830 rows=4044 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.25 rows=59282840 width=20) (actual time=0.013..19539.738 rows=59232075 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1844252.74 rows=14966006 width=12) (actual time=0.045..17461.426 rows=14807252 loops=1)
Q10,1.0,->  Hash  (cost=272130.12..272130.12 rows=584955 width=8) (actual time=11150.376..11150.376 rows=573638 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6035.79..272130.12 rows=584955 width=8) (actual time=27.866..10888.745 rows=573638 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=403804)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1514440)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.29 rows=1 width=16) (actual time=0.263..0.295 rows=0 loops=4780)
Q19,,->  BitmapOr  (cost=12825.69..12825.69 rows=4732 width=0) (actual time=29.533..29.533 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.19..6270.19 rows=2362 width=0) (actual time=8.253..8.253 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.07..4280.07 rows=1588 width=0) (actual time=8.671..8.671 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2274.93..2274.93 rows=781 width=0) (actual time=8.976..8.976 rows=0 loops=1)

Q21,709089.0,->  Nested Loop Semi Join  (cost=2406.31..2851543.16 rows=1 width=34) (actual time=34.934..40435.365 rows=709089 loops=1)
Q3,318544.1,->  Sort  (cost=2562675.90..2570639.50 rows=3185441 width=20) (actual time=55782.089..55782.091 rows=10 loops=1)
Q18,300228.1,->  GroupAggregate  (cost=10154902.00..10980529.27 rows=30022810 width=39) (actual time=78275.160..78275.515 rows=100 loops=1)
Q15,100000.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..0.022 rows=1 loops=1)
Q18,67635.0,->  Hash Join  (cost=2179957.36..2793625.50 rows=7507492 width=39) (actual time=51550.182..58528.959 rows=111 loops=1)
Q18,67635.0,->  Hash Join  (cost=2110929.36..2611985.12 rows=7507492 width=20) (actual time=50258.116..57236.482 rows=111 loops=1)
Q18,67635.0,->  Hash  (cost=2793625.50..2793625.50 rows=7507492 width=39) (actual time=58529.216..58529.216 rows=111 loops=1)
Q18,42828.5,->  Sort  (cost=10154902.00..10229959.02 rows=30022810 width=39) (actual time=78275.149..78275.209 rows=701 loops=1)
Q21,39934.0,->  Nested Loop Anti Join  (cost=2406.88..2851544.94 rows=1 width=26) (actual time=36.264..43542.081 rows=39934 loops=1)
Q18,38639.3,->  Hash Join  (cost=2887469.15..5605196.70 rows=30022810 width=39) (actual time=58825.681..78273.979 rows=777 loops=1)
Q18,37006.9,->  Hash  (cost=2059582.19..2059582.19 rows=4107773 width=4) (actual time=50086.779..50086.779 rows=111 loops=1)
Q18,37006.9,->  HashAggregate  (cost=1967157.30..2018504.46 rows=4107773 width=8) (actual time=43389.221..50086.521 rows=111 loops=1)
Q10,28232.2,->  Sort  (cost=2298789.39..2300201.00 rows=564645 width=175) (actual time=48388.675..48388.678 rows=20 loops=1)
Q9,20536.8,->  Sort  (cost=1337809.45..1337809.85 rows=158 width=46) (actual time=109083.338..109875.474 rows=3244830 loops=1)
Q9,20536.8,->  Nested Loop  (cost=67149.87..1337799.16 rows=158 width=24) (actual time=773.461..98661.788 rows=3244830 loops=1)
Q9,20536.8,->  Nested Loop  (cost=67149.43..1337722.58 rows=158 width=24) (actual time=773.417..61627.544 rows=3244830 loops=1)
Q9,20536.8,->  Nested Loop  (cost=67149.14..1337671.60 rows=158 width=28) (actual time=773.407..49657.487 rows=3244830 loops=1)
Q9,20536.8,->  Hash Join  (cost=67151.43..1337803.68 rows=158 width=46) (actual time=773.514..102249.736 rows=3244830 loops=1)
Q2,4762.0,->  Merge Join  (cost=465687.75..890093.96 rows=1 width=190) (actual time=7067.844..9323.360 rows=4762 loops=1)
Q21,4023.0,->  HashAggregate  (cost=2851544.95..2851544.96 rows=1 width=26) (actual time=43598.746..43600.032 rows=4023 loops=1)
Q7,768.0,Sort  (cost=2137786.28..2137793.96 rows=3072 width=64) (actual time=29114.481..29114.481 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2137562.26..2137608.34 rows=3072 width=64) (actual time=29114.420..29114.425 rows=4 loops=1)
Q8,365.0,Sort  (cost=1718792.54..1718794.37 rows=730 width=38) (actual time=12025.951..12025.952 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1718745.05..1718757.82 rows=730 width=38) (actual time=12025.911..12025.912 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2851544.97..2851544.97 rows=1 width=26) (actual time=43601.273..43601.279 rows=100 loops=1)
Q21,100.0,Limit  (cost=2851544.97..2851544.97 rows=1 width=26) (actual time=43601.274..43601.293 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890093.97..890093.98 rows=1 width=190) (actual time=9328.624..9328.643 rows=100 loops=1)
Q2,100.0,Limit  (cost=890093.97..890093.98 rows=1 width=190) (actual time=9328.626..9328.655 rows=100 loops=1)
Q11,34.2,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9137.204..9138.318 rows=9348 loops=1)
Q11,34.2,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9050.836..9131.895 rows=9348 loops=1)
Q3,27.9,->  HashAggregate  (cost=2461985.25..2493839.66 rows=3185441 width=20) (actual time=55709.865..55760.795 rows=113990 loops=1)
Q15,26.9,->  HashAggregate  (cost=2019252.17..2019289.31 rows=3714 width=12) (actual time=20388.174..20429.106 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=735729)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8179.89 rows=803189 width=0) (actual time=261.497..261.497 rows=10814720 loops=1)
Q3,10.5,->  Hash Join  (cost=769474.19..2414203.64 rows=3185441 width=20) (actual time=13095.669..55374.438 rows=301830 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2428.36 rows=322180 width=0) (actual time=70.509..70.509 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.019..0.098 rows=7 loops=432672)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.647..3.647 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.668..3.668 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1875694.52..1875694.58 rows=25 width=34) (actual time=25815.233..25815.233 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1875693.69..1875693.94 rows=25 width=34) (actual time=25815.193..25815.193 rows=5 loops=1)
Q4,5.0,Sort  (cost=1474714.98..1474714.99 rows=1 width=16) (actual time=20475.071..20475.071 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.22 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=555233)
Q4,5.0,->  HashAggregate  (cost=1474714.96..1474714.97 rows=1 width=16) (actual time=20475.022..20475.024 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=709089)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5638.67 rows=559867 width=0) (actual time=32.314..32.314 rows=2543360 loops=1)
Q13,4.4,Sort  (cost=853034.87..853035.37 rows=200 width=8) (actual time=30805.636..30805.639 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=853025.23..853027.23 rows=200 width=8) (actual time=30805.566..30805.577 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5789.72 rows=574972 width=0) (actual time=27.592..27.592 rows=2566400 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.012..0.013 rows=1 loops=1196544)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.018..0.020 rows=4 loops=453756)
Q17,3.6,->  Nested Loop  (cost=82.54..113179.17 rows=19945 width=4) (actual time=1.589..298.404 rows=5401 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5779.20..1473951.41 rows=152710 width=16) (actual time=32.587..20151.463 rows=509373 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.017..0.051 rows=3 loops=1957)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247916.17 rows=33035756 width=0) (actual time=128.550..128.550 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.49 rows=1 width=8) (actual time=0.347..0.418 rows=3 loops=21567)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54672.35 rows=7284313 width=0) (actual time=27.465..27.465 rows=2558720 loops=1)
Q22,2.3,Sort  (cost=693644.11..693644.12 rows=3 width=20) (actual time=10540.479..10540.480 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640667.62..640667.66 rows=3 width=20) (actual time=10540.437..10540.439 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.98..10613277.84 rows=26897 width=4) (actual time=17.607..9352.989 rows=58634 loops=1)
Q20,2.1,->  Hash  (cost=10613277.84..10613277.84 rows=26897 width=4) (actual time=9389.432..9389.432 rows=58634 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.049..0.070 rows=2 loops=6458)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3071278.97..3071278.97 rows=1 width=27) (actual time=34928.467..34928.467 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3071278.95..3071278.96 rows=1 width=27) (actual time=34928.411..34928.412 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347334.75..2264001.81 rows=564645 width=175) (actual time=13375.161..45629.326 rows=1148468 loops=1)
Q10,2.0,->  Hash Join  (cost=347333.19..2256236.38 rows=564645 width=153) (actual time=13375.135..45169.192 rows=1148468 loops=1)
Q10,2.0,->  Hash Join  (cost=278305.19..2178738.71 rows=564645 width=12) (actual time=11500.911..42471.815 rows=1148468 loops=1)
Q16,1.9,->  Sort  (cost=404171.99..405667.47 rows=598194 width=40) (actual time=11305.749..11463.849 rows=1192092 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.487..4241.666 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54834.57..346774.51 rows=598194 width=40) (actual time=1469.386..7450.458 rows=1192092 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820675.73 rows=20055219 width=8) (actual time=0.015..20305.938 rows=37928885 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2328607.88 rows=391384 width=38) (actual time=34.899..36014.110 rows=735729 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1906310.20 rows=802209 width=34) (actual time=34.853..27864.142 rows=1522971 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.445 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616050.06..10616052.75 rows=1076 width=51) (actual time=9418.963..9419.053 rows=1757 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613657.05..10615995.87 rows=1076 width=51) (actual time=9389.886..9417.824 rows=1757 loops=1)
Q1,1.5,Sort  (cost=4187822.78..4187822.80 rows=6 width=20) (actual time=103564.377..103564.377 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4187822.60..4187822.71 rows=6 width=20) (actual time=103564.329..103564.330 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27421.22 rows=3650830 width=0) (actual time=27.751..27.751 rows=2563840 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.174..4.174 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2278117.94..2283764.39 rows=564645 width=175) (actual time=47915.525..48245.857 rows=381949 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.76 rows=140475 width=0) (actual time=472.935..472.935 rows=190927 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.88..41908.35 rows=140475 width=24) (actual time=481.499..711.577 rows=190927 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=130126 width=4) (actual time=0.016..741.514 rows=108168 loops=1)
Q9,1.2,->  Hash Join  (cost=67148.57..353311.61 rows=520504 width=16) (actual time=773.359..6111.947 rows=432672 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=130126 width=4) (actual time=772.806..772.806 rows=108168 loops=1)
Q9,1.1,GroupAggregate  (cost=1337809.45..1337814.98 rows=158 width=46) (actual time=109093.666..112263.515 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92364.56 rows=9221656 width=0) (actual time=144.438..144.438 rows=10803200 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.54 rows=17999 width=0) (actual time=9.282..9.282 rows=21567 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=6.072..2137.218 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.04..1670987.39 rows=120793 width=20) (actual time=12.577..9476.852 rows=122130 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.60..1475965.44 rows=398297 width=16) (actual time=12.485..4192.779 rows=403075 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.48..1717807.32 rows=24159 width=16) (actual time=2249.882..11945.486 rows=24487 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.05 rows=31 width=20) (actual time=0.026..0.290 rows=30 loops=13425)
Q8,1.0,->  Hash Join  (cost=38744.04..1718261.87 rows=24159 width=38) (actual time=2249.938..11985.764 rows=24487 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.19..1710012.10 rows=24159 width=16) (actual time=2249.858..11795.302 rows=24487 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2234.598..2234.598 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.73 rows=13240 width=0) (actual time=6.614..6.614 rows=13425 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.04..28006.04 rows=13240 width=4) (actual time=12.432..170.133 rows=13425 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.685..416.727 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=8) (actual time=0.006..4710.607 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2124695.00 rows=1477092 width=42) (actual time=652.781..28193.687 rows=1455067 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2136640.19 rows=61471 width=64) (actual time=697.948..28990.332 rows=58183 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535779.34 rows=1214394 width=30) (actual time=652.755..11841.752 rows=1196544 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..612.161 rows=119794 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..41.991 rows=7995 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=652.245..652.245 rows=119794 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=44.355..44.355 rows=7995 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92563.71..1380367.97 rows=796600 width=8) (actual time=145.294..30754.562 rows=794279 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.700..2016.103 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=66339.80..1855709.80 rows=1843967 width=46) (actual time=2172.347..24750.145 rows=1815881 loops=1)
Q5,1.0,->  Hash Join  (cost=71018.80..1874956.12 rows=73757 width=34) (actual time=2233.528..25718.450 rows=71982 loops=1)
Q5,1.0,->  Hash Join  (cost=66339.23..390665.39 rows=461103 width=38) (actual time=2172.302..15022.718 rows=453756 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2141.745..2141.745 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27997.60..339067.05 rows=2305513 width=8) (actual time=27.922..11638.334 rows=2278195 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.705..393.249 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5778.64..268457.64 rows=559867 width=20) (actual time=32.510..11022.425 rows=555233 loops=1)
Q3,1.0,->  Hash Join  (cost=106259.55..495038.83 rows=1460820 width=12) (actual time=715.881..12267.491 rows=1445622 loops=1)
Q3,1.0,->  Hash  (cost=495038.83..495038.83 rows=1460820 width=12) (actual time=12956.105..12956.105 rows=1445622 loops=1)
Q3,1.0,->  Hash  (cost=46005.93..46005.93 rows=300815 width=4) (actual time=685.681..685.681 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.54 rows=300815 width=0) (actual time=67.889..67.889 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56493.43..403348.34 rows=7284313 width=16) (actual time=27.630..8404.025 rows=7209310 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256175.11..1745166.06 rows=33035756 width=12) (actual time=129.298..35701.452 rows=32714094 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.74..46005.93 rows=300815 width=4) (actual time=77.007..592.935 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.013..4261.713 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=9578.310..9578.310 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596662.58..640222.16 rows=59394 width=20) (actual time=10136.276..10516.806 rows=63525 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6585.12 rows=383217 width=0) (actual time=101.396..101.396 rows=382301 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6680.92..52018.37 rows=383217 width=4) (actual time=110.061..345.259 rows=382301 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.290..33.557 rows=4023 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=34.785..34.785 rows=4023 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.275..32.905 rows=4023 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7067.145..7192.738 rows=1586875 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.308..143.439 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8032 width=30) (actual time=0.401..1320.199 rows=7985 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=154.848..5874.438 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=154.712..154.712 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.251..27.846 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.302..26.580 rows=3924 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.284..25.958 rows=3924 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.55..33178.44 rows=20019 width=4) (actual time=17.095..311.065 rows=21567 loops=1)
Q19,1.0,->  Nested Loop  (cost=12827.55..613303.34 rows=1141 width=8) (actual time=37.090..2232.125 rows=1146 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.177..4.177 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.51 rows=8081 width=0) (actual time=3.545..3.545 rows=8147 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.99 rows=7929 width=0) (actual time=3.753..3.753 rows=8017 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.55 rows=7885 width=0) (actual time=3.699..3.699 rows=7954 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12826.99..26538.30 rows=4763 width=30) (actual time=33.509..317.532 rows=4885 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..3399.525 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666929.20 rows=60045620 width=8) (actual time=0.004..10811.888 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666929.20 rows=60045620 width=8) (actual time=0.041..9435.761 rows=59985329 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.027..0.049 rows=30 loops=1957)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.027..0.049 rows=30 loops=1957)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.28 rows=1985 width=0) (actual time=0.901..0.901 rows=1957 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.77..6583.08 rows=1985 width=4) (actual time=1.227..60.443 rows=1957 loops=1)
Q16,1.0,Sort  (cost=414001.38..414071.49 rows=28041 width=40) (actual time=12130.815..12134.295 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51079.63..51079.63 rows=299097 width=40) (actual time=1466.820..1466.820 rows=298187 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404171.99..411929.82 rows=28041 width=40) (actual time=11305.811..12070.647 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2503.13..51079.63 rows=299097 width=40) (actual time=70.581..1326.109 rows=298187 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1996614.69 rows=2263748 width=12) (actual time=0.022..18265.999 rows=2249740 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1996614.69 rows=2263748 width=12) (actual time=0.024..18951.582 rows=2249740 loops=1)
Q14,1.0,->  Hash Join  (cost=93902.69..1167647.91 rows=803189 width=29) (actual time=1803.781..32494.121 rows=774307 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8380.69..1070078.07 rows=803189 width=12) (actual time=262.400..30009.863 rows=774307 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15044072 width=8) (actual time=0.020..7591.972 rows=14853593 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740304.87 rows=15044072 width=8) (actual time=1144.084..19333.310 rows=15353611 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..410122.07 rows=15254907 width=20) (actual time=0.014..4467.650 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2456123.76 rows=294293 width=15) (actual time=0.110..24087.244 rows=313235 loops=1)
Q12,1.0,->  Hash Join  (cost=600808.41..3066128.82 rows=294293 width=27) (actual time=10118.348..34591.502 rows=313235 loops=1)
Q12,1.0,->  Hash  (cost=410122.07..410122.07 rows=15254907 width=20) (actual time=10039.877..10039.877 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.310..24.413 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.283..53.499 rows=4004 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.339..3973.641 rows=320320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=54.654..4703.283 rows=320320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=54.609..54.609 rows=4004 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.272..25.272 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.279..23.764 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.262..52.768 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824308.20 rows=59087860 width=20) (actual time=0.012..27176.241 rows=58876691 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838829.58 rows=14921997 width=12) (actual time=0.015..27175.463 rows=14822649 loops=1)
Q10,1.0,->  Hash  (cost=271118.04..271118.04 rows=574972 width=8) (actual time=11496.308..11496.308 rows=574424 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5933.46..271118.04 rows=574972 width=8) (actual time=27.766..11271.239 rows=574424 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=403075)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1522971)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.18 rows=1 width=16) (actual time=0.345..0.390 rows=0 loops=4885)
Q19,,->  BitmapOr  (cost=12826.99..12826.99 rows=4767 width=0) (actual time=29.530..29.530 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6271.81..6271.81 rows=2411 width=0) (actual time=8.479..8.479 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4263.05..4263.05 rows=1568 width=0) (actual time=8.656..8.656 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2291.62..2291.62 rows=788 width=0) (actual time=8.715..8.715 rows=0 loops=1)
Q15,,->  Subquery Scan on revenue7  (cost=2036230.28..2036313.84 rows=3714 width=12) (actual time=41355.320..41355.320 rows=0 loops=1)
Q15,,->  Sort  (cost=2036534.06..2036543.34 rows=3714 width=12) (actual time=41355.335..41355.335 rows=0 loops=1)
Q15,,Merge Join  (cost=4055870.09..4060967.00 rows=3714 width=79) (actual time=41355.361..41355.361 rows=0 loops=1)
Q15,,->  HashAggregate  (cost=2036230.28..2036276.70 rows=3714 width=12) (actual time=41355.319..41355.319 rows=0 loops=1)

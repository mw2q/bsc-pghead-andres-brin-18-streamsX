Q21,714640.0,->  Nested Loop Semi Join  (cost=2406.31..2845824.41 rows=1 width=34) (actual time=33.228..42916.350 rows=714640 loops=1)
Q18,401104.3,->  GroupAggregate  (cost=10175126.84..11002404.63 rows=30082829 width=39) (actual time=75335.901..75336.155 rows=75 loops=1)
Q3,316899.4,->  Sort  (cost=2533055.58..2540978.07 rows=3168994 width=20) (actual time=40547.194..40547.195 rows=10 loops=1)
Q18,100299.6,->  Hash Join  (cost=2183889.93..2798700.89 rows=7522476 width=39) (actual time=49888.102..55101.566 rows=75 loops=1)
Q18,100299.6,->  Hash Join  (cost=2114861.93..2616835.75 rows=7522476 width=20) (actual time=49007.163..54220.305 rows=75 loops=1)
Q18,100299.6,->  Hash  (cost=2798700.89..2798700.89 rows=7522476 width=39) (actual time=55101.754..55101.754 rows=75 loops=1)
Q18,57300.6,->  Sort  (cost=10175126.84..10250333.91 rows=30082829 width=39) (actual time=75335.890..75335.917 rows=525 loops=1)
Q18,57300.6,->  Hash Join  (cost=2892731.84..5615892.43 rows=30082829 width=39) (actual time=55235.426..75335.106 rows=525 loops=1)
Q18,54770.3,->  Hash  (cost=2063514.76..2063514.76 rows=4107773 width=4) (actual time=48888.008..48888.008 rows=75 loops=1)
Q18,54770.3,->  HashAggregate  (cost=1971089.87..2022437.03 rows=4107773 width=8) (actual time=42335.602..48887.785 rows=75 loops=1)
Q21,40107.0,->  Nested Loop Anti Join  (cost=2406.88..2845826.20 rows=1 width=26) (actual time=34.733..46251.215 rows=40107 loops=1)
Q9,29712.1,->  Sort  (cost=1033744.66..1033744.94 rows=110 width=46) (actual time=114643.461..115319.874 rows=3268340 loops=1)
Q9,29712.1,->  Nested Loop  (cost=66649.38..1033737.31 rows=110 width=24) (actual time=689.534..104028.465 rows=3268340 loops=1)
Q9,29712.1,->  Nested Loop  (cost=66648.94..1033683.99 rows=110 width=24) (actual time=689.517..63159.370 rows=3268340 loops=1)
Q9,29712.1,->  Nested Loop  (cost=66648.65..1033648.50 rows=110 width=28) (actual time=689.508..50604.753 rows=3268340 loops=1)
Q9,29712.1,->  Hash Join  (cost=66650.94..1033740.93 rows=110 width=46) (actual time=689.587..107983.126 rows=3268340 loops=1)
Q10,28765.4,->  Sort  (cost=2293864.78..2295303.05 rows=575308 width=175) (actual time=35134.328..35134.333 rows=20 loops=1)
Q2,4722.0,->  Merge Join  (cost=465687.75..888481.79 rows=1 width=190) (actual time=7314.560..9353.139 rows=4722 loops=1)
Q21,4049.0,->  HashAggregate  (cost=2845826.20..2845826.21 rows=1 width=26) (actual time=46310.381..46311.536 rows=4049 loops=1)
Q15,3718.0,->  Subquery Scan on revenue1  (cost=1371527.60..1371611.26 rows=3718 width=12) (actual time=55671.574..55689.055 rows=1 loops=1)
Q15,3718.0,->  Sort  (cost=1371831.74..1371841.04 rows=3718 width=12) (actual time=55689.073..55689.074 rows=1 loops=1)
Q15,3718.0,Merge Join  (cost=2726580.18..2731677.15 rows=3718 width=79) (actual time=55703.257..55703.259 rows=1 loops=1)
Q15,3718.0,->  HashAggregate  (cost=1371527.60..1371574.08 rows=3718 width=12) (actual time=55671.573..55689.053 rows=1 loops=1)
Q7,768.0,Sort  (cost=2123129.73..2123137.41 rows=3072 width=64) (actual time=28859.567..28859.567 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2122905.71..2122951.79 rows=3072 width=64) (actual time=28859.501..28859.509 rows=4 loops=1)
Q8,365.0,Sort  (cost=1678990.72..1678992.55 rows=730 width=38) (actual time=13112.261..13112.261 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1678943.23..1678956.00 rows=730 width=38) (actual time=13112.219..13112.220 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=46312.695..46312.702 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=46312.697..46312.715 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=888481.80..888481.81 rows=1 width=190) (actual time=9358.155..9358.171 rows=100 loops=1)
Q2,100.0,Limit  (cost=888481.80..888481.81 rows=1 width=190) (actual time=9358.157..9358.185 rows=100 loops=1)
Q11,33.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8840.411..8841.905 rows=9650 loops=1)
Q11,33.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8724.610..8834.928 rows=9650 loops=1)
Q3,27.9,->  HashAggregate  (cost=2432884.82..2464574.76 rows=3168994 width=20) (actual time=40475.834..40526.110 rows=113346 loops=1)
Q15,26.8,->  HashAggregate  (cost=1354664.48..1354701.66 rows=3718 width=12) (actual time=28815.482..28850.716 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=741615)
Q14,13.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8370.57 rows=822257 width=0) (actual time=119.879..119.879 rows=10771200 loops=1)
Q3,10.5,->  Hash Join  (cost=763548.56..2385349.91 rows=3168994 width=20) (actual time=12507.846..40224.188 rows=299296 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2401.06 rows=318540 width=0) (actual time=35.282..35.282 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.019..0.101 rows=8 loops=435484)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.619..3.619 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.876..3.876 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1913101.23..1913101.30 rows=25 width=34) (actual time=26638.479..26638.479 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1913100.40..1913100.65 rows=25 width=34) (actual time=26638.440..26638.442 rows=5 loops=1)
Q4,5.0,Sort  (cost=1489599.49..1489599.49 rows=1 width=16) (actual time=14068.135..14068.136 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.23 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=562358)
Q4,5.0,->  HashAggregate  (cost=1489599.47..1489599.48 rows=1 width=16) (actual time=14068.089..14068.090 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=714640)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5711.15 rows=567115 width=0) (actual time=60.449..60.449 rows=2576640 loops=1)
Q13,4.3,Sort  (cost=850948.97..850949.47 rows=200 width=8) (actual time=29224.075..29224.078 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850939.33..850941.33 rows=200 width=8) (actual time=29224.008..29224.016 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5898.43 rows=585843 width=0) (actual time=32.087..32.087 rows=2558720 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.012..0.013 rows=1 loops=1198792)
Q17,3.8,->  Nested Loop  (cost=78.45..112668.98 rows=19893 width=4) (actual time=1.654..292.845 rows=5217 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.016..0.018 rows=4 loops=457763)
Q4,3.3,->  Nested Loop Semi Join  (cost=5853.49..1488835.92 rows=152710 width=16) (actual time=60.706..13757.983 rows=515565 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.029..0.062 rows=3 loops=2002)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241333.42 rows=32158056 width=0) (actual time=118.030..118.030 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.385..0.474 rows=3 loops=21730)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55436.98 rows=7386264 width=0) (actual time=27.291..27.291 rows=2538240 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..10.658 rows=35977 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44382.29 rows=5912305 width=0) (actual time=27.316..27.316 rows=2545920 loops=1)
Q22,2.3,Sort  (cost=698793.14..698793.14 rows=3 width=20) (actual time=8976.625..8976.626 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645907.16..645907.21 rows=3 width=20) (actual time=8976.578..8976.580 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.058 rows=2 loops=6437)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.204..4.204 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403270.24..404749.34 rows=591638 width=40) (actual time=12159.176..12331.422 rows=1189287 loops=1)
Q16,2.0,->  Hash Join  (cost=54674.48..346548.86 rows=591638 width=40) (actual time=1949.015..7966.778 rows=1189287 loops=1)
Q12,2.0,Sort  (cost=3041137.28..3041137.29 rows=1 width=27) (actual time=37953.796..37953.796 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041137.26..3041137.27 rows=1 width=27) (actual time=37953.744..37953.744 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902511.67 rows=800608 width=34) (actual time=32.700..30511.356 rows=1534314 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.48..11668629.61 rows=29587 width=4) (actual time=22.450..10573.380 rows=59033 loops=1)
Q20,1.9,->  Hash  (cost=11668629.61..11668629.61 rows=29587 width=4) (actual time=10611.849..10611.849 rows=59033 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.426..4316.899 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=346986.13..2258420.27 rows=575308 width=175) (actual time=10824.641..32713.433 rows=1150173 loops=1)
Q10,1.9,->  Hash Join  (cost=346984.57..2250508.22 rows=575308 width=153) (actual time=10824.612..32311.436 rows=1150173 loops=1)
Q10,1.9,->  Hash Join  (cost=277956.57..2172850.60 rows=575308 width=12) (actual time=8902.779..29576.057 rows=1150173 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.25 rows=20015207 width=8) (actual time=0.013..22780.580 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323953.49 rows=390603 width=38) (actual time=33.179..38336.330 rows=741615 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.386 rows=56 loops=1)
Q9,1.5,GroupAggregate  (cost=1033744.66..1033748.51 rows=110 width=46) (actual time=114653.493..117526.987 rows=175 loops=1)
Q1,1.5,Sort  (cost=4215697.58..4215697.59 rows=6 width=20) (actual time=104138.361..104138.361 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4215697.39..4215697.50 rows=6 width=20) (actual time=104138.311..104138.313 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2272802.97..2278556.05 rows=575308 width=175) (actual time=34727.497..34991.724 rows=382346 loops=1)
Q20,1.4,Sort  (cost=11671443.24..11671446.20 rows=1183 width=51) (actual time=10646.967..10647.067 rows=1773 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669042.45..11671382.86 rows=1183 width=51) (actual time=10612.296..10644.628 rows=1773 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.04 rows=139807 width=0) (actual time=682.707..682.707 rows=190451 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.00..41855.93 rows=139807 width=24) (actual time=691.634..1087.973 rows=190451 loops=1)
Q18,1.3,Limit  (cost=10175126.84..10175129.59 rows=100 width=39) (actual time=75335.904..75336.164 rows=75 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=90087 width=4) (actual time=0.009..657.544 rows=108871 loops=1)
Q9,1.2,->  Hash Join  (cost=66648.09..351209.57 rows=360348 width=16) (actual time=689.391..5454.478 rows=435484 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=90087 width=4) (actual time=688.894..688.894 rows=108871 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92512.12 rows=9236412 width=0) (actual time=119.420..119.420 rows=10718720 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.740..1984.093 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.99..1631392.77 rows=118141 width=20) (actual time=6.851..10633.516 rows=119776 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.56..1440643.73 rows=389553 width=16) (actual time=6.738..5027.999 rows=393792 loops=1)
Q8,1.0,->  Nested Loop  (cost=38727.43..1678026.08 rows=23628 width=16) (actual time=2109.299..13026.841 rows=23983 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.69 rows=31 width=20) (actual time=0.029..0.356 rows=30 loops=13119)
Q8,1.0,->  Hash Join  (cost=38728.99..1678470.67 rows=23628 width=38) (actual time=2109.346..13069.268 rows=23983 loops=1)
Q8,1.0,->  Hash Join  (cost=38727.14..1670402.23 rows=23628 width=16) (actual time=2109.289..12820.032 rows=23983 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2099.527..2099.527 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.78 rows=12847 width=0) (actual time=4.465..4.465 rows=13119 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.99..27511.61 rows=12847 width=4) (actual time=6.684..199.050 rows=13119 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.656..387.476 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.007..4239.389 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2110101.54 rows=1466887 width=42) (actual time=952.361..27950.608 rows=1455093 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2121990.02 rows=61046 width=64) (actual time=1017.578..28750.773 rows=58028 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=952.232..11657.469 rows=1198792 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..900.853 rows=119899 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..62.637 rows=8011 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=951.647..951.647 rows=119899 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=65.120..65.120 rows=8011 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92714.63..1372328.90 rows=810027 width=8) (actual time=120.191..30677.445 rows=796670 loops=1)
Q5,1.0,->  Nested Loop  (cost=83296.17..1893241.06 rows=1828960 width=46) (actual time=2445.109..25472.437 rows=1830062 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.244..2284.027 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87975.17..1912368.83 rows=73157 width=34) (actual time=2523.238..26510.028 rows=73101 loops=1)
Q5,1.0,->  Hash Join  (cost=83295.60..439662.87 rows=457346 width=38) (actual time=2445.088..16295.912 rows=457763 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2414.999..2414.999 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44953.97..388172.54 rows=2286730 width=8) (actual time=27.482..12551.701 rows=2283946 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.914..445.684 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5852.93..271932.65 rows=567115 width=20) (actual time=60.635..5433.187 rows=562358 loops=1)
Q3,1.0,->  Hash Join  (cost=107048.68..495661.65 rows=1481118 width=12) (actual time=440.284..11797.468 rows=1473601 loops=1)
Q3,1.0,->  Hash  (cost=495661.65..495661.65 rows=1481118 width=12) (actual time=12378.621..12378.621 rows=1473601 loops=1)
Q3,1.0,->  Hash  (cost=46005.32..46005.32 rows=300785 width=4) (actual time=410.334..410.334 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.31 rows=300785 width=0) (actual time=69.625..69.625 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57283.54..403386.84 rows=7386264 width=16) (actual time=27.445..8560.782 rows=7365599 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249372.94..1718891.64 rows=32158056 width=12) (actual time=118.790..22000.941 rows=32090802 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.51..46005.32 rows=300785 width=4) (actual time=78.701..330.768 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=4) (actual time=0.017..3517.365 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408911.95..408911.95 rows=15209895 width=4) (actual time=7668.394..7668.394 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601943.63..645463.82 rows=59112 width=20) (actual time=8425.900..8945.503 rows=63522 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.47 rows=381394 width=0) (actual time=84.233..84.233 rows=381830 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6642.81..51932.41 rows=381394 width=4) (actual time=92.902..553.326 rows=381830 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.269..31.518 rows=4049 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.653..32.653 rows=4049 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.258..30.856 rows=4049 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7314.221..7449.294 rows=1602991 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.313..139.309 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7991 width=30) (actual time=0.019..1185.612 rows=7992 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=150.891..6025.998 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=150.744..150.744 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.260..26.981 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.269..30.736 rows=4054 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=17.954..17.954 rows=21730 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.255..30.113 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=21.786..249.323 rows=21730 loops=1)
Q19,1.0,->  Nested Loop  (cost=12826.88..607702.94 rows=1133 width=8) (actual time=35.292..1848.263 rows=1162 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.199..4.199 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.83 rows=8011 width=0) (actual time=3.625..3.625 rows=8048 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.79 rows=8009 width=0) (actual time=3.656..3.656 rows=8078 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.83 rows=7811 width=0) (actual time=3.426..3.426 rows=8011 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12826.31..26427.94 rows=4715 width=30) (actual time=33.171..176.634 rows=4862 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.006..2342.591 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.58 rows=60165658 width=8) (actual time=0.005..9752.760 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.58 rows=60165658 width=8) (actual time=0.059..9239.889 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.027..0.047 rows=30 loops=2002)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.027..0.047 rows=30 loops=2002)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.19 rows=1976 width=0) (actual time=0.957..0.957 rows=2002 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.68..6551.70 rows=1976 width=4) (actual time=1.283..33.004 rows=2002 loops=1)
Q16,1.0,Sort  (cost=412989.74..413059.07 rows=27734 width=40) (actual time=13000.578..13004.180 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50960.51..50960.51 rows=295819 width=40) (actual time=1946.550..1946.550 rows=297479 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403270.24..410943.06 rows=27734 width=40) (actual time=12159.233..12940.860 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2475.01..50960.51 rows=295819 width=40) (actual time=35.352..1802.320 rows=297479 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..85999.73 rows=11446898 width=0) (actual time=206.521..206.521 rows=10739200 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..85999.73 rows=11446898 width=0) (actual time=120.831..120.831 rows=10739200 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=86561.84..1332180.31 rows=2248417 width=12) (actual time=121.608..26524.684 rows=2246439 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=86561.84..1332180.31 rows=2248417 width=12) (actual time=207.340..24621.154 rows=2246439 loops=1)
Q14,1.0,->  Hash Join  (cost=94098.14..1172160.08 rows=822257 width=29) (actual time=1740.888..28180.982 rows=773385 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8576.14..1074304.22 rows=822257 width=12) (actual time=120.660..25539.739 rows=773385 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14983807 width=8) (actual time=0.017..8037.260 rows=14852857 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738520.29 rows=14983807 width=8) (actual time=845.145..18459.823 rows=15352875 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.013..5710.352 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431964.00 rows=292737 width=15) (actual time=0.084..25472.652 rows=312812 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3036014.36 rows=292737 width=27) (actual time=11669.147..37506.317 rows=312812 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=11571.445..11571.445 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.291..24.317 rows=3987 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.288..70.268 rows=3987 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.202..4048.507 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=71.323..4334.337 rows=318960 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=71.283..71.283 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.152..25.152 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.262..23.685 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.265..69.591 rows=3987 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1841632.31 rows=59351627 width=20) (actual time=0.019..27893.986 rows=58513798 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.20 rows=14877533 width=12) (actual time=0.037..17185.703 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=270633.53..270633.53 rows=585843 width=8) (actual time=8897.363..8897.363 rows=575638 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6044.89..270633.53 rows=585843 width=8) (actual time=32.279..8653.097 rows=575638 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.014 rows=0 loops=393792)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1534314)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.27 rows=1 width=16) (actual time=0.299..0.342 rows=0 loops=4862)
Q19,,->  BitmapOr  (cost=12826.31..12826.31 rows=4719 width=0) (actual time=29.303..29.303 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6253.11..6253.11 rows=2330 width=0) (actual time=8.353..8.353 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.31..4280.31 rows=1593 width=0) (actual time=8.642..8.642 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.40..2292.40 rows=796 width=0) (actual time=8.632..8.632 rows=0 loops=1)

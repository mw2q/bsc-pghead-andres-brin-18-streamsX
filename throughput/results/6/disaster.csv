Q21,705925.0,->  Nested Loop Semi Join  (cost=2406.31..2891531.67 rows=1 width=34) (actual time=37.545..36014.887 rows=705925 loops=1)
Q18,403896.6,->  GroupAggregate  (cost=10245720.45..11078757.27 rows=30292248 width=39) (actual time=78416.557..78416.807 rows=75 loops=1)
Q3,314423.5,->  Sort  (cost=2535145.88..2543006.46 rows=3144235 width=20) (actual time=46834.349..46834.350 rows=10 loops=1)
Q18,100999.7,->  Hash Join  (cost=2197611.50..2816426.86 rows=7574980 width=39) (actual time=50434.562..57756.068 rows=75 loops=1)
Q18,100999.7,->  Hash Join  (cost=2128583.50..2633774.16 rows=7574980 width=20) (actual time=49551.446..56872.686 rows=75 loops=1)
Q18,100999.7,->  Hash  (cost=2816426.86..2816426.86 rows=7574980 width=39) (actual time=57756.262..57756.262 rows=75 loops=1)
Q18,57699.5,->  Sort  (cost=10245720.45..10321451.07 rows=30292248 width=39) (actual time=78416.547..78416.571 rows=525 loops=1)
Q18,57699.5,->  Hash Join  (cost=2911114.11..5653231.77 rows=30292248 width=39) (actual time=57817.920..78415.769 rows=525 loops=1)
Q18,54770.3,->  Hash  (cost=2077236.33..2077236.33 rows=4107773 width=4) (actual time=49464.224..49464.224 rows=75 loops=1)
Q18,54770.3,->  HashAggregate  (cost=1984811.44..2036158.60 rows=4107773 width=8) (actual time=42877.692..49463.997 rows=75 loops=1)
Q21,39991.0,->  Nested Loop Anti Join  (cost=2406.88..2891533.46 rows=1 width=26) (actual time=38.485..38789.888 rows=39991 loops=1)
Q10,27897.7,->  Sort  (cost=2272373.65..2273768.53 rows=557955 width=175) (actual time=40351.989..40351.992 rows=20 loops=1)
Q9,23043.7,->  Sort  (cost=1231047.68..1231048.03 rows=141 width=46) (actual time=116560.488..117204.083 rows=3249167 loops=1)
Q9,23043.7,->  Nested Loop  (cost=66974.69..1231038.44 rows=141 width=24) (actual time=1114.678..106559.037 rows=3249167 loops=1)
Q9,23043.7,->  Nested Loop  (cost=66974.26..1230970.11 rows=141 width=24) (actual time=1114.658..65006.273 rows=3249167 loops=1)
Q9,23043.7,->  Nested Loop  (cost=66973.96..1230924.61 rows=141 width=28) (actual time=1114.647..52296.573 rows=3249167 loops=1)
Q9,23043.7,->  Hash Join  (cost=66976.25..1231042.65 rows=141 width=46) (actual time=1114.737..110435.090 rows=3249167 loops=1)
Q2,4769.0,->  Merge Join  (cost=465687.75..891119.89 rows=1 width=190) (actual time=8189.941..10127.040 rows=4769 loops=1)
Q21,3988.0,->  HashAggregate  (cost=2891533.46..2891533.47 rows=1 width=26) (actual time=38843.026..38844.190 rows=3988 loops=1)
Q15,3682.0,->  Subquery Scan on revenue6  (cost=1725092.80..1725175.64 rows=3682 width=12) (actual time=84107.735..84107.997 rows=1 loops=1)
Q15,3682.0,->  Sort  (cost=1725393.73..1725402.94 rows=3682 width=12) (actual time=84108.014..84108.015 rows=1 loops=1)
Q15,3682.0,Merge Join  (cost=3433951.95..3439048.38 rows=3682 width=79) (actual time=84121.908..84121.910 rows=1 loops=1)
Q15,3682.0,->  HashAggregate  (cost=1725092.80..1725138.82 rows=3682 width=12) (actual time=84107.735..84107.995 rows=1 loops=1)
Q7,768.0,Sort  (cost=2131500.70..2131508.38 rows=3072 width=64) (actual time=24784.252..24784.252 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2131276.67..2131322.75 rows=3072 width=64) (actual time=24784.190..24784.192 rows=4 loops=1)
Q8,365.0,Sort  (cost=1734214.18..1734216.01 rows=730 width=38) (actual time=25010.167..25010.167 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1734166.69..1734179.47 rows=730 width=38) (actual time=25010.129..25010.131 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2891533.48..2891533.49 rows=1 width=26) (actual time=38845.334..38845.342 rows=100 loops=1)
Q21,100.0,Limit  (cost=2891533.48..2891533.49 rows=1 width=26) (actual time=38845.336..38845.350 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=891119.90..891119.90 rows=1 width=190) (actual time=10132.101..10132.118 rows=100 loops=1)
Q2,100.0,Limit  (cost=891119.90..891119.90 rows=1 width=190) (actual time=10132.103..10132.125 rows=100 loops=1)
Q11,38.0,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7482.909..7483.888 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7375.100..7478.159 rows=8406 loops=1)
Q3,27.7,->  HashAggregate  (cost=2435757.74..2467200.09 rows=3144235 width=20) (actual time=46762.886..46813.373 rows=113160 loops=1)
Q15,27.1,->  HashAggregate  (cost=1708475.07..1708511.89 rows=3682 width=12) (actual time=46042.768..46079.813 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=732284)
Q14,14.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7493.00 rows=734500 width=0) (actual time=219.731..219.731 rows=10824960 loops=1)
Q3,10.5,->  Hash Join  (cost=763222.73..2388594.21 rows=3144235 width=20) (actual time=11870.508..46502.746 rows=298606 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2392.91 rows=317453 width=0) (actual time=34.806..34.806 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.020..0.103 rows=8 loops=432928)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.623..3.623 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.654..3.654 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.276..0.276 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1881454.85..1881454.91 rows=25 width=34) (actual time=20748.330..20748.330 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1881454.02..1881454.27 rows=25 width=34) (actual time=20748.290..20748.291 rows=5 loops=1)
Q4,5.0,Sort  (cost=1499607.70..1499607.70 rows=1 width=16) (actual time=15861.208..15861.208 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574186)
Q4,5.0,->  HashAggregate  (cost=1499607.68..1499607.69 rows=1 width=16) (actual time=15861.157..15861.157 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=705925)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5852.50 rows=581250 width=0) (actual time=29.227..29.227 rows=2558720 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5721.63 rows=568163 width=0) (actual time=27.235..27.235 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=848603.48..848603.98 rows=200 width=8) (actual time=30975.056..30975.059 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=848593.84..848595.84 rows=200 width=8) (actual time=30974.989..30974.999 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1201392)
Q17,3.9,->  Nested Loop  (cost=83.06..116054.51 rows=20701 width=4) (actual time=1.585..214.918 rows=5292 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.017..0.019 rows=4 loops=455252)
Q4,3.3,->  Nested Loop Semi Join  (cost=5998.38..1498819.67 rows=157601 width=16) (actual time=29.418..15547.886 rows=526618 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=1962)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243095.45 rows=32392993 width=0) (actual time=162.251..162.251 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.356..0.426 rows=3 loops=21740)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54950.56 rows=7321409 width=0) (actual time=30.111..30.111 rows=2538240 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..10.210 rows=35992 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..205818.39 rows=27422719 width=0) (actual time=138.263..138.263 rows=10696960 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..205818.39 rows=27422719 width=0) (actual time=128.778..128.778 rows=10686720 loops=1)
Q22,2.3,Sort  (cost=696395.27..696395.28 rows=3 width=20) (actual time=9889.344..9889.345 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643530.90..643530.95 rows=3 width=20) (actual time=9889.294..9889.297 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.049..0.069 rows=2 loops=6503)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.182..4.182 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402901.43..404373.55 rows=588846 width=40) (actual time=11356.376..11538.723 rows=1186485 loops=1)
Q16,2.0,->  Hash Join  (cost=54621.35..346467.81 rows=588846 width=40) (actual time=1593.672..7247.573 rows=1186485 loops=1)
Q12,2.0,Sort  (cost=3056203.90..3056203.90 rows=1 width=27) (actual time=34469.327..34469.328 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056203.88..3056203.89 rows=1 width=27) (actual time=34469.279..34469.280 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344039.72..2237998.24 rows=557955 width=175) (actual time=14729.064..37779.786 rows=1135709 loops=1)
Q10,2.0,->  Hash Join  (cost=344038.16..2230324.79 rows=557955 width=153) (actual time=14729.035..37347.791 rows=1135709 loops=1)
Q10,2.0,->  Hash Join  (cost=275010.16..2152927.47 rows=557955 width=12) (actual time=13328.214..35083.623 rows=1135709 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.70..11668646.46 rows=29587 width=4) (actual time=13.230..9606.240 rows=59151 loops=1)
Q20,1.9,->  Hash  (cost=11668646.46..11668646.46 rows=29587 width=4) (actual time=9641.821..9641.821 rows=59151 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.438..3944.680 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1846074.09 rows=20334989 width=8) (actual time=0.014..18018.188 rows=37965619 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2361150.78 rows=396844 width=38) (actual time=37.508..31566.256 rows=732284 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1932869.61 rows=813400 width=34) (actual time=37.439..24742.861 rows=1514380 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.033..0.402 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671460.09..11671463.04 rows=1183 width=51) (actual time=9672.655..9672.747 rows=1791 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669059.29..11671399.71 rows=1183 width=51) (actual time=9642.275..9671.133 rows=1791 loops=1)
Q1,1.5,Sort  (cost=4228283.04..4228283.05 rows=6 width=20) (actual time=102887.101..102887.102 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4228282.86..4228282.96 rows=6 width=20) (actual time=102887.051..102887.054 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27502.31 rows=3661641 width=0) (actual time=63.284..63.284 rows=2571520 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.162..4.162 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2251947.11..2257526.66 rows=557955 width=175) (actual time=39995.707..40211.158 rows=378505 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.87 rows=139590 width=0) (actual time=775.967..775.967 rows=190141 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2905.77..41848.01 rows=139590 width=24) (actual time=784.749..925.164 rows=190141 loops=1)
Q18,1.3,Limit  (cost=10245720.45..10245723.20 rows=100 width=39) (actual time=78416.561..78416.819 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=1231047.68..1231052.62 rows=141 width=46) (actual time=116570.614..119352.245 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91546.80 rows=9139880 width=0) (actual time=215.015..215.015 rows=10708480 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116112 width=4) (actual time=0.018..1068.255 rows=108232 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.40..352575.88 rows=464448 width=16) (actual time=1114.531..6339.215 rows=432928 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116112 width=4) (actual time=1107.733..1107.733 rows=108232 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.804..2151.892 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.36..1686267.01 rows=122617 width=20) (actual time=7.170..22335.446 rows=121870 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.93..1488296.09 rows=404313 width=16) (actual time=7.061..17158.453 rows=400762 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.80..1733214.86 rows=24523 width=16) (actual time=2259.707..24900.452 rows=24374 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.36..1733676.23 rows=24523 width=38) (actual time=2259.753..24958.213 rows=24374 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.51..1725302.21 rows=24523 width=16) (actual time=2259.690..24696.143 rows=24374 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2249.933..2249.933 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.93 rows=13400 width=0) (actual time=4.741..4.741 rows=13343 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.032..0.032 rows=30 loops=13343)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.28..28203.15 rows=13400 width=4) (actual time=6.986..173.256 rows=13343 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.114..1.228 rows=30 loops=13343)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.658..420.303 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.007..2973.438 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1472690 width=42) (actual time=728.797..23871.423 rows=1462200 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130357.37 rows=61287 width=64) (actual time=772.035..24681.135 rows=57941 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=728.739..10067.392 rows=1201392 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..685.715 rows=120069 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.041..40.632 rows=7983 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=728.210..728.210 rows=120069 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=42.873..42.873 rows=7983 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91737.61..1368121.91 rows=763239 width=8) (actual time=215.804..32439.185 rows=762751 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.726..2367.877 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=66422.59..1861424.81 rows=1849427 width=46) (actual time=2560.222..19698.316 rows=1820721 loops=1)
Q5,1.0,->  Hash Join  (cost=71101.59..1880714.27 rows=73975 width=34) (actual time=2668.085..20638.813 rows=72953 loops=1)
Q5,1.0,->  Hash Join  (cost=66422.02..391708.59 rows=462468 width=38) (actual time=2560.196..10013.693 rows=455252 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2494.173..2494.173 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=28080.39..340071.01 rows=2312340 width=8) (actual time=63.453..6216.487 rows=2278219 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.687..461.896 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5997.81..270517.56 rows=581250 width=20) (actual time=29.393..7053.502 rows=574186 loops=1)
Q3,1.0,->  Hash Join  (cost=106456.15..493792.93 rows=1458888 width=12) (actual time=2238.482..11150.971 rows=1456776 loops=1)
Q3,1.0,->  Hash  (cost=493792.93..493792.93 rows=1458888 width=12) (actual time=11699.003..11699.003 rows=1456776 loops=1)
Q3,1.0,->  Hash  (cost=45939.05..45939.05 rows=298895 width=4) (actual time=2201.686..2201.686 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6850.14 rows=298895 width=0) (actual time=69.615..69.615 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56780.92..402073.53 rows=7321409 width=16) (actual time=30.275..6156.568 rows=7303203 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251193.70..1723649.11 rows=32392993 width=12) (actual time=163.007..28511.881 rows=32340889 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6924.86..45939.05 rows=298895 width=4) (actual time=78.604..2087.578 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=4) (actual time=0.015..3547.878 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=4) (actual time=8736.759..8736.759 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599580.85..643088.25 rows=59020 width=20) (actual time=9602.061..9867.432 rows=63385 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6543.00 rows=380803 width=0) (actual time=99.075..99.075 rows=381162 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6638.20..51912.28 rows=380803 width=4) (actual time=108.697..639.237 rows=381162 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.302..36.197 rows=3988 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=37.389..37.389 rows=3988 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.287..35.489 rows=3988 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=8189.684..8311.308 rows=1602664 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.299..148.307 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8059 width=30) (actual time=0.055..1008.428 rows=8101 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=159.964..6876.044 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=159.822..159.822 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.258..28.809 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.309..27.463 rows=3995 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.76 rows=20021 width=0) (actual time=8.963..8.963 rows=21740 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.292..26.853 rows=3995 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.27..34907.18 rows=22021 width=4) (actual time=12.669..306.696 rows=21740 loops=1)
Q19,1.0,->  Nested Loop  (cost=12845.46..616038.51 rows=1156 width=8) (actual time=38.281..1992.148 rows=1149 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.190..4.190 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.55 rows=8085 width=0) (actual time=3.777..3.777 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.71 rows=7999 width=0) (actual time=3.772..3.772 rows=7925 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.67 rows=7996 width=0) (actual time=3.527..3.527 rows=8154 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12844.90..26602.08 rows=4784 width=30) (actual time=33.533..132.552 rows=4864 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.006..3876.617 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681888.96 rows=60584496 width=8) (actual time=0.007..10774.396 rows=59984384 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681888.96 rows=60584496 width=8) (actual time=0.008..10016.819 rows=59984384 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.049 rows=30 loops=1962)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.049 rows=30 loops=1962)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.79 rows=2036 width=0) (actual time=0.934..0.934 rows=1962 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.30..6731.84 rows=2036 width=4) (actual time=1.264..31.915 rows=1962 loops=1)
Q16,1.0,Sort  (cost=412574.11..412643.12 rows=27603 width=40) (actual time=12209.736..12213.325 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50924.84..50924.84 rows=294423 width=40) (actual time=1590.743..1590.743 rows=296778 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402901.43..410538.04 rows=27603 width=40) (actual time=11356.444..12149.310 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2466.51..50924.84 rows=294423 width=40) (actual time=34.853..1462.863 rows=296778 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=206372.31..1686318.10 rows=2215697 width=12) (actual time=139.019..43631.520 rows=2245297 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=206372.31..1686318.10 rows=2215697 width=12) (actual time=129.537..35601.478 rows=2245297 loops=1)
Q14,1.0,->  Hash Join  (cost=93198.62..1137835.93 rows=734500 width=29) (actual time=1721.476..35996.661 rows=749776 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7676.62..1041296.43 rows=734500 width=12) (actual time=220.551..33601.516 rows=749776 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442970.50 rows=14954767 width=8) (actual time=0.019..6997.842 rows=14853598 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..736320.01 rows=14954767 width=8) (actual time=856.179..18688.533 rows=15353616 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.013..4145.153 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444050.68 rows=293289 width=15) (actual time=0.025..25127.594 rows=312975 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051071.32 rows=293289 width=27) (actual time=8632.597..34137.690 rows=312975 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=8581.276..8581.276 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.318..24.582 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..36.410 rows=4095 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.531..2608.993 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.510..4340.559 rows=327600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.440..37.440 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.463..25.463 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.285..23.905 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..35.709 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1838829.58 rows=59736332 width=20) (actual time=0.014..26730.001 rows=59045537 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.25 rows=14745203 width=12) (actual time=0.011..18315.935 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=267908.12..267908.12 rows=568163 width=8) (actual time=13323.643..13323.643 rows=567783 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5863.68..267908.12 rows=568163 width=8) (actual time=27.410..13077.549 rows=567783 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=400762)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1514380)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.20 rows=1 width=16) (actual time=0.345..0.381 rows=0 loops=4864)
Q19,,->  BitmapOr  (cost=12844.90..12844.90 rows=4788 width=0) (actual time=29.690..29.690 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.98..6270.98 rows=2386 width=0) (actual time=8.456..8.456 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4281.06..4281.06 rows=1607 width=0) (actual time=8.798..8.798 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.35..2292.35 rows=795 width=0) (actual time=8.750..8.750 rows=0 loops=1)

Q21,704005.0,->  Nested Loop Semi Join  (cost=2406.31..2888664.94 rows=1 width=34) (actual time=54.159..40789.775 rows=704005 loops=1)
Q18,353288.1,->  GroupAggregate  (cost=10276221.74..11111748.27 rows=30382783 width=39) (actual time=76318.708..76318.998 rows=86 loops=1)
Q3,317246.4,->  Sort  (cost=2535549.06..2543480.22 rows=3172464 width=20) (actual time=52025.930..52025.932 rows=10 loops=1)
Q18,88342.5,->  Hash Join  (cost=2203543.55..2824073.14 rows=7597456 width=39) (actual time=49531.656..54986.579 rows=86 loops=1)
Q18,88342.5,->  Hash Join  (cost=2134515.55..2641083.30 rows=7597456 width=20) (actual time=48644.755..54099.423 rows=86 loops=1)
Q18,88342.5,->  Hash  (cost=2824073.14..2824073.14 rows=7597456 width=39) (actual time=54986.774..54986.774 rows=86 loops=1)
Q18,50469.7,->  Sort  (cost=10276221.74..10352178.69 rows=30382783 width=39) (actual time=76318.698..76318.732 rows=602 loops=1)
Q18,50469.7,->  Hash Join  (cost=2919041.34..5669354.43 rows=30382783 width=39) (actual time=55101.902..76317.860 rows=602 loops=1)
Q18,47764.8,->  Hash  (cost=2083168.38..2083168.38 rows=4107773 width=4) (actual time=48560.776..48560.776 rows=86 loops=1)
Q18,47764.8,->  HashAggregate  (cost=1990743.49..2042090.65 rows=4107773 width=8) (actual time=40747.280..48560.521 rows=86 loops=1)
Q21,39758.0,->  Nested Loop Anti Join  (cost=2406.88..2888666.73 rows=1 width=26) (actual time=59.931..43874.122 rows=39758 loops=1)
Q10,28506.5,->  Sort  (cost=2291013.03..2292438.36 rows=570131 width=175) (actual time=34275.501..34275.505 rows=20 loops=1)
Q9,25467.3,->  Sort  (cost=1154797.02..1154797.35 rows=129 width=46) (actual time=108401.698..109115.419 rows=3285283 loops=1)
Q9,25467.3,->  Nested Loop  (cost=66849.58..1154788.52 rows=129 width=24) (actual time=988.884..98166.815 rows=3285283 loops=1)
Q9,25467.3,->  Nested Loop  (cost=66849.15..1154726.00 rows=129 width=24) (actual time=988.839..60155.401 rows=3285283 loops=1)
Q9,25467.3,->  Nested Loop  (cost=66848.85..1154684.38 rows=129 width=28) (actual time=988.823..47998.154 rows=3285283 loops=1)
Q9,25467.3,->  Hash Join  (cost=66851.14..1154792.50 rows=129 width=46) (actual time=988.941..101886.134 rows=3285283 loops=1)
Q2,4720.0,->  Merge Join  (cost=465687.75..894002.25 rows=1 width=190) (actual time=5363.755..7410.649 rows=4720 loops=1)
Q21,3989.0,->  HashAggregate  (cost=2888666.73..2888666.74 rows=1 width=26) (actual time=43931.367..43932.473 rows=3989 loops=1)
Q15,3782.0,->  Subquery Scan on revenue16  (cost=1444918.68..1445003.78 rows=3782 width=12) (actual time=59190.367..59209.454 rows=1 loops=1)
Q15,3782.0,->  Sort  (cost=1445228.52..1445237.97 rows=3782 width=12) (actual time=59209.475..59209.476 rows=1 loops=1)
Q15,3782.0,Merge Join  (cost=2873046.08..2878144.02 rows=3782 width=79) (actual time=59216.096..59216.098 rows=1 loops=1)
Q15,3782.0,->  HashAggregate  (cost=1444918.68..1444965.96 rows=3782 width=12) (actual time=59190.366..59209.451 rows=1 loops=1)
Q7,768.0,Sort  (cost=2156245.18..2156252.86 rows=3072 width=64) (actual time=27765.176..27765.177 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2156021.16..2156067.24 rows=3072 width=64) (actual time=27765.115..27765.122 rows=4 loops=1)
Q8,365.0,Sort  (cost=1750546.55..1750548.37 rows=730 width=38) (actual time=27613.142..27613.143 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1750499.05..1750511.83 rows=730 width=38) (actual time=27613.101..27613.102 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2888666.75..2888666.76 rows=1 width=26) (actual time=43933.591..43933.599 rows=100 loops=1)
Q21,100.0,Limit  (cost=2888666.75..2888666.76 rows=1 width=26) (actual time=43933.593..43933.610 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=894002.26..894002.26 rows=1 width=190) (actual time=7415.699..7415.715 rows=100 loops=1)
Q2,100.0,Limit  (cost=894002.26..894002.26 rows=1 width=190) (actual time=7415.701..7415.726 rows=100 loops=1)
Q11,31.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=5943.453..5944.676 rows=10265 loops=1)
Q11,31.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=5852.304..5937.719 rows=10265 loops=1)
Q3,27.8,->  HashAggregate  (cost=2435268.62..2466993.26 rows=3172464 width=20) (actual time=51952.359..52003.929 rows=114093 loops=1)
Q15,26.4,->  HashAggregate  (cost=1427732.17..1427769.99 rows=3782 width=12) (actual time=24381.102..24423.044 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=730906)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7710.89 rows=756289 width=0) (actual time=119.521..119.521 rows=10712320 loops=1)
Q3,10.5,->  Hash Join  (cost=764263.75..2387681.66 rows=3172464 width=20) (actual time=13226.611..51676.827 rows=301926 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2406.86 rows=319313 width=0) (actual time=34.829..34.829 rows=3246080 loops=1)
Q15,10.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..4.632 rows=9914 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.018..0.095 rows=8 loops=437776)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.716..3.716 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.598..3.598 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.289..0.289 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.012..0.013 rows=1 loops=1197958)
Q5,5.0,Sort  (cost=2007813.61..2007813.67 rows=25 width=34) (actual time=17581.894..17581.894 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2007812.78..2007813.03 rows=25 width=34) (actual time=17581.851..17581.852 rows=5 loops=1)
Q4,5.0,Sort  (cost=1477888.01..1477888.01 rows=1 width=16) (actual time=13868.574..13868.574 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.22 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=562631)
Q4,5.0,->  HashAggregate  (cost=1477887.99..1477888.00 rows=1 width=16) (actual time=13868.523..13868.523 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704005)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5655.40 rows=561540 width=0) (actual time=51.525..51.525 rows=2551040 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5845.74 rows=580574 width=0) (actual time=27.569..27.569 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=855680.09..855680.59 rows=200 width=8) (actual time=31417.239..31417.241 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855670.45..855672.45 rows=200 width=8) (actual time=31417.170..31417.181 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=455295)
Q17,3.7,->  Nested Loop  (cost=82.54..113179.17 rows=19972 width=4) (actual time=1.642..219.557 rows=5297 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5796.35..1477124.44 rows=152710 width=16) (actual time=51.723..13563.195 rows=516113 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.020..0.041 rows=3 loops=1985)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241573.36 rows=32190047 width=0) (actual time=118.753..118.753 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.49 rows=1 width=8) (actual time=0.436..0.510 rows=3 loops=21781)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55492.21 rows=7393627 width=0) (actual time=30.115..30.115 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=693952.15..693952.15 rows=3 width=20) (actual time=10311.695..10311.695 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641141.27..641141.32 rows=3 width=20) (actual time=10311.646..10311.647 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=677.98..10613277.84 rows=26897 width=4) (actual time=20.355..11473.508 rows=59241 loops=1)
Q20,2.2,->  Hash  (cost=10613277.84..10613277.84 rows=26897 width=4) (actual time=11511.235..11511.235 rows=59241 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.054 rows=2 loops=6421)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.193..4.193 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403387.83..404868.86 rows=592412 width=40) (actual time=10281.137..10437.245 rows=1184879 loops=1)
Q16,2.0,->  Hash Join  (cost=54704.54..346586.66 rows=592412 width=40) (actual time=1186.622..6643.785 rows=1184879 loops=1)
Q12,2.0,Sort  (cost=3056146.08..3056146.09 rows=1 width=27) (actual time=36234.951..36234.951 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056146.06..3056146.07 rows=1 width=27) (actual time=36234.900..36234.900 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346534.23..2255887.46 rows=570131 width=175) (actual time=8658.577..31823.238 rows=1148559 loops=1)
Q10,2.0,->  Hash Join  (cost=346532.67..2248046.60 rows=570131 width=153) (actual time=8658.547..31401.824 rows=1148559 loops=1)
Q10,2.0,->  Hash Join  (cost=277504.67..2170466.64 rows=570131 width=12) (actual time=7200.114..29149.047 rows=1148559 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.439..3871.877 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1844252.74 rows=20314926 width=8) (actual time=0.010..19960.600 rows=37965587 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2358816.97 rows=396453 width=38) (actual time=54.103..35580.644 rows=730906 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1930964.99 rows=812597 width=34) (actual time=53.710..27708.084 rows=1514111 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.030..0.398 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616050.06..10616052.75 rows=1076 width=51) (actual time=11544.204..11544.306 rows=1816 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613657.05..10615995.87 rows=1076 width=51) (actual time=11511.700..11541.557 rows=1816 loops=1)
Q1,1.5,Sort  (cost=4160975.19..4160975.21 rows=6 width=20) (actual time=91255.148..91255.148 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4160975.01..4160975.12 rows=6 width=20) (actual time=91255.100..91255.102 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.181..4.181 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2270140.74..2275842.05 rows=570131 width=175) (actual time=33880.228..34133.847 rows=381430 loops=1)
Q9,1.3,GroupAggregate  (cost=1154797.02..1154801.54 rows=129 width=46) (actual time=108412.275..111328.092 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2867.51 rows=139253 width=0) (actual time=726.984..726.984 rows=190680 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2902.33..41835.72 rows=139253 width=24) (actual time=735.382..1163.039 rows=190680 loops=1)
Q15,1.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..109498.64 rows=14580086 width=0) (actual time=145.861..145.861 rows=10771200 loops=1)
Q15,1.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..109498.64 rows=14580086 width=0) (actual time=119.236..119.236 rows=10760960 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.54 rows=17999 width=0) (actual time=15.950..15.950 rows=21781 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91874.50 rows=9172650 width=0) (actual time=134.492..134.492 rows=10696960 loops=1)
Q18,1.1,Limit  (cost=10276221.74..10276224.49 rows=100 width=39) (actual time=76318.711..76319.011 rows=86 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=106103 width=4) (actual time=0.020..942.287 rows=109444 loops=1)
Q9,1.0,->  Hash Join  (cost=66848.29..352050.41 rows=424412 width=16) (actual time=988.768..5348.285 rows=437776 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=106103 width=4) (actual time=988.116..988.116 rows=109444 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.230..1992.146 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.29..1702455.83 rows=124453 width=20) (actual time=7.324..25066.377 rows=121874 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.86..1501514.41 rows=410366 width=16) (actual time=7.164..18892.346 rows=400847 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.73..1749532.96 rows=24891 width=16) (actual time=2124.255..27511.699 rows=24253 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.29..1750001.23 rows=24891 width=38) (actual time=2124.300..27560.695 rows=24253 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.44..1741501.59 rows=24891 width=16) (actual time=2124.236..27334.356 rows=24253 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2114.330..2114.330 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.83 rows=13520 width=0) (actual time=4.835..4.835 rows=13354 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=13354)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.21..28347.82 rows=13520 width=4) (actual time=7.083..169.389 rows=13354 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.139..1.344 rows=30 loops=13354)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.750..387.923 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.006..3126.233 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2143126.86 rows=1481466 width=42) (actual time=670.465..26864.137 rows=1461260 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2155096.36 rows=61653 width=64) (actual time=753.469..27666.512 rows=59088 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537192.39 rows=1217990 width=30) (actual time=670.395..10097.139 rows=1197958 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..630.568 rows=119889 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..78.740 rows=8036 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=669.865..669.865 rows=119889 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=80.996..80.996 rows=8036 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92064.25..1368112.87 rows=759003 width=8) (actual time=135.381..27814.689 rows=760292 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480657.80 rows=2297070 width=8) (actual time=0.016..5203.557 rows=2278174 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.731..2227.405 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1987884.79 rows=1837230 width=46) (actual time=2344.020..16529.766 rows=1823740 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2007077.90 rows=73488 width=34) (actual time=2405.208..17501.123 rows=72300 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..532207.58 rows=459414 width=38) (actual time=2343.992..8825.477 rows=455295 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2341.525..2341.525 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.634..434.986 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5795.79..269259.89 rows=561540 width=20) (actual time=51.691..6346.076 rows=562631 loops=1)
Q3,1.0,->  Hash Join  (cost=107106.73..496108.60 rows=1482743 width=12) (actual time=452.328..12481.858 rows=1476969 loops=1)
Q3,1.0,->  Hash  (cost=496108.60..496108.60 rows=1482743 width=12) (actual time=13097.209..13097.209 rows=1476969 loops=1)
Q3,1.0,->  Hash  (cost=46005.93..46005.93 rows=300815 width=4) (actual time=418.512..418.512 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.54 rows=300815 width=0) (actual time=88.020..88.020 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57340.61..403788.95 rows=7393627 width=16) (actual time=30.274..9238.990 rows=7365567 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249620.87..1720601.45 rows=32190047 width=12) (actual time=119.481..32355.471 rows=32090603 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.74..46005.93 rows=300815 width=4) (actual time=97.142..335.981 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.012..3996.351 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=8885.354..8885.354 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597212.17..640699.69 rows=58878 width=20) (actual time=9700.373..10284.037 rows=63715 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6516.13 rows=379885 width=0) (actual time=84.433..84.433 rows=381851 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6611.10..51861.08 rows=379885 width=4) (actual time=92.911..601.007 rows=381851 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.321..52.428 rows=3990 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=53.661..53.661 rows=3990 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.306..51.711 rows=3990 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5363.338..5493.499 rows=1603317 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.307..143.406 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8132 width=30) (actual time=0.185..1218.640 rows=8045 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=155.643..4273.465 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.507..155.507 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.280..27.772 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.303..28.434 rows=4004 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.283..27.816 rows=4004 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.55..33178.44 rows=20019 width=4) (actual time=19.779..323.303 rows=21781 loops=1)
Q19,1.0,->  Nested Loop  (cost=12845.53..614837.33 rows=1147 width=8) (actual time=65.979..1864.050 rows=1078 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.182..4.182 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.71 rows=8101 width=0) (actual time=3.660..3.660 rows=7975 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8004 width=0) (actual time=3.624..3.624 rows=7921 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7985 width=0) (actual time=3.497..3.497 rows=8051 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12844.96..26581.78 rows=4775 width=30) (actual time=65.623..282.508 rows=4704 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=16) (actual time=0.006..2353.431 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1686915.66 rows=60765566 width=8) (actual time=0.005..10044.848 rows=60045297 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1686915.66 rows=60765566 width=8) (actual time=0.040..9663.535 rows=60045297 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.043 rows=30 loops=1985)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.043 rows=30 loops=1985)
Q16,1.0,Sort  (cost=413120.28..413189.71 rows=27770 width=40) (actual time=11094.805..11098.310 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50985.73..50985.73 rows=296206 width=40) (actual time=1184.106..1184.106 rows=296393 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403387.83..411070.68 rows=27770 width=40) (actual time=10281.205..11034.931 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2480.91..50985.73 rows=296206 width=40) (actual time=34.901..1072.417 rows=296393 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=110071.53..1404816.82 rows=2291535 width=12) (actual time=146.657..22029.897 rows=2250356 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=110071.53..1404816.82 rows=2291535 width=12) (actual time=120.048..32339.497 rows=2250356 loops=1)
Q14,1.0,->  Hash Join  (cost=93421.96..1140595.38 rows=756289 width=29) (actual time=2512.771..35654.005 rows=771186 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7899.96..1043729.04 rows=756289 width=12) (actual time=120.378..32348.160 rows=771186 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15088273 width=8) (actual time=0.018..7666.638 rows=14853721 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742729.08 rows=15088273 width=8) (actual time=1517.278..19793.637 rows=15353743 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.010..5104.783 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444050.68 rows=292103 width=15) (actual time=0.256..24673.623 rows=311921 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051034.26 rows=292103 width=27) (actual time=10855.148..35882.115 rows=311921 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=10775.347..10775.347 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.284..43.958 rows=3924 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.280..25.212 rows=3924 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.090..2564.439 rows=313920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=45.012..3004.648 rows=313920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=44.970..44.970 rows=3924 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.046..26.046 rows=3924 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.255..24.589 rows=3924 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.265..43.307 rows=3924 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.25 rows=58598294 width=20) (actual time=17.993..19564.824 rows=58562965 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831525.44 rows=14862725 width=12) (actual time=0.013..18335.187 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270247.49..270247.49 rows=580574 width=8) (actual time=7194.907..7194.907 rows=573907 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5990.88..270247.49 rows=580574 width=8) (actual time=27.745..6966.165 rows=573907 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.015 rows=0 loops=400847)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1514111)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.18 rows=1 width=16) (actual time=0.307..0.335 rows=0 loops=4704)
Q19,,->  BitmapOr  (cost=12844.96..12844.96 rows=4779 width=0) (actual time=61.670..61.670 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.86..6270.86 rows=2382 width=0) (actual time=8.468..8.468 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.26..4280.26 rows=1591 width=0) (actual time=8.590..8.590 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2293.35..2293.35 rows=805 width=0) (actual time=8.636..8.636 rows=0 loops=1)

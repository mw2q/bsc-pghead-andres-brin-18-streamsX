Q21,696748.0,->  Nested Loop Semi Join  (cost=2406.31..2872173.16 rows=1 width=34) (actual time=37.032..39621.819 rows=696748 loops=1)
Q18,401904.6,->  GroupAggregate  (cost=10195349.04..11024277.36 rows=30142848 width=39) (actual time=78177.044..78177.284 rows=75 loops=1)
Q3,321049.9,->  Sort  (cost=2566333.77..2574360.02 rows=3210499 width=20) (actual time=48570.865..48570.867 rows=10 loops=1)
Q18,100499.4,->  Hash Join  (cost=2187822.50..2803776.27 rows=7537460 width=39) (actual time=50477.564..57599.766 rows=75 loops=1)
Q18,100499.4,->  Hash Join  (cost=2118794.50..2621686.38 rows=7537460 width=20) (actual time=49522.376..56644.279 rows=75 loops=1)
Q18,100499.4,->  Hash  (cost=2803776.27..2803776.27 rows=7537460 width=39) (actual time=57599.985..57599.985 rows=75 loops=1)
Q18,57414.9,->  Sort  (cost=10195349.04..10270706.16 rows=30142848 width=39) (actual time=78177.034..78177.061 rows=525 loops=1)
Q18,57414.9,->  Hash Join  (cost=2897994.52..5626588.17 rows=30142848 width=39) (actual time=57971.130..78176.267 rows=525 loops=1)
Q18,54770.3,->  Hash  (cost=2067447.33..2067447.33 rows=4107773 width=4) (actual time=49379.866..49379.866 rows=75 loops=1)
Q18,54770.3,->  HashAggregate  (cost=1975022.44..2026369.60 rows=4107773 width=8) (actual time=42759.237..49379.685 rows=75 loops=1)
Q21,38949.0,->  Nested Loop Anti Join  (cost=2406.88..2872174.94 rows=1 width=26) (actual time=39.640..42582.178 rows=38949 loops=1)
Q10,28879.6,->  Sort  (cost=2302695.31..2304139.29 rows=577592 width=175) (actual time=66987.030..66987.033 rows=20 loops=1)
Q9,27222.3,->  Sort  (cost=1092745.93..1092746.23 rows=119 width=46) (actual time=109188.063..109949.942 rows=3239464 loops=1)
Q9,27222.3,->  Nested Loop  (cost=66749.48..1092738.04 rows=119 width=24) (actual time=728.282..99030.231 rows=3239464 loops=1)
Q9,27222.3,->  Nested Loop  (cost=66749.04..1092680.37 rows=119 width=24) (actual time=728.244..58790.136 rows=3239464 loops=1)
Q9,27222.3,->  Nested Loop  (cost=66748.75..1092641.97 rows=119 width=28) (actual time=728.235..47229.024 rows=3239464 loops=1)
Q9,27222.3,->  Hash Join  (cost=66751.04..1092741.83 rows=119 width=46) (actual time=728.351..102672.091 rows=3239464 loops=1)
Q2,4714.0,->  Merge Join  (cost=465687.75..889800.84 rows=1 width=190) (actual time=9513.007..11529.236 rows=4714 loops=1)
Q21,3945.0,->  HashAggregate  (cost=2872174.95..2872174.96 rows=1 width=26) (actual time=42634.405..42635.416 rows=3945 loops=1)
Q15,3798.0,->  Subquery Scan on revenue14  (cost=1493917.43..1494002.89 rows=3798 width=12) (actual time=60433.366..60456.436 rows=1 loops=1)
Q15,3798.0,->  Sort  (cost=1494228.70..1494238.19 rows=3798 width=12) (actual time=60456.457..60456.458 rows=1 loops=1)
Q15,3798.0,Merge Join  (cost=2971004.89..2976103.06 rows=3798 width=79) (actual time=60461.242..60461.244 rows=1 loops=1)
Q15,3798.0,->  HashAggregate  (cost=1493917.43..1493964.91 rows=3798 width=12) (actual time=60433.365..60456.434 rows=1 loops=1)
Q7,768.0,Sort  (cost=2133596.57..2133604.25 rows=3072 width=64) (actual time=24307.193..24307.194 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2133372.55..2133418.63 rows=3072 width=64) (actual time=24307.131..24307.135 rows=4 loops=1)
Q8,365.0,Sort  (cost=1830753.86..1830755.69 rows=730 width=38) (actual time=12814.162..12814.163 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1830706.37..1830719.14 rows=730 width=38) (actual time=12814.117..12814.119 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2872174.97..2872174.97 rows=1 width=26) (actual time=42636.548..42636.554 rows=100 loops=1)
Q21,100.0,Limit  (cost=2872174.97..2872174.97 rows=1 width=26) (actual time=42636.549..42636.565 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889800.85..889800.86 rows=1 width=190) (actual time=11534.301..11534.318 rows=100 loops=1)
Q2,100.0,Limit  (cost=889800.85..889800.86 rows=1 width=190) (actual time=11534.303..11534.328 rows=100 loops=1)
Q11,33.6,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8554.179..8555.328 rows=9522 loops=1)
Q11,33.6,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8468.483..8548.885 rows=9522 loops=1)
Q3,28.3,->  HashAggregate  (cost=2464851.05..2496956.04 rows=3210499 width=20) (actual time=48499.213..48549.583 rows=113182 loops=1)
Q15,26.3,->  HashAggregate  (cost=1476690.43..1476728.41 rows=3798 width=12) (actual time=28305.377..28348.585 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=722885)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7967.39 rows=781939 width=0) (actual time=120.513..120.513 rows=10782720 loops=1)
Q3,10.7,->  Hash Join  (cost=772901.57..2416693.57 rows=3210499 width=20) (actual time=14429.114..48150.617 rows=298805 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2422.36 rows=321380 width=0) (actual time=34.881..34.881 rows=3246080 loops=1)
Q15,9.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..3.562 rows=10906 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.018..0.094 rows=7 loops=432552)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.620..3.620 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2005740.31..2005740.38 rows=25 width=34) (actual time=17530.035..17530.036 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2005739.48..2005739.73 rows=25 width=34) (actual time=17529.993..17529.994 rows=5 loops=1)
Q4,5.0,Sort  (cost=1484506.80..1484506.81 rows=1 width=16) (actual time=19492.447..19492.447 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.13 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=573927)
Q4,5.0,->  HashAggregate  (cost=1484506.78..1484506.79 rows=1 width=16) (actual time=19492.404..19492.405 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=696748)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5738.64 rows=569864 width=0) (actual time=39.280..39.280 rows=2543360 loops=1)
Q13,4.4,Sort  (cost=852424.95..852425.45 rows=200 width=8) (actual time=35522.871..35522.874 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852415.31..852417.31 rows=200 width=8) (actual time=35522.805..35522.814 rows=45 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5921.60 rows=588160 width=0) (actual time=57.238..57.238 rows=2568960 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.010 rows=1 loops=1207912)
Q17,3.8,->  Nested Loop  (cost=82.91..115201.71 rows=20407 width=4) (actual time=1.703..253.679 rows=5311 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=457471)
Q4,3.3,->  Nested Loop Semi Join  (cost=5881.68..1483729.60 rows=155437 width=16) (actual time=39.475..19097.312 rows=526550 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.017..0.043 rows=3 loops=1997)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244905.54 rows=32634339 width=0) (actual time=182.793..182.793 rows=10814720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.10 rows=1 width=8) (actual time=0.376..0.450 rows=3 loops=21823)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..56060.62 rows=7469416 width=0) (actual time=27.583..27.583 rows=2571520 loops=1)
Q22,2.3,Sort  (cost=698120.52..698120.53 rows=3 width=20) (actual time=17051.087..17051.087 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645282.32..645282.37 rows=3 width=20) (actual time=17051.044..17051.046 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.049..0.066 rows=2 loops=6412)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3068144.99..3068145.00 rows=1 width=27) (actual time=37018.436..37018.436 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3068144.97..3068144.98 rows=1 width=27) (actual time=37018.380..37018.381 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403862.47..405352.03 rows=595822 width=40) (actual time=10795.248..10951.523 rows=1189977 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.422..4084.995 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54793.45..346709.67 rows=595822 width=40) (actual time=1292.687..7177.435 rows=1189977 loops=1)
Q10,1.9,->  Hash Join  (cost=348085.61..2267110.08 rows=577592 width=175) (actual time=11390.521..64093.935 rows=1150166 loops=1)
Q10,1.9,->  Hash Join  (cost=348084.04..2259166.63 rows=577592 width=153) (actual time=11390.491..63439.533 rows=1150166 loops=1)
Q10,1.9,->  Hash Join  (cost=279056.04..2181474.75 rows=577592 width=12) (actual time=10018.715..60935.458 rows=1150166 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1833786.36 rows=20199636 width=8) (actual time=0.013..20269.571 rows=37927594 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2345393.92 rows=394203 width=38) (actual time=36.973..35305.957 rows=722885 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1920020.16 rows=807985 width=34) (actual time=36.920..27552.645 rows=1494921 loops=1)
Q20,1.8,->  Nested Loop  (cost=826.98..12723184.79 rows=32276 width=4) (actual time=13.845..10177.829 rows=59164 loops=1)
Q20,1.8,->  Hash  (cost=12723184.79..12723184.79 rows=32276 width=4) (actual time=10214.446..10214.446 rows=59164 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.380 rows=56 loops=1)
Q15,1.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..126509.29 rows=16848172 width=0) (actual time=166.134..166.134 rows=10750720 loops=1)
Q15,1.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..126509.29 rows=16848172 width=0) (actual time=136.762..136.762 rows=10739200 loops=1)
Q1,1.5,Sort  (cost=4196285.10..4196285.12 rows=6 width=20) (actual time=94373.037..94373.037 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4196284.92..4196285.02 rows=6 width=20) (actual time=94372.991..94372.993 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2281549.88..2287325.80 rows=577592 width=175) (actual time=66607.462..66845.951 rows=382299 loops=1)
Q9,1.4,GroupAggregate  (cost=1092745.93..1092750.10 rows=119 width=46) (actual time=109198.239..112497.010 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=10.608..10.608 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2868.28 rows=139327 width=0) (actual time=1136.358..1136.358 rows=190455 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2903.12..41838.45 rows=139327 width=24) (actual time=1145.036..2678.283 rows=190455 loops=1)
Q20,1.3,Sort  (cost=12726039.96..12726043.19 rows=1291 width=51) (actual time=10245.682..10245.781 rows=1801 loops=1)
Q20,1.3,->  Hash Semi Join  (cost=12723631.24..12725973.25 rows=1291 width=51) (actual time=10214.914..10243.621 rows=1801 loops=1)
Q18,1.3,Limit  (cost=10195349.04..10195351.79 rows=100 width=39) (actual time=78177.046..78177.294 rows=75 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=98095 width=4) (actual time=0.009..692.196 rows=108138 loops=1)
Q9,1.1,->  Hash Join  (cost=66748.19..351629.99 rows=392380 width=16) (actual time=728.198..5342.340 rows=432552 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=98095 width=4) (actual time=727.704..727.704 rows=108138 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..93062.00 rows=9291400 width=0) (actual time=120.759..120.759 rows=10835200 loops=1)
Q20,1.1,->  Bitmap Heap Scan on part  (cost=826.55..36393.37 rows=24023 width=4) (actual time=13.314..311.976 rows=21823 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.729..2302.762 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=439.73..1782141.10 rows=131147 width=20) (actual time=7.328..10036.156 rows=121566 loops=1)
Q8,1.0,->  Nested Loop  (cost=439.30..1570390.71 rows=432438 width=16) (actual time=7.190..5367.874 rows=400205 loops=1)
Q8,1.0,->  Nested Loop  (cost=38770.17..1829688.43 rows=26229 width=16) (actual time=2429.884..12692.687 rows=24452 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..107.97 rows=31 width=20) (actual time=0.034..0.378 rows=30 loops=13288)
Q8,1.0,->  Hash Join  (cost=38771.74..1830181.79 rows=26229 width=38) (actual time=2429.934..12769.734 rows=24452 loops=1)
Q8,1.0,->  Hash Join  (cost=38769.88..1821225.34 rows=26229 width=16) (actual time=2429.868..12542.749 rows=24452 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2420.074..2420.074 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..435.18 rows=14233 width=0) (actual time=4.873..4.873 rows=13288 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=438.73..29191.44 rows=14233 width=4) (actual time=7.137..186.808 rows=13288 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.656..450.622 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.006..2974.451 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2120523.42 rows=1474157 width=42) (actual time=997.571..23396.480 rows=1470414 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2132452.31 rows=61349 width=64) (actual time=1078.200..24214.715 rows=59232 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534837.31 rows=1211997 width=30) (actual time=997.454..10005.678 rows=1207912 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..940.207 rows=120121 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..78.143 rows=8083 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=996.909..996.909 rows=120121 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=80.460..80.460 rows=8083 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=93265.71..1385834.21 rows=814850 width=8) (actual time=121.563..25360.370 rows=793705 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480180.04 rows=2294787 width=8) (actual time=0.014..5202.506 rows=2278172 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.743..2346.765 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1985826.79 rows=1835389 width=46) (actual time=2463.303..16537.185 rows=1831039 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2005005.34 rows=73414 width=34) (actual time=2520.133..17444.423 rows=73368 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..531716.69 rows=458957 width=38) (actual time=2463.276..8825.447 rows=457471 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2461.268..2461.268 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..458.788 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5881.11..268710.07 rows=569864 width=20) (actual time=39.446..9201.744 rows=573927 loops=1)
Q3,1.0,->  Hash Join  (cost=107693.11..501115.04 rows=1497792 width=12) (actual time=423.699..13510.409 rows=1469528 loops=1)
Q3,1.0,->  Hash  (cost=501115.04..501115.04 rows=1497792 width=12) (actual time=14235.451..14235.451 rows=1469528 loops=1)
Q3,1.0,->  Hash  (cost=46005.32..46005.32 rows=300785 width=4) (actual time=393.498..393.498 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.31 rows=300785 width=0) (actual time=66.719..66.719 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57927.97..408361.67 rows=7469416 width=16) (actual time=27.748..9753.384 rows=7345876 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253064.13..1742372.37 rows=32634339 width=12) (actual time=183.550..27455.625 rows=32108036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.51..46005.32 rows=300785 width=4) (actual time=75.719..311.553 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.012..8366.595 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=14043.607..14043.607 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601348.61..644840.51 rows=58909 width=20) (actual time=15270.965..17021.003 rows=63556 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6537.65 rows=380085 width=0) (actual time=212.352..212.352 rows=381508 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6632.67..51887.90 rows=380085 width=4) (actual time=225.373..1009.303 rows=381508 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.272..35.621 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=36.808..36.808 rows=3945 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.260..35.002 rows=3945 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=9512.685..9641.356 rows=1602629 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.315..162.837 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8025 width=30) (actual time=0.092..1095.507 rows=7961 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=174.365..8257.372 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=174.237..174.237 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.253..31.676 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.293..27.299 rows=4029 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..820.54 rows=21999 width=0) (actual time=9.532..9.532 rows=21823 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.275..26.724 rows=4029 loops=1)
Q19,1.0,->  Nested Loop  (cost=12809.21..605705.82 rows=1131 width=8) (actual time=60.141..2186.420 rows=1087 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.174..4.174 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.67 rows=7996 width=0) (actual time=3.636..3.636 rows=7962 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.31 rows=7859 width=0) (actual time=3.811..3.811 rows=8101 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.83 rows=7811 width=0) (actual time=4.276..4.276 rows=8011 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12808.65..26369.38 rows=4698 width=30) (actual time=59.406..379.294 rows=4844 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..3505.808 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673593.96 rows=60285696 width=8) (actual time=0.005..11041.273 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673593.96 rows=60285696 width=8) (actual time=0.013..9312.676 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.052 rows=30 loops=1997)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.052 rows=30 loops=1997)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.64 rows=2021 width=0) (actual time=0.967..0.967 rows=1997 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.14..6686.38 rows=2021 width=4) (actual time=1.350..44.436 rows=1997 loops=1)
Q16,1.0,Sort  (cost=413652.11..413721.94 rows=27930 width=40) (actual time=11607.157..11610.644 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51053.34..51053.34 rows=297911 width=40) (actual time=1289.767..1289.767 rows=297658 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403862.47..411589.55 rows=27930 width=40) (actual time=10795.313..11547.525 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2496.84..51053.34 rows=297911 width=40) (actual time=34.948..1159.952 rows=297658 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=127083.52..1453721.10 rows=2296933 width=12) (actual time=166.891..25995.320 rows=2243711 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=127083.52..1453721.10 rows=2296933 width=12) (actual time=137.512..29755.244 rows=2243711 loops=1)
Q14,1.0,->  Hash Join  (cost=93684.88..1156594.81 rows=781939 width=29) (actual time=1601.558..34644.249 rows=748180 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8162.88..1059343.72 rows=781939 width=12) (actual time=121.396..32295.689 rows=748180 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15013576 width=8) (actual time=0.019..9975.423 rows=14838725 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739847.43 rows=15013576 width=8) (actual time=1204.028..22617.462 rows=15338743 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=20) (actual time=0.013..5345.104 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2453700.53 rows=291819 width=15) (actual time=0.034..25120.247 rows=311895 loops=1)
Q12,1.0,->  Hash Join  (cost=600218.27..3063038.14 rows=291819 width=27) (actual time=11119.577..36637.158 rows=311895 loops=1)
Q12,1.0,->  Hash  (cost=409719.23..409719.23 rows=15239923 width=20) (actual time=10987.073..10987.073 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.295..24.524 rows=3990 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.282..60.359 rows=3990 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.463..3710.117 rows=319200 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=61.410..4400.107 rows=319200 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=61.351..61.351 rows=3990 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.388..25.388 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.265..23.871 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.262..59.682 rows=3990 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826110.80 rows=59254353 width=20) (actual time=0.014..20373.781 rows=58984008 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1840630.49 rows=14936612 width=12) (actual time=0.011..46409.995 rows=14822462 loops=1)
Q10,1.0,->  Hash  (cost=271704.04..271704.04 rows=588160 width=8) (actual time=10013.631..10013.631 rows=575615 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6068.64..271704.04 rows=588160 width=8) (actual time=57.433..9744.747 rows=575615 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=400205)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1494921)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.31 rows=1 width=16) (actual time=0.337..0.371 rows=0 loops=4844)
Q19,,->  BitmapOr  (cost=12808.65..12808.65 rows=4701 width=0) (actual time=53.632..53.632 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6253.10..6253.10 rows=2330 width=0) (actual time=15.864..15.864 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.14..4280.14 rows=1589 width=0) (actual time=8.529..8.529 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2274.91..2274.91 rows=781 width=0) (actual time=8.721..8.721 rows=0 loops=1)

Q21,703567.0,->  Nested Loop Semi Join  (cost=2406.31..2882960.84 rows=1 width=34) (actual time=40.476..40510.941 rows=703567 loops=1)
Q18,358128.9,->  GroupAggregate  (cost=10175126.84..11002404.63 rows=30082829 width=39) (actual time=77698.664..77698.941 rows=84 loops=1)
Q3,317267.5,->  Sort  (cost=2559923.94..2567855.63 rows=3172675 width=20) (actual time=38802.180..38802.182 rows=10 loops=1)
Q18,89553.2,->  Hash Join  (cost=2183889.93..2798700.89 rows=7522476 width=39) (actual time=51298.295..57178.473 rows=84 loops=1)
Q18,89553.2,->  Hash Join  (cost=2114861.93..2616835.75 rows=7522476 width=20) (actual time=50370.509..56250.385 rows=84 loops=1)
Q18,89553.2,->  Hash  (cost=2798700.89..2798700.89 rows=7522476 width=39) (actual time=57178.667..57178.667 rows=84 loops=1)
Q18,51161.2,->  Sort  (cost=10175126.84..10250333.91 rows=30082829 width=39) (actual time=77698.653..77698.692 rows=588 loops=1)
Q18,51161.2,->  Hash Join  (cost=2892731.84..5615892.43 rows=30082829 width=39) (actual time=57354.549..77697.779 rows=588 loops=1)
Q18,48902.0,->  Hash  (cost=2063514.76..2063514.76 rows=4107773 width=4) (actual time=50233.350..50233.350 rows=84 loops=1)
Q18,48902.0,->  HashAggregate  (cost=1971089.87..2022437.03 rows=4107773 width=8) (actual time=42791.454..50233.137 rows=84 loops=1)
Q21,39459.0,->  Nested Loop Anti Join  (cost=2406.88..2882962.63 rows=1 width=26) (actual time=41.763..43476.332 rows=39459 loops=1)
Q10,28500.7,->  Sort  (cost=2282545.32..2283970.36 rows=570014 width=175) (actual time=33031.228..33031.231 rows=20 loops=1)
Q9,24083.9,->  Sort  (cost=1186232.52..1186232.86 rows=135 width=46) (actual time=118285.747..118997.391 rows=3251337 loops=1)
Q9,24083.9,->  Nested Loop  (cost=66899.62..1186223.65 rows=135 width=24) (actual time=950.360..107868.653 rows=3251337 loops=1)
Q9,24083.9,->  Nested Loop  (cost=66899.18..1186158.22 rows=135 width=24) (actual time=950.341..65705.712 rows=3251337 loops=1)
Q9,24083.9,->  Nested Loop  (cost=66898.89..1186114.66 rows=135 width=28) (actual time=950.331..53027.099 rows=3251337 loops=1)
Q9,24083.9,->  Hash Join  (cost=66901.18..1186227.75 rows=135 width=46) (actual time=950.411..111850.744 rows=3251337 loops=1)
Q2,4691.0,->  Merge Join  (cost=465687.75..887309.31 rows=1 width=190) (actual time=7814.333..9833.108 rows=4691 loops=1)
Q21,3981.0,->  HashAggregate  (cost=2882962.63..2882962.64 rows=1 width=26) (actual time=43531.972..43533.014 rows=3981 loops=1)
Q15,3752.0,->  Subquery Scan on revenue11  (cost=2006589.70..2006674.12 rows=3752 width=12) (actual time=44371.833..44381.148 rows=1 loops=1)
Q15,3752.0,->  Sort  (cost=2006896.87..2006906.25 rows=3752 width=12) (actual time=44381.168..44381.168 rows=1 loops=1)
Q15,3752.0,Merge Join  (cost=3996671.69..4001769.17 rows=3752 width=79) (actual time=44384.294..44384.295 rows=1 loops=1)
Q15,3752.0,->  HashAggregate  (cost=2006589.70..2006636.60 rows=3752 width=12) (actual time=44371.832..44381.145 rows=1 loops=1)
Q7,768.0,Sort  (cost=2158507.59..2158515.27 rows=3072 width=64) (actual time=25112.279..25112.279 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2158283.56..2158329.64 rows=3072 width=64) (actual time=25112.210..25112.218 rows=4 loops=1)
Q8,365.0,Sort  (cost=1753089.73..1753091.56 rows=730 width=38) (actual time=20335.265..20335.265 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1753042.24..1753055.01 rows=730 width=38) (actual time=20335.226..20335.227 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2882962.65..2882962.66 rows=1 width=26) (actual time=43534.169..43534.175 rows=100 loops=1)
Q21,100.0,Limit  (cost=2882962.65..2882962.66 rows=1 width=26) (actual time=43534.170..43534.187 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887309.32..887309.32 rows=1 width=190) (actual time=9838.002..9838.024 rows=100 loops=1)
Q2,100.0,Limit  (cost=887309.32..887309.32 rows=1 width=190) (actual time=9838.004..9838.032 rows=100 loops=1)
Q11,34.3,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9154.795..9155.875 rows=9322 loops=1)
Q11,34.3,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9054.977..9149.535 rows=9322 loops=1)
Q3,27.8,->  HashAggregate  (cost=2459636.83..2491363.58 rows=3172675 width=20) (actual time=38732.935..38781.093 rows=113898 loops=1)
Q15,26.6,->  HashAggregate  (cost=1989690.10..1989727.62 rows=3752 width=12) (actual time=23170.853..23209.953 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.007..0.007 rows=1 loops=730254)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8081.98 rows=793398 width=0) (actual time=149.475..149.475 rows=10676480 loops=1)
Q15,12.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.012..2.320 rows=8001 loops=1)
Q3,10.5,->  Hash Join  (cost=769208.64..2412046.70 rows=3172675 width=20) (actual time=7642.655..38392.404 rows=300642 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2406.61 rows=319280 width=0) (actual time=34.992..34.992 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.021..0.106 rows=8 loops=433088)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.610..3.610 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.012 rows=1 loops=1192226)
Q5,5.0,Sort  (cost=2013958.57..2013958.63 rows=25 width=34) (actual time=16919.432..16919.433 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2013957.74..2013957.99 rows=25 width=34) (actual time=16919.386..16919.387 rows=5 loops=1)
Q4,5.0,Sort  (cost=1496800.27..1496800.28 rows=1 width=16) (actual time=17582.169..17582.170 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=573286)
Q4,5.0,->  HashAggregate  (cost=1496800.25..1496800.26 rows=1 width=16) (actual time=17582.119..17582.119 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=703567)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5836.65 rows=579665 width=0) (actual time=35.931..35.931 rows=2553600 loops=1)
Q13,4.3,Sort  (cost=855372.91..855373.41 rows=200 width=8) (actual time=32822.753..32822.755 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855363.27..855365.27 rows=200 width=8) (actual time=32822.681..32822.690 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5844.39 rows=580439 width=0) (actual time=29.635..29.635 rows=2545920 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.014..0.016 rows=4 loops=455908)
Q17,3.6,->  Nested Loop  (cost=82.64..113738.47 rows=20045 width=4) (actual time=1.927..291.482 rows=5553 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5982.13..1496012.84 rows=157482 width=16) (actual time=36.122..17264.706 rows=525454 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.051 rows=3 loops=2039)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247102.14 rows=32927219 width=0) (actual time=119.516..119.516 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.401..0.484 rows=3 loops=21291)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54879.78 rows=7311971 width=0) (actual time=27.448..27.448 rows=2558720 loops=1)
Q22,2.3,Sort  (cost=695861.07..695861.08 rows=3 width=20) (actual time=9923.330..9923.331 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642964.31..642964.36 rows=3 width=20) (actual time=9923.286..9923.286 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6295)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.213..4.213 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403359.28..404839.74 rows=592182 width=40) (actual time=10321.895..10508.139 rows=1186649 loops=1)
Q16,2.0,->  Hash Join  (cost=54702.00..346581.82 rows=592182 width=40) (actual time=1175.077..6458.439 rows=1186649 loops=1)
Q12,2.0,Sort  (cost=3047176.17..3047176.17 rows=1 width=27) (actual time=37041.834..37041.834 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3047176.15..3047176.16 rows=1 width=27) (actual time=37041.785..37041.785 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345515.13..2247426.97 rows=570014 width=175) (actual time=7634.454..30546.145 rows=1146931 loops=1)
Q10,2.0,->  Hash Join  (cost=345513.57..2239587.71 rows=570014 width=153) (actual time=7634.422..30140.679 rows=1146931 loops=1)
Q10,2.0,->  Hash Join  (cost=276485.57..2162009.50 rows=570014 width=12) (actual time=6240.195..28045.092 rows=1146931 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.48..11668629.61 rows=29587 width=4) (actual time=33.881..10545.481 rows=57752 loops=1)
Q20,1.9,->  Hash  (cost=11668629.61..11668629.61 rows=29587 width=4) (actual time=10584.680..10584.680 rows=57752 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.513..3623.911 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1840630.49 rows=20275026 width=8) (actual time=0.014..20021.181 rows=37966096 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2354175.48 rows=395674 width=38) (actual time=40.418..35191.198 rows=730254 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1927177.16 rows=811001 width=34) (actual time=40.317..27440.984 rows=1512491 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.036..0.467 rows=56 loops=1)
Q1,1.5,Sort  (cost=4214565.22..4214565.24 rows=6 width=20) (actual time=101570.282..101570.282 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4214565.04..4214565.14 rows=6 width=20) (actual time=101570.218..101570.219 rows=4 loops=1)
Q20,1.4,Sort  (cost=11671443.24..11671446.20 rows=1183 width=51) (actual time=10617.055..10617.153 rows=1736 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669042.45..11671382.86 rows=1183 width=51) (actual time=10585.100..10615.578 rows=1736 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.189..4.189 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2261677.32..2267377.46 rows=570014 width=175) (actual time=32683.958..32890.651 rows=381510 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.16 rows=139915 width=0) (actual time=817.541..817.541 rows=190494 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.14..41859.91 rows=139915 width=24) (actual time=826.464..989.641 rows=190494 loops=1)
Q9,1.2,GroupAggregate  (cost=1186232.52..1186237.25 rows=135 width=46) (actual time=118296.189..121199.642 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92179.82 rows=9203182 width=0) (actual time=120.635..120.635 rows=10824960 loops=1)
Q18,1.1,Limit  (cost=10175126.84..10175129.59 rows=100 width=39) (actual time=77698.666..77698.953 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=110106 width=4) (actual time=0.014..909.739 rows=108272 loops=1)
Q9,1.0,->  Hash Join  (cost=66898.32..352260.57 rows=440424 width=16) (actual time=950.155..6076.318 rows=433088 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=110106 width=4) (actual time=949.638..949.638 rows=108272 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.741..2267.220 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.50..1705018.12 rows=124208 width=20) (actual time=22.114..17598.728 rows=122679 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.06..1504477.14 rows=409557 width=16) (actual time=21.845..12395.709 rows=404502 loops=1)
Q8,1.0,->  Nested Loop  (cost=38756.94..1752078.05 rows=24842 width=16) (actual time=2403.599..20232.744 rows=24540 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.50..1752545.40 rows=24842 width=38) (actual time=2403.644..20283.276 rows=24540 loops=1)
Q8,1.0,->  Hash Join  (cost=38756.65..1744062.47 rows=24842 width=16) (actual time=2403.582..20071.891 rows=24540 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2378.937..2378.937 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.03 rows=13547 width=0) (actual time=19.184..19.184 rows=13468 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=13468)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=421.42..28382.62 rows=13547 width=4) (actual time=21.764..240.428 rows=13468 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.112..0.869 rows=30 loops=13468)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..443.402 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=8) (actual time=0.006..2742.624 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2145377.15 rows=1483426 width=42) (actual time=626.916..24273.348 rows=1446434 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2157357.55 rows=61734 width=64) (actual time=696.369..25016.403 rows=58366 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537665.28 rows=1219194 width=30) (actual time=626.892..9277.267 rows=1192226 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..587.141 rows=119889 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..67.044 rows=8014 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=626.372..626.372 rows=119889 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=69.388..69.388 rows=8014 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92381.60..1381896.19 rows=807113 width=8) (actual time=121.408..35096.965 rows=796746 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..482572.62 rows=2296527 width=8) (actual time=0.015..4950.683 rows=2279298 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.735..2034.198 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1994033.79 rows=1836745 width=46) (actual time=2144.676..16020.575 rows=1823519 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2013223.06 rows=73468 width=34) (actual time=2204.172..16837.292 rows=73644 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..534119.28 rows=459305 width=38) (actual time=2144.652..8211.273 rows=455908 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2142.637..2142.637 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.643..397.019 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5981.57..269971.54 rows=579665 width=20) (actual time=36.099..7571.260 rows=573286 loops=1)
Q3,1.0,->  Hash Join  (cost=106409.52..495627.67 rows=1459762 width=12) (actual time=407.000..7050.366 rows=1446774 loops=1)
Q3,1.0,->  Hash  (cost=495627.67..495627.67 rows=1459762 width=12) (actual time=7515.850..7515.850 rows=1446774 loops=1)
Q3,1.0,->  Hash  (cost=45958.49..45958.49 rows=299460 width=4) (actual time=377.383..377.383 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6862.38 rows=299460 width=0) (actual time=66.256..66.256 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56707.78..403908.41 rows=7311971 width=16) (actual time=27.609..4306.921 rows=7234573 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255333.95..1742968.19 rows=32927219 width=12) (actual time=120.260..24425.006 rows=32613822 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6937.24..45958.49 rows=299460 width=4) (actual time=75.221..299.227 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.028..3833.423 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8730.887..8730.887 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598994.08..642520.63 rows=59158 width=20) (actual time=9616.981..9899.917 rows=63754 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6549.67 rows=381690 width=0) (actual time=113.451..113.451 rows=381653 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.09..51942.46 rows=381690 width=4) (actual time=125.569..684.834 rows=381653 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.304..39.062 rows=3981 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=40.265..40.265 rows=3981 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.292..38.374 rows=3981 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7813.755..7937.736 rows=1586554 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.372..250.444 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7961 width=30) (actual time=0.242..1202.468 rows=8043 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=286.149..6544.629 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=285.963..285.963 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.286..49.119 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.273..28.960 rows=3934 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=29.508..29.508 rows=21291 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.258..28.387 rows=3934 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=33.198..214.254 rows=21291 loops=1)
Q19,1.0,->  Nested Loop  (cost=12826.48..607600.47 rows=1137 width=8) (actual time=33.704..5365.340 rows=1185 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.31 rows=8062 width=0) (actual time=3.696..3.696 rows=7909 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.87 rows=7915 width=0) (actual time=3.447..3.447 rows=7927 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.87 rows=7814 width=0) (actual time=3.580..3.580 rows=7852 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12825.91..26419.89 rows=4713 width=30) (actual time=33.248..896.556 rows=4774 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.007..2752.746 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.58 rows=60165658 width=8) (actual time=0.006..8980.447 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.58 rows=60165658 width=8) (actual time=0.014..10344.757 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.037..0.058 rows=30 loops=2039)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.037..0.058 rows=30 loops=2039)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.38 rows=1995 width=0) (actual time=1.080..1.080 rows=2039 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.88..6613.48 rows=1995 width=4) (actual time=1.431..49.278 rows=2039 loops=1)
Q16,1.0,Sort  (cost=413087.85..413157.25 rows=27759 width=40) (actual time=11247.910..11276.817 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50984.63..50984.63 rows=296091 width=40) (actual time=1171.960..1171.960 rows=296826 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403359.28..411039.15 rows=27759 width=40) (actual time=10321.947..11170.017 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2480.63..50984.63 rows=296091 width=40) (actual time=35.042..1043.101 rows=296826 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1967157.30 rows=2253280 width=12) (actual time=0.007..20818.422 rows=2242498 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1967157.30 rows=2253280 width=12) (actual time=0.008..19051.215 rows=2242498 loops=1)
Q14,1.0,->  Hash Join  (cost=93802.33..1154001.74 rows=793398 width=29) (actual time=1732.722..37979.003 rows=774678 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8280.33..1056578.77 rows=793398 width=12) (actual time=150.240..35407.951 rows=774678 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15072914 width=8) (actual time=0.019..8385.386 rows=14853644 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742498.70 rows=15072914 width=8) (actual time=1094.406..20524.480 rows=15353661 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=20) (actual time=0.012..5236.715 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2436767.39 rows=293822 width=15) (actual time=0.111..25678.871 rows=311393 loops=1)
Q12,1.0,->  Hash Join  (cost=596084.94..3042034.26 rows=293822 width=27) (actual time=10567.098..36619.410 rows=311393 loops=1)
Q12,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=20) (actual time=10451.660..10451.660 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..25.460 rows=4007 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..45.050 rows=4007 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.453..4303.669 rows=320560 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=46.810..4374.667 rows=320560 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=46.748..46.748 rows=4007 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.380..26.380 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.274..24.814 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.279..42.995 rows=4007 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826110.80 rows=59711356 width=20) (actual time=0.021..24941.455 rows=59426109 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824308.20 rows=14804157 width=12) (actual time=0.015..18588.756 rows=14823489 loops=1)
Q10,1.0,->  Hash  (cost=269230.08..269230.08 rows=580439 width=8) (actual time=6236.021..6236.021 rows=573838 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5989.50..269230.08 rows=580439 width=8) (actual time=29.799..5997.329 rows=573838 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=404502)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1512491)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.30 rows=1 width=16) (actual time=0.829..0.934 rows=0 loops=4774)
Q19,,->  BitmapOr  (cost=12825.91..12825.91 rows=4716 width=0) (actual time=29.389..29.389 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.15..6270.15 rows=2361 width=0) (actual time=8.453..8.453 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4262.35..4262.35 rows=1553 width=0) (actual time=8.592..8.592 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.92..2292.92 rows=801 width=0) (actual time=8.726..8.726 rows=0 loops=1)

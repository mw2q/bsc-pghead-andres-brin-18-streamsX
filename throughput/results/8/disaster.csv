Q21,704995.0,->  Nested Loop Semi Join  (cost=2406.31..2888664.94 rows=1 width=34) (actual time=42.551..42552.940 rows=704995 loops=1)
Q18,354680.0,->  GroupAggregate  (cost=10316577.71..11155396.02 rows=30502484 width=39) (actual time=75895.498..75895.780 rows=86 loops=1)
Q3,317414.4,->  Sort  (cost=2558708.73..2566644.09 rows=3174144 width=20) (actual time=49947.322..49947.324 rows=10 loops=1)
Q18,88691.3,->  Hash Join  (cost=2211386.56..2834204.07 rows=7627454 width=39) (actual time=49431.509..56575.593 rows=86 loops=1)
Q18,88691.3,->  Hash Join  (cost=2142358.56..2650764.26 rows=7627454 width=20) (actual time=48180.558..55324.363 rows=86 loops=1)
Q18,88691.3,->  Hash  (cost=2834204.07..2834204.07 rows=7627454 width=39) (actual time=56575.791..56575.791 rows=86 loops=1)
Q18,50668.5,->  Sort  (cost=10316577.71..10392833.92 rows=30502484 width=39) (actual time=75895.488..75895.535 rows=602 loops=1)
Q18,50668.5,->  Hash Join  (cost=2929547.25..5690695.85 rows=30502484 width=39) (actual time=56849.768..75894.573 rows=602 loops=1)
Q18,47764.8,->  Hash  (cost=2091011.40..2091011.40 rows=4107773 width=4) (actual time=48036.302..48036.302 rows=86 loops=1)
Q18,47764.8,->  HashAggregate  (cost=1998586.50..2049933.67 rows=4107773 width=8) (actual time=42026.624..48036.115 rows=86 loops=1)
Q21,39582.0,->  Nested Loop Anti Join  (cost=2406.88..2888666.73 rows=1 width=26) (actual time=42.850..45793.879 rows=39582 loops=1)
Q10,28028.5,->  Sort  (cost=2300332.76..2301734.19 rows=560571 width=175) (actual time=34538.652..34538.654 rows=20 loops=1)
Q9,26894.3,->  Sort  (cost=1108618.42..1108618.73 rows=122 width=46) (actual time=120738.823..121454.150 rows=3281111 loops=1)
Q9,26894.3,->  Nested Loop  (cost=66774.50..1108610.35 rows=122 width=24) (actual time=1077.812..109437.183 rows=3281111 loops=1)
Q9,26894.3,->  Nested Loop  (cost=66774.07..1108551.22 rows=122 width=24) (actual time=1077.773..66032.625 rows=3281111 loops=1)
Q9,26894.3,->  Nested Loop  (cost=66773.78..1108511.85 rows=122 width=28) (actual time=1077.764..53224.566 rows=3281111 loops=1)
Q9,26894.3,->  Hash Join  (cost=66776.07..1108614.20 rows=122 width=46) (actual time=1077.878..113661.661 rows=3281111 loops=1)
Q2,4868.0,->  Merge Join  (cost=465687.75..895907.54 rows=1 width=190) (actual time=7088.069..9648.530 rows=4868 loops=1)
Q21,3995.0,->  HashAggregate  (cost=2888666.73..2888666.74 rows=1 width=26) (actual time=45852.171..45889.547 rows=3995 loops=1)
Q15,3730.0,->  Subquery Scan on revenue8  (cost=1656998.11..1657082.03 rows=3730 width=12) (actual time=75245.888..75259.909 rows=1 loops=1)
Q15,3730.0,->  Sort  (cost=1657303.31..1657312.64 rows=3730 width=12) (actual time=75259.929..75259.930 rows=1 loops=1)
Q15,3730.0,Merge Join  (cost=3297552.60..3302649.75 rows=3730 width=79) (actual time=75283.628..75283.630 rows=1 loops=1)
Q15,3730.0,->  HashAggregate  (cost=1656998.11..1657044.73 rows=3730 width=12) (actual time=75245.887..75259.907 rows=1 loops=1)
Q7,768.0,Sort  (cost=2133596.57..2133604.25 rows=3072 width=64) (actual time=69123.778..69123.779 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2133372.55..2133418.63 rows=3072 width=64) (actual time=69123.710..69123.715 rows=4 loops=1)
Q8,365.0,Sort  (cost=1719646.17..1719647.99 rows=730 width=38) (actual time=13928.907..13928.907 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1719598.68..1719611.45 rows=730 width=38) (actual time=13928.867..13928.867 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2888666.75..2888666.76 rows=1 width=26) (actual time=45890.733..45890.739 rows=100 loops=1)
Q21,100.0,Limit  (cost=2888666.75..2888666.76 rows=1 width=26) (actual time=45890.735..45890.750 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=895907.55..895907.56 rows=1 width=190) (actual time=9654.765..9654.780 rows=100 loops=1)
Q2,100.0,Limit  (cost=895907.55..895907.56 rows=1 width=190) (actual time=9654.767..9654.791 rows=100 loops=1)
Q11,34.7,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6768.835..6769.865 rows=9218 loops=1)
Q11,34.7,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6691.297..6763.707 rows=9218 loops=1)
Q3,28.0,->  HashAggregate  (cost=2458375.18..2490116.62 rows=3174144 width=20) (actual time=49817.111..49898.203 rows=113168 loops=1)
Q15,26.8,->  HashAggregate  (cost=1640165.06..1640202.36 rows=3730 width=12) (actual time=32676.839..32711.426 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=731729)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7836.59 rows=768859 width=0) (actual time=120.040..120.040 rows=10750720 loops=1)
Q3,10.6,->  Hash Join  (cost=770165.52..2410763.02 rows=3174144 width=20) (actual time=16830.035..49562.913 rows=298934 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2414.16 rows=320287 width=0) (actual time=35.059..35.059 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.020..0.105 rows=7 loops=437544)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=10.827..10.827 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.591..3.591 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.328..0.328 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.292..0.292 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2005734.03..2005734.10 rows=25 width=34) (actual time=17288.639..17288.640 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2005733.20..2005733.45 rows=25 width=34) (actual time=17288.599..17288.599 rows=5 loops=1)
Q4,5.0,Sort  (cost=1497820.29..1497820.30 rows=1 width=16) (actual time=22439.306..22439.306 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.09 rows=5 width=4) (actual time=0.018..0.018 rows=1 loops=567354)
Q4,5.0,->  HashAggregate  (cost=1497820.27..1497820.28 rows=1 width=16) (actual time=22439.256..22439.259 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704995)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5748.27 rows=570827 width=0) (actual time=27.616..27.616 rows=2568960 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5828.72 rows=578872 width=0) (actual time=47.825..47.825 rows=2561280 loops=1)
Q13,4.3,Sort  (cost=855985.23..855985.73 rows=200 width=8) (actual time=31979.688..31979.691 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855975.59..855977.59 rows=200 width=8) (actual time=31979.621..31979.628 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.043..0.045 rows=1 loops=1202641)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=453932)
Q17,3.6,->  Nested Loop  (cost=82.88..115030.34 rows=20276 width=4) (actual time=1.736..227.704 rows=5607 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5974.00..1497036.27 rows=156801 width=16) (actual time=48.014..22106.729 rows=519911 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.039 rows=3 loops=2080)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245072.65 rows=32656619 width=0) (actual time=133.424..133.424 rows=10782720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.326..0.401 rows=3 loops=21999)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55574.00 rows=7404534 width=0) (actual time=27.578..27.578 rows=2563840 loops=1)
Q22,2.3,Sort  (cost=698763.96..698763.97 rows=3 width=20) (actual time=14217.510..14217.511 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645894.88..645894.93 rows=3 width=20) (actual time=14217.463..14217.465 rows=7 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..182950.30 rows=24373640 width=0) (actual time=153.169..153.169 rows=10696960 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..182950.30 rows=24373640 width=0) (actual time=119.603..119.603 rows=10686720 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.047..0.069 rows=2 loops=6609)
Q20,2.0,->  Nested Loop  (cost=754.48..11668629.61 rows=29587 width=4) (actual time=15.807..9113.300 rows=59859 loops=1)
Q20,2.0,->  Hash  (cost=11668629.61..11668629.61 rows=29587 width=4) (actual time=9149.956..9149.956 rows=59859 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=5.686..5.686 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3043994.02..3043994.02 rows=1 width=27) (actual time=38510.929..38510.929 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3043994.00..3043994.01 rows=1 width=27) (actual time=38510.883..38510.884 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347431.28..2265796.19 rows=560571 width=175) (actual time=7721.383..31990.208 rows=1138040 loops=1)
Q10,2.0,->  Hash Join  (cost=347429.71..2258086.77 rows=560571 width=153) (actual time=7721.354..31532.180 rows=1138040 loops=1)
Q10,2.0,->  Hash Join  (cost=278401.71..2180650.21 rows=560571 width=12) (actual time=6314.863..29240.877 rows=1138040 loops=1)
Q16,1.9,->  Sort  (cost=403686.89..405173.51 rows=594650 width=40) (actual time=10870.742..11019.568 rows=1188657 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.419..4241.501 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54750.45..346654.95 rows=594650 width=40) (actual time=1286.068..7252.338 rows=1188657 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1844252.74 rows=20314926 width=8) (actual time=0.015..21155.327 rows=37965587 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2358816.97 rows=396453 width=38) (actual time=42.525..37325.566 rows=731729 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1930964.99 rows=812597 width=34) (actual time=42.493..29059.355 rows=1516384 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.031..0.382 rows=56 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..17.567 rows=61971 loops=1)
Q1,1.5,Sort  (cost=4163713.39..4163713.41 rows=6 width=20) (actual time=92412.105..92412.106 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4163713.21..4163713.31 rows=6 width=20) (actual time=92412.054..92412.056 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1108618.42..1108622.69 rows=122 width=46) (actual time=120749.356..123741.586 rows=175 loops=1)
Q20,1.4,Sort  (cost=11671443.24..11671446.20 rows=1183 width=51) (actual time=9181.719..9181.818 rows=1774 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669042.45..11671382.86 rows=1183 width=51) (actual time=9150.405..9180.337 rows=1774 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.156..4.156 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2279810.46..2285416.17 rows=560571 width=175) (actual time=34139.520..34385.277 rows=378972 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.36 rows=139637 width=0) (actual time=626.101..626.101 rows=190834 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.27..41849.74 rows=139637 width=24) (actual time=634.862..1630.395 rows=190834 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91909.19 rows=9176119 width=0) (actual time=122.796..122.796 rows=10792960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=11.108..11.108 rows=21999 loops=1)
Q18,1.1,Limit  (cost=10316577.71..10316580.46 rows=100 width=39) (actual time=75895.501..75895.792 rows=86 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100097 width=4) (actual time=0.009..984.653 rows=109386 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.21..351735.09 rows=400388 width=16) (actual time=1077.721..6122.293 rows=437544 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100097 width=4) (actual time=1077.171..1077.171 rows=109386 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.882..2530.139 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.04..1671822.30 rows=121034 width=20) (actual time=7.678..10900.572 rows=121817 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.60..1476409.44 rows=399091 width=16) (actual time=7.513..5390.947 rows=401849 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.48..1718659.09 rows=24207 width=16) (actual time=2638.682..13815.755 rows=24230 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.09 rows=31 width=20) (actual time=0.028..0.382 rows=30 loops=13362)
Q8,1.0,->  Hash Join  (cost=38744.04..1719114.54 rows=24207 width=38) (actual time=2638.726..13887.960 rows=24230 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.19..1710848.39 rows=24207 width=16) (actual time=2638.668..13647.260 rows=24230 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2627.925..2627.925 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.73 rows=13240 width=0) (actual time=5.038..5.038 rows=13362 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.04..28006.04 rows=13240 width=4) (actual time=7.437..146.805 rows=13362 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=10.867..495.898 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.005..4461.915 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2120523.42 rows=1474157 width=42) (actual time=1051.826..68052.049 rows=1460627 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2132452.31 rows=61349 width=64) (actual time=1123.606..69007.291 rows=57478 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534837.31 rows=1211997 width=30) (actual time=1051.755..12966.631 rows=1202641 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=9.296..991.275 rows=120032 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.046..51.171 rows=7898 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=1051.225..1051.225 rows=120032 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=53.566..53.566 rows=7898 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92009.13..1377731.81 rows=399755 width=8) (actual time=123.837..32452.792 rows=397896 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480657.80 rows=2287415 width=8) (actual time=0.014..5485.480 rows=2279107 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.702..2020.546 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1985869.31 rows=1829508 width=46) (actual time=2132.564..16229.500 rows=1817523 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2005001.41 rows=73179 width=34) (actual time=2220.410..17192.170 rows=72100 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..532152.07 rows=457483 width=38) (actual time=2132.540..8889.277 rows=453932 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2129.994..2129.994 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.625..394.353 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5973.43..270710.51 rows=578872 width=20) (actual time=47.990..11417.097 rows=567354 loops=1)
Q3,1.0,->  Hash Join  (cost=107100.38..498485.57 rows=1475452 width=12) (actual time=985.096..16018.648 rows=1459453 loops=1)
Q3,1.0,->  Hash  (cost=498485.57..498485.57 rows=1475452 width=12) (actual time=16685.341..16685.341 rows=1459453 loops=1)
Q3,1.0,->  Hash  (cost=45939.05..45939.05 rows=298895 width=4) (actual time=954.781..954.781 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6850.14 rows=298895 width=0) (actual time=85.756..85.756 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57425.14..406288.81 rows=7404534 width=16) (actual time=27.741..11841.397 rows=7315872 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253236.80..1739630.54 rows=32656619 width=12) (actual time=134.178..26689.828 rows=32289646 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6924.86..45939.05 rows=298895 width=4) (actual time=94.810..857.910 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=4) (actual time=0.015..5986.421 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408911.95..408911.95 rows=15209895 width=4) (actual time=12269.234..12269.234 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601941.91..645452.08 rows=59040 width=20) (actual time=12986.312..14188.900 rows=63647 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.00 rows=380931 width=0) (actual time=162.723..162.723 rows=381638 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.23..51916.67 rows=380931 width=4) (actual time=171.769..419.029 rows=381638 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.405..41.001 rows=3995 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=42.444..42.444 rows=3995 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.392..40.048 rows=3995 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7087.786..7224.545 rows=1602838 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.314..227.911 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8181 width=30) (actual time=0.090..1559.129 rows=8068 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=239.280..5850.756 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=239.136..239.136 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..44.723 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.293..28.583 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..28.011 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=15.083..264.282 rows=21999 loops=1)
Q19,1.0,->  Nested Loop  (cost=12843.60..610284.07 rows=1126 width=8) (actual time=39.074..3807.054 rows=1175 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.400..4.400 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8019 width=0) (actual time=3.541..3.541 rows=8006 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.15 rows=7944 width=0) (actual time=3.550..3.550 rows=8112 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.07 rows=7935 width=0) (actual time=3.475..3.475 rows=8038 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12843.03..26500.84 rows=4740 width=30) (actual time=34.512..158.284 rows=4751 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..410122.07 rows=15254907 width=16) (actual time=0.007..3318.739 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1693561.67 rows=61004967 width=8) (actual time=0.008..10232.816 rows=60045180 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1693561.67 rows=61004967 width=8) (actual time=0.011..9329.824 rows=60045180 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.044 rows=30 loops=2080)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.044 rows=30 loops=2080)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.61 rows=2018 width=0) (actual time=0.989..0.989 rows=2080 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.11..6677.28 rows=2018 width=4) (actual time=1.350..36.606 rows=2080 loops=1)
Q16,1.0,Sort  (cost=413456.87..413526.56 rows=27875 width=40) (actual time=11674.062..11677.509 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51017.66..51017.66 rows=297325 width=40) (actual time=1283.197..1283.197 rows=297332 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403686.89..411398.76 rows=27875 width=40) (actual time=10870.795..11614.840 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2488.49..51017.66 rows=297325 width=40) (actual time=35.129..1153.826 rows=297332 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=183511.40..1617721.00 rows=2244406 width=12) (actual time=153.915..30392.952 rows=2243697 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=183511.40..1617721.00 rows=2244406 width=12) (actual time=120.397..40296.771 rows=2243697 loops=1)
Q14,1.0,->  Hash Join  (cost=93550.81..1148755.57 rows=768859 width=29) (actual time=1759.471..32992.344 rows=750000 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8028.81..1051700.68 rows=768859 width=12) (actual time=120.793..30416.153 rows=750000 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15103530 width=8) (actual time=0.018..8984.077 rows=14853513 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742957.94 rows=15103530 width=8) (actual time=863.718..20562.350 rows=15353531 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.012..4530.467 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434369.11 rows=289848 width=15) (actual time=0.075..28089.252 rows=312891 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3038921.66 rows=289848 width=27) (actual time=9731.201..38166.847 rows=312891 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=9656.691..9656.691 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.332..42.062 rows=4009 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..24.254 rows=4009 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.148..2374.296 rows=320720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=43.259..4010.946 rows=320720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=43.208..43.208 rows=4009 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.089..25.089 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.269..23.605 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.314..41.285 rows=4009 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.25 rows=58666749 width=20) (actual time=0.015..20095.311 rows=58634749 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1840630.49 rows=14936612 width=12) (actual time=0.010..19155.246 rows=14822462 loops=1)
Q10,1.0,->  Hash  (cost=271266.38..271266.38 rows=570827 width=8) (actual time=6309.751..6309.751 rows=568587 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5890.97..271266.38 rows=570827 width=8) (actual time=27.782..6084.355 rows=568587 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=401849)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1516384)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.15 rows=1 width=16) (actual time=0.676..0.766 rows=0 loops=4751)
Q19,,->  BitmapOr  (cost=12843.03..12843.03 rows=4744 width=0) (actual time=30.518..30.518 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.36..6270.36 rows=2367 width=0) (actual time=8.257..8.257 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4279.64..4279.64 rows=1579 width=0) (actual time=8.732..8.732 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.53..2292.53 rows=797 width=0) (actual time=9.971..9.971 rows=0 loops=1)

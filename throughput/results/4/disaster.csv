Q21,702192.0,->  Nested Loop Semi Join  (cost=2406.31..2848694.50 rows=1 width=34) (actual time=63.547..40294.918 rows=702192 loops=1)
Q18,404299.3,->  GroupAggregate  (cost=10255896.53..11089764.01 rows=30322454 width=39) (actual time=77495.550..77495.796 rows=75 loops=1)
Q3,320279.4,->  Sort  (cost=2574157.82..2582164.80 rows=3202794 width=20) (actual time=38598.211..38598.212 rows=10 loops=1)
Q18,101099.6,->  Hash Join  (cost=2199590.69..2818977.47 rows=7582472 width=39) (actual time=50835.595..57377.084 rows=75 loops=1)
Q18,101099.6,->  Hash Join  (cost=2130562.69..2636212.39 rows=7582472 width=20) (actual time=49503.349..56044.535 rows=75 loops=1)
Q18,101099.6,->  Hash  (cost=2818977.47..2818977.47 rows=7582472 width=39) (actual time=57377.256..57377.256 rows=75 loops=1)
Q18,57757.0,->  Sort  (cost=10255896.53..10331702.66 rows=30322454 width=39) (actual time=77495.540..77495.575 rows=525 loops=1)
Q18,57757.0,->  Hash Join  (cost=2913758.37..5658610.38 rows=30322454 width=39) (actual time=57646.368..77494.766 rows=525 loops=1)
Q18,54770.3,->  Hash  (cost=2079215.53..2079215.53 rows=4107773 width=4) (actual time=49379.845..49379.845 rows=75 loops=1)
Q18,54770.3,->  HashAggregate  (cost=1986790.63..2038137.80 rows=4107773 width=8) (actual time=42266.374..49379.691 rows=75 loops=1)
Q21,39363.0,->  Nested Loop Anti Join  (cost=2406.88..2848696.28 rows=1 width=26) (actual time=63.555..43425.393 rows=39363 loops=1)
Q10,28271.5,->  Sort  (cost=2292493.85..2293907.43 rows=565431 width=175) (actual time=40026.603..40026.606 rows=20 loops=1)
Q9,24315.2,->  Sort  (cost=1185292.89..1185293.22 rows=134 width=46) (actual time=111010.714..111677.263 rows=3258240 loops=1)
Q9,24315.2,->  Nested Loop  (cost=66899.62..1185284.08 rows=134 width=24) (actual time=1104.611..100870.180 rows=3258240 loops=1)
Q9,24315.2,->  Nested Loop  (cost=66899.18..1185219.14 rows=134 width=24) (actual time=1104.570..62457.685 rows=3258240 loops=1)
Q9,24315.2,->  Nested Loop  (cost=66898.89..1185175.90 rows=134 width=28) (actual time=1104.557..49968.838 rows=3258240 loops=1)
Q9,24315.2,->  Hash Join  (cost=66901.18..1185288.15 rows=134 width=46) (actual time=1104.666..104501.381 rows=3258240 loops=1)
Q2,4783.0,->  Merge Join  (cost=465687.75..892145.81 rows=1 width=190) (actual time=5392.388..7441.050 rows=4783 loops=1)
Q21,3974.0,->  HashAggregate  (cost=2848696.29..2848696.30 rows=1 width=26) (actual time=43490.618..43491.853 rows=3974 loops=1)
Q15,3736.0,->  Subquery Scan on revenue4  (cost=1779336.70..1779420.76 rows=3736 width=12) (actual time=76696.937..76701.292 rows=1 loops=1)
Q15,3736.0,->  Sort  (cost=1779642.44..1779651.78 rows=3736 width=12) (actual time=76701.311..76701.311 rows=1 loops=1)
Q15,3736.0,Merge Join  (cost=3542185.63..3547282.88 rows=3736 width=79) (actual time=76717.471..76717.474 rows=1 loops=1)
Q15,3736.0,->  HashAggregate  (cost=1779336.70..1779383.40 rows=3736 width=12) (actual time=76696.936..76701.290 rows=1 loops=1)
Q7,768.0,Sort  (cost=2158355.68..2158363.36 rows=3072 width=64) (actual time=32366.276..32366.277 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2158131.66..2158177.74 rows=3072 width=64) (actual time=32366.212..32366.217 rows=4 loops=1)
Q8,365.0,Sort  (cost=1779329.45..1779331.28 rows=730 width=38) (actual time=12443.682..12443.682 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1779281.96..1779294.74 rows=730 width=38) (actual time=12443.639..12443.639 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2848696.31..2848696.31 rows=1 width=26) (actual time=43493.040..43493.047 rows=100 loops=1)
Q21,100.0,Limit  (cost=2848696.31..2848696.31 rows=1 width=26) (actual time=43493.041..43493.059 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=892145.82..892145.83 rows=1 width=190) (actual time=7445.940..7445.952 rows=100 loops=1)
Q2,100.0,Limit  (cost=892145.82..892145.83 rows=1 width=190) (actual time=7445.942..7445.967 rows=100 loops=1)
Q11,34.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8885.138..8886.197 rows=9181 loops=1)
Q11,34.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8779.553..8879.877 rows=9181 loops=1)
Q3,28.2,->  HashAggregate  (cost=2472918.65..2504946.59 rows=3202794 width=20) (actual time=38530.777..38576.982 rows=113448 loops=1)
Q15,26.7,->  HashAggregate  (cost=1762458.83..1762496.19 rows=3736 width=12) (actual time=37929.744..37964.293 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=728692)
Q14,13.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7889.04 rows=774104 width=0) (actual time=123.418..123.418 rows=10686720 loops=1)
Q3,10.6,->  Hash Join  (cost=774107.92..2424876.74 rows=3202794 width=20) (actual time=10974.448..38240.775 rows=299993 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2409.11 rows=319613 width=0) (actual time=42.860..42.860 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.019..0.099 rows=8 loops=434340)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.609..3.609 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.278..0.278 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.015..0.016 rows=1 loops=1202216)
Q5,5.0,Sort  (cost=1854590.08..1854590.14 rows=25 width=34) (actual time=20880.561..20880.561 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1854589.25..1854589.50 rows=25 width=34) (actual time=20880.511..20880.512 rows=5 loops=1)
Q4,5.0,Sort  (cost=1490998.74..1490998.75 rows=1 width=16) (actual time=15518.231..15518.231 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.11 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=562049)
Q4,5.0,->  HashAggregate  (cost=1490998.72..1490998.73 rows=1 width=16) (actual time=15518.182..15518.185 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=702192)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5785.09 rows=574509 width=0) (actual time=47.523..47.523 rows=2551040 loops=1)
Q13,4.4,Sort  (cost=855372.91..855373.41 rows=200 width=8) (actual time=28393.137..28393.140 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=855363.27..855365.27 rows=200 width=8) (actual time=28393.067..28393.076 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5797.85 rows=575785 width=0) (actual time=28.037..28.037 rows=2558720 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.021..0.023 rows=4 loops=455588)
Q17,3.6,->  Nested Loop  (cost=78.42..112500.60 rows=19824 width=4) (actual time=1.537..209.186 rows=5394 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.039 rows=3 loops=2019)
Q4,3.2,->  Nested Loop Semi Join  (cost=5929.28..1490217.54 rows=156237 width=16) (actual time=47.726..15222.762 rows=515499 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247176.71 rows=32937162 width=0) (actual time=120.879..120.879 rows=10835200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.10 rows=1 width=8) (actual time=0.269..0.339 rows=3 loops=21903)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55658.43 rows=7415790 width=0) (actual time=27.652..27.652 rows=2576640 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..223341.47 rows=29759129 width=0) (actual time=223.867..223.867 rows=10696960 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..223341.47 rows=29759129 width=0) (actual time=154.529..154.529 rows=10708480 loops=1)
Q15,2.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..12.155 rows=40959 loops=1)
Q22,2.3,Sort  (cost=700542.14..700542.15 rows=3 width=20) (actual time=9904.254..9904.255 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=647669.94..647669.98 rows=3 width=20) (actual time=9904.209..9904.211 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.035..0.052 rows=2 loops=6512)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.229..4.229 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403530.92..405014.74 rows=593528 width=40) (actual time=10565.176..10749.610 rows=1188132 loops=1)
Q16,2.0,->  Hash Join  (cost=54721.40..346614.68 rows=593528 width=40) (actual time=1298.773..6726.411 rows=1188132 loops=1)
Q12,2.0,Sort  (cost=3035109.45..3035109.45 rows=1 width=27) (actual time=37885.090..37885.090 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035109.43..3035109.44 rows=1 width=27) (actual time=37885.040..37885.042 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346606.45..2257657.85 rows=565431 width=175) (actual time=13493.467..37343.132 rows=1149524 loops=1)
Q10,2.0,->  Hash Join  (cost=346604.89..2249881.61 rows=565431 width=153) (actual time=13493.436..36929.846 rows=1149524 loops=1)
Q10,2.0,->  Hash Join  (cost=277576.89..2172372.15 rows=565431 width=12) (actual time=11853.702..34388.642 rows=1149524 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.468..3736.176 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818866.30 rows=20035288 width=8) (actual time=0.014..20326.773 rows=37966905 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2326289.56 rows=390995 width=38) (actual time=63.514..35880.528 rows=728692 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1904418.06 rows=801412 width=34) (actual time=63.474..27795.302 rows=1507377 loops=1)
Q20,1.8,->  Nested Loop  (cost=827.04..12723189.16 rows=32276 width=4) (actual time=13.569..7766.986 rows=59286 loops=1)
Q20,1.8,->  Hash  (cost=12723189.16..12723189.16 rows=32276 width=4) (actual time=7802.627..7802.627 rows=59286 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.017..0.429 rows=56 loops=1)
Q1,1.5,Sort  (cost=4240356.76..4240356.77 rows=6 width=20) (actual time=113968.226..113968.227 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4240356.58..4240356.68 rows=6 width=20) (actual time=113968.181..113968.182 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27123.70 rows=3611160 width=0) (actual time=27.200..27.200 rows=2535680 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.163..4.163 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2271793.62..2277447.93 rows=565431 width=175) (actual time=39593.135..39860.911 rows=382285 loops=1)
Q9,1.3,GroupAggregate  (cost=1185292.89..1185297.58 rows=134 width=46) (actual time=111020.975..113843.698 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.71 rows=139668 width=0) (actual time=725.648..725.648 rows=190701 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.63..41850.92 rows=139668 width=24) (actual time=734.366..1191.388 rows=190701 loops=1)
Q20,1.3,Sort  (cost=12726044.33..12726047.56 rows=1291 width=51) (actual time=7847.186..7847.282 rows=1802 loops=1)
Q20,1.3,->  Hash Semi Join  (cost=12723635.61..12725977.63 rows=1291 width=51) (actual time=7803.078..7845.202 rows=1802 loops=1)
Q18,1.3,Limit  (cost=10255896.53..10255899.28 rows=100 width=39) (actual time=77495.553..77495.808 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91637.11 rows=9148911 width=0) (actual time=188.030..188.030 rows=10718720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=110106 width=4) (actual time=0.010..1053.931 rows=108585 loops=1)
Q9,1.0,->  Hash Join  (cost=66898.32..352260.57 rows=440424 width=16) (actual time=1104.451..5741.968 rows=434340 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=110106 width=4) (actual time=1103.955..1103.955 rows=108585 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.763..2210.248 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.17..1731086.56 rows=126404 width=20) (actual time=7.301..9791.040 rows=122353 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.73..1526997.86 rows=416800 width=16) (actual time=7.076..5188.116 rows=402269 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.61..1778300.76 rows=25281 width=16) (actual time=2317.337..12349.802 rows=24567 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.48 rows=31 width=20) (actual time=0.030..0.361 rows=30 loops=13387)
Q8,1.0,->  Hash Join  (cost=38760.17..1778776.34 rows=25281 width=38) (actual time=2317.379..12393.055 rows=24567 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.32..1770143.54 rows=25281 width=16) (actual time=2317.317..12197.301 rows=24567 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2307.508..2307.508 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.73 rows=13773 width=0) (actual time=4.750..4.750 rows=13387 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=427.17..28653.98 rows=13773 width=4) (actual time=7.031..202.724 rows=13387 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.645..431.911 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=8) (actual time=0.006..4203.861 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2145228.35 rows=1482924 width=42) (actual time=712.421..31447.858 rows=1460416 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2157205.96 rows=61713 width=64) (actual time=755.062..32267.677 rows=57712 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537665.28 rows=1219194 width=30) (actual time=712.378..10896.223 rows=1202216 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..672.663 rows=120177 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..40.127 rows=7897 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=711.859..711.859 rows=120177 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=42.343..42.343 rows=7897 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91834.69..1369480.19 rows=790317 width=8) (actual time=188.850..30584.415 rows=794920 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.683..2613.021 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=66036.02..1834771.62 rows=1823935 width=46) (actual time=2753.209..19856.066 rows=1821342 loops=1)
Q5,1.0,->  Hash Join  (cost=70715.02..1853859.69 rows=72956 width=34) (actual time=2806.642..20772.620 rows=73561 loops=1)
Q5,1.0,->  Hash Join  (cost=66035.45..386837.50 rows=456092 width=38) (actual time=2753.162..8689.234 rows=455588 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2723.754..2723.754 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27693.82..335383.22 rows=2280462 width=8) (actual time=27.381..4828.274 rows=2275543 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..511.980 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5928.72..269587.35 rows=574509 width=20) (actual time=47.703..7128.217 rows=562049 loops=1)
Q3,1.0,->  Hash Join  (cost=107241.28..500154.66 rows=1483380 width=12) (actual time=426.004..10227.433 rows=1457655 loops=1)
Q3,1.0,->  Hash  (cost=500154.66..500154.66 rows=1483380 width=12) (actual time=10842.270..10842.270 rows=1457655 loops=1)
Q3,1.0,->  Hash  (cost=45978.34..45978.34 rows=300045 width=4) (actual time=395.608..395.608 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.76 rows=300045 width=0) (actual time=67.783..67.783 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57512.38..407782.75 rows=7415790 width=16) (actual time=27.816..7031.072 rows=7290556 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255411.00..1750637.53 rows=32937162 width=12) (actual time=121.646..21586.698 rows=32391093 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.78..45978.34 rows=300045 width=4) (actual time=77.021..315.186 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..410122.07 rows=15254907 width=4) (actual time=0.019..3923.771 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=410122.07..410122.07 rows=15254907 width=4) (actual time=8357.541..8357.541 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=603715.04..647227.04 rows=59053 width=20) (actual time=9172.260..9855.900 rows=63553 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.63 rows=381017 width=0) (actual time=86.562..86.562 rows=381289 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.89..51919.58 rows=381017 width=4) (actual time=95.368..597.969 rows=381289 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.308..62.233 rows=3974 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=63.360..63.360 rows=3974 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.295..61.605 rows=3974 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5392.006..5516.764 rows=1602827 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.299..142.633 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8085 width=30) (actual time=0.163..1232.232 rows=7977 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=153.872..4229.570 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=153.730..153.730 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..27.651 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.297..40.674 rows=4021 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..820.60 rows=22005 width=0) (actual time=9.388..9.388 rows=21903 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.278..39.850 rows=4021 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=826.61..36397.74 rows=24023 width=4) (actual time=13.089..303.334 rows=21903 loops=1)
Q19,1.0,->  Nested Loop  (cost=12849.10..612349.65 rows=1139 width=8) (actual time=84.541..8265.118 rows=1174 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.180..4.180 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.27 rows=8056 width=0) (actual time=6.111..6.111 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7986 width=0) (actual time=3.761..3.761 rows=7816 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7985 width=0) (actual time=7.486..7.486 rows=8051 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.029..0.029 rows=30 loops=4826)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12844.36..26578.64 rows=4774 width=30) (actual time=39.853..347.904 rows=4826 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=16) (actual time=0.008..3124.676 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1683566.09 rows=60644909 width=8) (actual time=0.009..9114.706 rows=60044872 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1683566.09 rows=60644909 width=8) (actual time=0.011..8835.430 rows=60044872 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=2019)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=2019)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.16 rows=1973 width=0) (actual time=0.945..0.945 rows=2019 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.65..6545.58 rows=1973 width=4) (actual time=1.290..33.773 rows=2019 loops=1)
Q16,1.0,Sort  (cost=413282.05..413351.61 rows=27822 width=40) (actual time=11423.060..11426.659 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50995.62..50995.62 rows=296764 width=40) (actual time=1295.560..1295.560 rows=297195 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403530.92..411228.24 rows=27822 width=40) (actual time=10565.242..11362.983 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2483.30..50995.62 rows=296764 width=40) (actual time=42.919..1131.384 rows=297195 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=223904.06..1739955.00 rows=2250383 width=12) (actual time=155.309..35651.933 rows=2247805 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=223904.06..1739955.00 rows=2250383 width=12) (actual time=224.655..36482.054 rows=2247805 loops=1)
Q14,1.0,->  Hash Join  (cost=93604.56..1146699.83 rows=774104 width=29) (actual time=1841.865..43142.044 rows=773630 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8082.56..1049566.27 rows=774104 width=12) (actual time=124.482..40426.915 rows=773630 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15072914 width=8) (actual time=0.023..7273.879 rows=14838125 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742498.70 rows=15072914 width=8) (actual time=1028.309..17911.777 rows=15338146 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.012..4852.190 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427165.16 rows=291786 width=15) (actual time=0.096..26429.460 rows=311555 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3030003.17 rows=291786 width=27) (actual time=10667.870..37486.087 rows=311555 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=10521.542..10521.542 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..40.817 rows=4023 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.286..25.244 rows=4023 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.250..4213.493 rows=321840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=42.262..4215.860 rows=321840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=42.148..42.148 rows=4023 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.187..26.187 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.258..24.592 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..39.989 rows=4023 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1838829.58 rows=60038175 width=20) (actual time=0.014..34954.926 rows=59343237 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.20 rows=14877533 width=12) (actual time=0.016..19040.942 rows=14822772 loops=1)
Q10,1.0,->  Hash  (cost=270379.57..270379.57 rows=575785 width=8) (actual time=11849.214..11849.214 rows=574055 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5941.80..270379.57 rows=575785 width=8) (actual time=28.216..11595.870 rows=574055 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=402269)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1507377)
Q19,,->  BitmapOr  (cost=12844.36..12844.36 rows=4778 width=0) (actual time=35.950..35.950 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=1.536..1.614 rows=0 loops=4826)
Q19,,->  BitmapAnd  (cost=6270.86..6270.86 rows=2382 width=0) (actual time=12.431..12.431 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.78..4280.78 rows=1602 width=0) (actual time=11.086..11.086 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.23..2292.23 rows=794 width=0) (actual time=8.756..8.756 rows=0 loops=1)

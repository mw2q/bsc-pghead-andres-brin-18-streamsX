Q21,707715.0,->  Nested Loop Semi Join  (cost=2406.31..2852869.92 rows=1 width=34) (actual time=36.044..40818.070 rows=707715 loops=1)
Q3,318041.3,->  Sort  (cost=2541754.56..2549705.60 rows=3180413 width=20) (actual time=49367.011..49367.012 rows=10 loops=1)
Q18,304723.9,->  GroupAggregate  (cost=10306436.14..11144426.86 rows=30472390 width=39) (actual time=75439.552..75439.877 rows=100 loops=1)
Q18,75445.1,->  Hash Join  (cost=2209414.74..2831660.84 rows=7619962 width=39) (actual time=49736.931..55751.256 rows=101 loops=1)
Q18,75445.1,->  Hash Join  (cost=2140386.74..2648333.41 rows=7619962 width=20) (actual time=47777.750..53791.751 rows=101 loops=1)
Q18,75445.1,->  Hash  (cost=2831660.84..2831660.84 rows=7619962 width=39) (actual time=55751.427..55751.427 rows=101 loops=1)
Q18,43469.8,->  Sort  (cost=10306436.14..10382617.11 rows=30472390 width=39) (actual time=75439.541..75439.579 rows=701 loops=1)
Q18,43100.9,->  Hash Join  (cost=2926910.37..5685334.80 rows=30472390 width=39) (actual time=55957.284..75438.519 rows=707 loops=1)
Q18,40671.0,->  Hash  (cost=2089039.58..2089039.58 rows=4107773 width=4) (actual time=47717.902..47717.902 rows=101 loops=1)
Q18,40671.0,->  HashAggregate  (cost=1996614.69..2047961.85 rows=4107773 width=8) (actual time=41667.603..47717.681 rows=101 loops=1)
Q21,40059.0,->  Nested Loop Anti Join  (cost=2406.88..2852871.70 rows=1 width=26) (actual time=36.648..43891.945 rows=40059 loops=1)
Q9,27783.9,->  Sort  (cost=1079564.36..1079564.66 rows=118 width=46) (actual time=138755.454..139492.028 rows=3278502 loops=1)
Q9,27783.9,->  Nested Loop  (cost=66724.46..1079556.52 rows=118 width=24) (actual time=1021.073..128067.158 rows=3278502 loops=1)
Q9,27783.9,->  Nested Loop  (cost=66724.02..1079499.33 rows=118 width=24) (actual time=1021.054..81659.360 rows=3278502 loops=1)
Q9,27783.9,->  Nested Loop  (cost=66723.73..1079461.26 rows=118 width=28) (actual time=1021.046..68895.702 rows=3278502 loops=1)
Q9,27783.9,->  Hash Join  (cost=66726.02..1079560.30 rows=118 width=46) (actual time=1021.138..132012.237 rows=3278502 loops=1)
Q10,27681.9,->  Sort  (cost=2292993.57..2294377.66 rows=553638 width=175) (actual time=37020.223..37020.227 rows=20 loops=1)
Q2,4644.0,->  Merge Join  (cost=465687.75..895614.42 rows=1 width=190) (actual time=7093.425..9074.345 rows=4644 loops=1)
Q21,4004.0,->  HashAggregate  (cost=2852871.70..2852871.71 rows=1 width=26) (actual time=43955.136..43956.454 rows=4004 loops=1)
Q15,3718.0,->  Subquery Scan on revenue18  (cost=1383782.89..1383866.55 rows=3718 width=12) (actual time=49488.449..49504.183 rows=1 loops=1)
Q15,3718.0,->  Sort  (cost=1384087.03..1384096.32 rows=3718 width=12) (actual time=49504.202..49504.202 rows=1 loops=1)
Q15,3718.0,Merge Join  (cost=2750940.05..2756037.03 rows=3718 width=79) (actual time=49522.014..49522.017 rows=1 loops=1)
Q15,3718.0,->  HashAggregate  (cost=1383782.89..1383829.37 rows=3718 width=12) (actual time=49488.448..49504.181 rows=1 loops=1)
Q7,768.0,Sort  (cost=2162574.96..2162582.64 rows=3072 width=64) (actual time=21603.955..21603.956 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2162350.93..2162397.01 rows=3072 width=64) (actual time=21603.892..21603.899 rows=4 loops=1)
Q8,365.0,Sort  (cost=1696333.01..1696334.84 rows=730 width=38) (actual time=12517.930..12517.930 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1696285.52..1696298.29 rows=730 width=38) (actual time=12517.870..12517.871 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2852871.72..2852871.73 rows=1 width=26) (actual time=43957.590..43957.598 rows=100 loops=1)
Q21,100.0,Limit  (cost=2852871.72..2852871.73 rows=1 width=26) (actual time=43957.591..43957.607 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=895614.43..895614.44 rows=1 width=190) (actual time=9079.226..9079.240 rows=100 loops=1)
Q2,100.0,Limit  (cost=895614.43..895614.44 rows=1 width=190) (actual time=9079.227..9079.252 rows=100 loops=1)
Q11,34.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9861.074..9862.190 rows=9384 loops=1)
Q11,34.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9755.794..9855.777 rows=9384 loops=1)
Q3,27.9,->  HashAggregate  (cost=2441222.85..2473026.98 rows=3180413 width=20) (actual time=49264.315..49340.408 rows=113980 loops=1)
Q15,26.8,->  HashAggregate  (cost=1366769.07..1366806.25 rows=3718 width=12) (actual time=23054.545..23084.934 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=734376)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7878.44 rows=773044 width=0) (actual time=180.599..180.599 rows=10664960 loops=1)
Q3,10.5,->  Hash Join  (cost=766225.97..2393516.66 rows=3180413 width=20) (actual time=9925.459..48946.029 rows=301615 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2396.46 rows=317927 width=0) (actual time=34.589..34.589 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.027..0.137 rows=8 loops=436824)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.657..3.657 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.651..3.651 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.365..0.365 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.008..0.009 rows=1 loops=1194281)
Q5,5.0,Sort  (cost=1961908.90..1961908.96 rows=25 width=34) (actual time=19427.808..19427.809 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1961908.07..1961908.32 rows=25 width=34) (actual time=19427.765..19427.767 rows=5 loops=1)
Q4,5.0,Sort  (cost=1485025.17..1485025.17 rows=1 width=16) (actual time=20250.823..20250.824 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.10 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=568300)
Q4,5.0,->  HashAggregate  (cost=1485025.15..1485025.16 rows=1 width=16) (actual time=20250.781..20250.782 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=707715)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5677.71 rows=563771 width=0) (actual time=30.402..30.402 rows=2561280 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5755.57 rows=571557 width=0) (actual time=47.408..47.408 rows=2538240 loops=1)
Q13,4.3,Sort  (cost=845486.98..845487.48 rows=200 width=8) (actual time=32014.499..32014.502 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845477.34..845479.34 rows=200 width=8) (actual time=32014.425..32014.432 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.015..0.016 rows=4 loops=456452)
Q17,3.7,->  Nested Loop  (cost=82.50..112954.65 rows=19944 width=4) (actual time=1.538..200.257 rows=5377 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5899.03..1484244.10 rows=156210 width=16) (actual time=47.618..19936.728 rows=520887 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.038 rows=3 loops=1938)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61454.46 rows=8188595 width=0) (actual time=27.326..27.326 rows=2540800 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241851.79 rows=32227173 width=0) (actual time=119.018..119.018 rows=10718720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.417..0.500 rows=3 loops=21740)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55733.02 rows=7425736 width=0) (actual time=27.274..27.274 rows=2548480 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..14.137 rows=35977 loops=1)
Q22,2.3,Sort  (cost=701960.41..701960.42 rows=3 width=20) (actual time=11260.020..11260.021 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=648957.86..648957.91 rows=3 width=20) (actual time=11259.977..11259.978 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.042..0.058 rows=2 loops=6218)
Q20,2.0,->  Nested Loop  (cost=754.70..11668646.46 rows=29587 width=4) (actual time=33.802..11278.895 rows=59193 loops=1)
Q20,2.0,->  Hash  (cost=11668646.46..11668646.46 rows=29587 width=4) (actual time=11335.815..11335.815 rows=59193 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=6.240..6.240 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403070.19..404545.51 rows=590130 width=40) (actual time=9937.727..10079.119 rows=1185108 loops=1)
Q16,2.0,->  Hash Join  (cost=54644.94..346504.24 rows=590130 width=40) (actual time=1247.083..6599.712 rows=1185108 loops=1)
Q12,2.0,Sort  (cost=3065184.18..3065184.18 rows=1 width=27) (actual time=37699.225..37699.226 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3065184.16..3065184.17 rows=1 width=27) (actual time=37699.178..37699.178 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346405.91..2258884.13 rows=553638 width=175) (actual time=10024.077..34506.220 rows=1121329 loops=1)
Q10,2.0,->  Hash Join  (cost=346404.35..2251270.04 rows=553638 width=153) (actual time=10024.046..34007.985 rows=1121329 loops=1)
Q10,2.0,->  Hash Join  (cost=277376.35..2173937.47 rows=553638 width=12) (actual time=8504.198..31601.704 rows=1121329 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=1.076..3811.241 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1821534.44 rows=20064678 width=8) (actual time=0.016..20065.857 rows=37928885 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2329682.54 rows=391569 width=38) (actual time=36.006..35605.372 rows=734376 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1907208.16 rows=802587 width=34) (actual time=35.827..27468.111 rows=1519791 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.044..1.023 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671460.09..11671463.04 rows=1183 width=51) (actual time=11403.262..11403.367 rows=1819 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669059.29..11671399.71 rows=1183 width=51) (actual time=11336.252..11401.883 rows=1819 loops=1)
Q1,1.5,Sort  (cost=4221680.82..4221680.83 rows=6 width=20) (actual time=154099.862..154099.863 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4221680.63..4221680.74 rows=6 width=20) (actual time=154099.812..154099.814 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1079564.36..1079568.49 rows=118 width=46) (actual time=138765.379..141864.252 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.588..4.588 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2272725.08..2278261.46 rows=553638 width=175) (actual time=36660.716..36881.197 rows=374996 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2910.35 rows=140737 width=0) (actual time=725.295..725.295 rows=190799 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2945.54..41917.88 rows=140737 width=24) (actual time=733.255..833.754 rows=190799 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=96093 width=4) (actual time=0.010..979.070 rows=109206 loops=1)
Q9,1.1,->  Hash Join  (cost=66723.16..351524.88 rows=384372 width=16) (actual time=1020.863..7678.752 rows=436824 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=96093 width=4) (actual time=1020.355..1020.355 rows=109206 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91530.42 rows=9138242 width=0) (actual time=120.258..120.258 rows=10708480 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.977..2228.284 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.39..1648661.29 rows=119087 width=20) (actual time=8.209..9836.595 rows=120817 loops=1)
Q8,1.0,->  Nested Loop  (cost=405.95..1456391.96 rows=392671 width=16) (actual time=8.160..4757.845 rows=398350 loops=1)
Q8,1.0,->  Nested Loop  (cost=38736.83..1695361.05 rows=23817 width=16) (actual time=2354.808..12429.470 rows=24237 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.36 rows=31 width=20) (actual time=0.029..0.337 rows=30 loops=13251)
Q8,1.0,->  Hash Join  (cost=38738.39..1695809.18 rows=23817 width=38) (actual time=2354.856..12475.237 rows=24237 loops=1)
Q8,1.0,->  Hash Join  (cost=38736.53..1687676.19 rows=23817 width=16) (actual time=2354.793..12267.813 rows=24237 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2343.413..2343.413 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.13 rows=13027 width=0) (actual time=5.556..5.556 rows=13251 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=405.39..27742.85 rows=13027 width=4) (actual time=8.083..160.901 rows=13251 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.697..435.541 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..410526.50 rows=15269950 width=8) (actual time=0.006..3471.111 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2149429.53 rows=1485851 width=42) (actual time=853.201..20894.749 rows=1446291 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2161423.41 rows=61835 width=64) (actual time=908.655..21513.547 rows=58554 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..538609.17 rows=1221596 width=30) (actual time=853.040..9198.241 rows=1194281 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.035..807.383 rows=119950 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..51.702 rows=8077 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=852.494..852.494 rows=119950 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=54.174..54.174 rows=8077 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91721.16..1368068.60 rows=762948 width=8) (actual time=121.017..55394.605 rows=762620 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.790..2006.972 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=100368.67..1942040.08 rows=1830004 width=46) (actual time=2143.544..18455.124 rows=1827180 loops=1)
Q5,1.0,->  Hash Join  (cost=105047.67..1961176.09 rows=73198 width=34) (actual time=2198.016..19331.831 rows=73218 loops=1)
Q5,1.0,->  Hash Join  (cost=100368.11..490381.28 rows=457609 width=38) (actual time=2143.525..10258.282 rows=456452 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2114.022..2114.022 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62026.47..438883.40 rows=2288043 width=8) (actual time=27.489..7049.442 rows=2277879 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.684..391.594 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5898.46..268246.82 rows=571557 width=20) (actual time=47.587..10291.431 rows=568300 loops=1)
Q3,1.0,->  Hash Join  (cost=107355.57..497702.60 rows=1489182 width=12) (actual time=431.769..9191.341 rows=1479392 loops=1)
Q3,1.0,->  Hash  (cost=497702.60..497702.60 rows=1489182 width=12) (actual time=9795.454..9795.454 rows=1479392 loops=1)
Q3,1.0,->  Hash  (cost=46005.93..46005.93 rows=300815 width=4) (actual time=401.773..401.773 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.54 rows=300815 width=0) (actual time=69.040..69.040 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57589.45..405198.15 rows=7425736 width=16) (actual time=27.437..5615.772 rows=7377943 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249908.59..1724543.25 rows=32227173 width=12) (actual time=119.765..32554.787 rows=32040351 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.74..46005.93 rows=300815 width=4) (actual time=78.070..321.924 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..410929.34 rows=15284934 width=4) (actual time=0.029..5611.518 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=410929.34..410929.34 rows=15284934 width=4) (actual time=10225.608..10225.608 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=604936.55..648511.57 rows=59505 width=20) (actual time=11027.934..11238.791 rows=63782 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6590.47 rows=383931 width=0) (actual time=76.630..76.630 rows=381896 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6686.45..52042.64 rows=383931 width=4) (actual time=84.605..603.051 rows=381896 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.400..34.538 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.763..35.763 rows=4004 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.384..33.853 rows=4004 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7092.784..7223.261 rows=1603356 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.325..155.655 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8174 width=30) (actual time=0.173..1142.704 rows=7972 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=166.882..5866.583 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=166.733..166.733 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.258..30.265 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.291..63.966 rows=4054 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.76 rows=20021 width=0) (actual time=29.477..29.477 rows=21740 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.276..63.369 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.27..34907.18 rows=22021 width=4) (actual time=33.278..356.521 rows=21740 loops=1)
Q19,1.0,->  Nested Loop  (cost=12826.18..609315.29 rows=1134 width=8) (actual time=41.673..1874.292 rows=1119 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.644..4.644 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7983 width=0) (actual time=3.904..3.904 rows=7916 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.79 rows=7909 width=0) (actual time=4.179..4.179 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.39 rows=7869 width=0) (actual time=4.248..4.248 rows=8039 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12825.61..26455.36 rows=4729 width=30) (actual time=40.219..292.576 rows=4720 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=16) (actual time=0.006..2535.167 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1691890.79 rows=60944779 width=8) (actual time=20.381..9699.124 rows=60044616 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1691890.79 rows=60944779 width=8) (actual time=48.646..8490.572 rows=60044616 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.042 rows=30 loops=1938)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.042 rows=30 loops=1938)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.24 rows=1981 width=0) (actual time=0.907..0.907 rows=1938 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.73..6570.91 rows=1981 width=4) (actual time=1.221..30.533 rows=1938 loops=1)
Q16,1.0,Sort  (cost=412764.37..412833.53 rows=27663 width=40) (actual time=10729.323..10731.337 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50940.40..50940.40 rows=295065 width=40) (actual time=1244.013..1244.013 rows=296437 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403070.19..410723.44 rows=27663 width=40) (actual time=9937.789..10670.946 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2470.22..50940.40 rows=295065 width=40) (actual time=34.633..1120.973 rows=296437 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..86766.94 rows=11549193 width=0) (actual time=127.696..127.696 rows=10835200 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..86766.94 rows=11549193 width=0) (actual time=121.880..121.880 rows=10846720 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=87334.07..1344083.97 rows=2268510 width=12) (actual time=122.675..20901.101 rows=2246877 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=87334.07..1344083.97 rows=2268510 width=12) (actual time=128.521..24275.721 rows=2246877 loops=1)
Q14,1.0,->  Hash Join  (cost=93593.70..1144789.70 rows=773044 width=29) (actual time=2004.330..34197.759 rows=771903 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8071.70..1047672.04 rows=773044 width=12) (actual time=181.384..31421.384 rows=771903 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14864987 width=8) (actual time=0.016..8937.085 rows=14838987 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..733652.41 rows=14864987 width=8) (actual time=1187.976..20563.944 rows=15339004 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.013..5437.080 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2451288.62 rows=292713 width=15) (actual time=0.141..25890.855 rows=313629 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..3060061.68 rows=292713 width=27) (actual time=11035.807..37352.909 rows=313629 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=10940.713..10940.713 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..24.401 rows=3991 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.297..36.673 rows=3991 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.399..4292.666 rows=319280 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.783..5087.756 rows=319280 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.728..37.728 rows=3991 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.326..25.326 rows=3991 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..23.750 rows=3991 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.277..35.988 rows=3991 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827915.11 rows=59844138 width=20) (actual time=0.013..77302.754 rows=59443115 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1835178.36 rows=14892368 width=12) (actual time=0.013..19340.663 rows=14822651 loops=1)
Q10,1.0,->  Hash  (cost=270329.21..270329.21 rows=563771 width=8) (actual time=8497.628..8497.628 rows=560974 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5818.65..270329.21 rows=563771 width=8) (actual time=30.567..8180.355 rows=560974 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=398350)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1519791)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.24 rows=1 width=16) (actual time=0.298..0.334 rows=0 loops=4720)
Q19,,->  BitmapOr  (cost=12825.61..12825.61 rows=4732 width=0) (actual time=35.357..35.357 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.83..6270.83 rows=2382 width=0) (actual time=9.452..9.452 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4262.87..4262.87 rows=1564 width=0) (actual time=9.741..9.741 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2291.41..2291.41 rows=786 width=0) (actual time=11.340..11.340 rows=0 loops=1)

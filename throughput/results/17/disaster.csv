Q21,714536.0,->  Nested Loop Semi Join  (cost=2406.31..2851543.16 rows=1 width=34) (actual time=34.200..39831.195 rows=714536 loops=1)
Q18,403494.6,->  GroupAggregate  (cost=10235560.71..11067768.41 rows=30262098 width=39) (actual time=90878.495..90878.743 rows=75 loops=1)
Q3,315166.6,->  Sort  (cost=2535400.40..2543279.57 rows=3151666 width=20) (actual time=49651.757..49651.759 rows=10 loops=1)
Q18,100899.8,->  Hash Join  (cost=2195635.98..2813879.94 rows=7567488 width=39) (actual time=49773.016..60952.867 rows=75 loops=1)
Q18,100899.8,->  Hash Join  (cost=2126607.98..2631339.62 rows=7567488 width=20) (actual time=48850.725..60030.330 rows=75 loops=1)
Q18,100899.8,->  Hash  (cost=2813879.94..2813879.94 rows=7567488 width=39) (actual time=60953.052..60953.052 rows=75 loops=1)
Q18,57642.0,->  Sort  (cost=10235560.71..10311215.96 rows=30262098 width=39) (actual time=90878.485..90878.526 rows=525 loops=1)
Q18,57642.0,->  Hash Join  (cost=2908473.54..5647861.91 rows=30262098 width=39) (actual time=61794.191..90877.706 rows=525 loops=1)
Q18,54770.3,->  Hash  (cost=2075260.82..2075260.82 rows=4107773 width=4) (actual time=48609.004..48609.004 rows=75 loops=1)
Q18,54770.3,->  HashAggregate  (cost=1982835.93..2034183.09 rows=4107773 width=8) (actual time=41983.710..48608.813 rows=75 loops=1)
Q21,40123.0,->  Nested Loop Anti Join  (cost=2406.88..2851544.94 rows=1 width=26) (actual time=35.236..42907.726 rows=40123 loops=1)
Q9,30390.4,->  Sort  (cost=1016969.82..1016970.09 rows=107 width=46) (actual time=112797.742..113509.951 rows=3251775 loops=1)
Q9,30390.4,->  Nested Loop  (cost=66624.35..1016962.64 rows=107 width=24) (actual time=981.940..102487.651 rows=3251775 loops=1)
Q9,30390.4,->  Nested Loop  (cost=66623.92..1016910.79 rows=107 width=24) (actual time=981.902..63709.640 rows=3251775 loops=1)
Q9,30390.4,->  Nested Loop  (cost=66623.63..1016876.26 rows=107 width=28) (actual time=981.886..51707.098 rows=3251775 loops=1)
Q9,30390.4,->  Hash Join  (cost=66625.92..1016966.21 rows=107 width=46) (actual time=981.993..106266.752 rows=3251775 loops=1)
Q10,28215.6,->  Sort  (cost=2288094.80..2289505.58 rows=564312 width=175) (actual time=35188.372..35188.377 rows=20 loops=1)
Q2,4799.0,->  Merge Join  (cost=465687.75..883742.99 rows=1 width=190) (actual time=8428.191..10734.594 rows=4799 loops=1)
Q21,4049.0,->  HashAggregate  (cost=2851544.95..2851544.96 rows=1 width=26) (actual time=42965.621..42966.674 rows=4049 loops=1)
Q15,3733.0,->  Subquery Scan on revenue17  (cost=1904859.65..1904943.65 rows=3733 width=12) (actual time=64904.697..64904.826 rows=1 loops=1)
Q15,3733.0,->  Sort  (cost=1905165.13..1905174.46 rows=3733 width=12) (actual time=64904.844..64904.845 rows=1 loops=1)
Q15,3733.0,Merge Join  (cost=3793197.89..3798295.08 rows=3733 width=79) (actual time=64919.203..64919.206 rows=1 loops=1)
Q15,3733.0,->  HashAggregate  (cost=1904859.65..1904906.32 rows=3733 width=12) (actual time=64904.696..64904.825 rows=1 loops=1)
Q7,768.0,Sort  (cost=2135691.74..2135699.42 rows=3072 width=64) (actual time=28132.797..28132.797 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2135467.71..2135513.79 rows=3072 width=64) (actual time=28132.734..28132.738 rows=4 loops=1)
Q8,365.0,Sort  (cost=1708683.50..1708685.32 rows=730 width=38) (actual time=14538.728..14538.728 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1708636.00..1708648.78 rows=730 width=38) (actual time=14538.687..14538.688 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2851544.97..2851544.97 rows=1 width=26) (actual time=42967.850..42967.854 rows=100 loops=1)
Q21,100.0,Limit  (cost=2851544.97..2851544.97 rows=1 width=26) (actual time=42967.851..42967.868 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=883743.00..883743.01 rows=1 width=190) (actual time=10740.317..10740.331 rows=100 loops=1)
Q2,100.0,Limit  (cost=883743.00..883743.01 rows=1 width=190) (actual time=10740.319..10740.341 rows=100 loops=1)
Q11,33.4,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8434.413..8435.883 rows=9574 loops=1)
Q11,33.4,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8320.189..8428.964 rows=9574 loops=1)
Q3,27.7,->  HashAggregate  (cost=2435777.37..2467294.03 rows=3151666 width=20) (actual time=49583.361..49630.688 rows=113393 loops=1)
Q15,26.7,->  HashAggregate  (cost=1887948.47..1887985.80 rows=3733 width=12) (actual time=30757.225..30794.842 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=741510)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7661.84 rows=751384 width=0) (actual time=143.257..143.257 rows=10782720 loops=1)
Q3,10.5,->  Hash Join  (cost=762747.24..2388502.38 rows=3151666 width=20) (actual time=15346.225..49224.574 rows=299408 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2416.96 rows=320660 width=0) (actual time=34.851..34.851 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.020..0.103 rows=7 loops=433844)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.655..3.655 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.274..0.274 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.273..0.273 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1960553.06..1960553.12 rows=25 width=34) (actual time=33799.188..33799.188 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1960552.23..1960552.48 rows=25 width=34) (actual time=33799.146..33799.146 rows=5 loops=1)
Q4,5.0,Sort  (cost=1498642.69..1498642.70 rows=1 width=16) (actual time=16794.318..16794.318 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.14 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=568326)
Q4,5.0,->  HashAggregate  (cost=1498642.67..1498642.68 rows=1 width=16) (actual time=16794.274..16794.277 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=714536)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5806.75 rows=576675 width=0) (actual time=27.634..27.634 rows=2574080 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5786.46 rows=574646 width=0) (actual time=27.451..27.451 rows=2553600 loops=1)
Q13,4.3,Sort  (cost=854205.51..854206.01 rows=200 width=8) (actual time=32386.057..32386.059 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854195.87..854197.87 rows=200 width=8) (actual time=32385.985..32385.994 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.012 rows=1 loops=1207974)
Q17,3.8,->  Nested Loop  (cost=82.65..113799.60 rows=20175 width=4) (actual time=1.738..216.470 rows=5203 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.016..0.018 rows=4 loops=454481)
Q4,3.3,->  Nested Loop Semi Join  (cost=5951.49..1497865.49 rows=155437 width=16) (actual time=27.836..16506.901 rows=520923 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.037 rows=3 loops=1954)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61393.30 rows=8180440 width=0) (actual time=27.228..27.228 rows=2540800 loops=1)
Q15,3.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..264092.83 rows=35192645 width=0) (actual time=183.960..183.960 rows=10736640 loops=1)
Q15,3.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..264092.83 rows=35192645 width=0) (actual time=119.624..119.624 rows=10728960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243732.07 rows=32477876 width=0) (actual time=155.771..155.771 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.342..0.417 rows=3 loops=21780)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54671.55 rows=7284206 width=0) (actual time=27.218..27.218 rows=2535680 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..10.665 rows=37000 loops=1)
Q22,2.3,Sort  (cost=699919.90..699919.91 rows=3 width=20) (actual time=12144.136..12144.136 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=647066.29..647066.34 rows=3 width=20) (actual time=12144.093..12144.096 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.057..0.077 rows=2 loops=6517)
Q20,2.0,->  Nested Loop  (cost=754.48..11668629.61 rows=29587 width=4) (actual time=13.547..9433.163 rows=59330 loops=1)
Q20,2.0,->  Hash  (cost=11668629.61..11668629.61 rows=29587 width=4) (actual time=9468.672..9468.672 rows=59330 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3071295.54..3071295.55 rows=1 width=27) (actual time=33768.418..33768.418 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3071295.52..3071295.53 rows=1 width=27) (actual time=33768.371..33768.371 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346057.45..2253327.74 rows=564312 width=175) (actual time=10458.845..32770.930 rows=1149487 loops=1)
Q10,2.0,->  Hash Join  (cost=346055.89..2245566.89 rows=564312 width=153) (actual time=10458.815..32363.363 rows=1149487 loops=1)
Q10,2.0,->  Hash Join  (cost=277027.89..2168074.21 rows=564312 width=12) (actual time=8734.548..29855.348 rows=1149487 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1906310.20 rows=802209 width=34) (actual time=34.087..27765.193 rows=1534268 loops=1)
Q16,1.9,->  Sort  (cost=403748.72..405236.39 rows=595066 width=40) (actual time=9968.187..10157.652 rows=1185334 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.420..3246.579 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54765.23..346673.89 rows=595066 width=40) (actual time=1294.845..6190.269 rows=1185334 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820675.73 rows=20055219 width=8) (actual time=0.013..20395.436 rows=37928885 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2328607.88 rows=391384 width=38) (actual time=34.162..35461.346 rows=741510 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.033..0.379 rows=56 loops=1)
Q9,1.6,GroupAggregate  (cost=1016969.82..1016973.56 rows=107 width=46) (actual time=112808.060..115720.419 rows=175 loops=1)
Q20,1.5,Sort  (cost=11671443.24..11671446.20 rows=1183 width=51) (actual time=9533.526..9533.666 rows=1849 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669042.45..11671382.86 rows=1183 width=51) (actual time=9469.150..9514.039 rows=1849 loops=1)
Q1,1.5,Sort  (cost=4255802.71..4255802.73 rows=6 width=20) (actual time=95049.379..95049.379 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4255802.53..4255802.63 rows=6 width=20) (actual time=95049.328..95049.330 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2267435.54..2273078.66 rows=564312 width=175) (actual time=34817.984..35046.753 rows=382277 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.82 rows=139482 width=0) (actual time=851.418..851.418 rows=190488 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2904.69..41844.10 rows=139482 width=24) (actual time=860.240..1434.248 rows=190488 loops=1)
Q18,1.3,Limit  (cost=10235560.71..10235563.46 rows=100 width=39) (actual time=90878.497..90878.751 rows=75 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=88085 width=4) (actual time=0.016..940.591 rows=108461 loops=1)
Q9,1.2,->  Hash Join  (cost=66623.06..351104.46 rows=352340 width=16) (actual time=981.820..5946.897 rows=433844 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=88085 width=4) (actual time=981.333..981.333 rows=108461 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92529.47 rows=9238147 width=0) (actual time=140.506..140.506 rows=10824960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.736..1953.747 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.05..1660885.39 rows=120707 width=20) (actual time=16.777..12113.757 rows=121375 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.62..1465992.78 rows=398013 width=16) (actual time=16.665..6649.621 rows=399629 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.49..1707698.98 rows=24141 width=16) (actual time=2065.541..14451.879 rows=24379 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.36 rows=31 width=20) (actual time=0.038..0.473 rows=30 loops=13305)
Q8,1.0,->  Hash Join  (cost=38739.06..1708153.18 rows=24141 width=38) (actual time=2065.587..14495.114 rows=24379 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.20..1699909.60 rows=24141 width=16) (actual time=2065.520..14252.998 rows=24379 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2046.084..2046.084 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.77 rows=13113 width=0) (actual time=14.239..14.239 rows=13305 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.05..27847.18 rows=13113 width=4) (actual time=16.583..176.896 rows=13305 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..381.333 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.006..3585.294 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122609.51 rows=1475627 width=42) (actual time=1065.416..27089.687 rows=1470604 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134546.56 rows=61410 width=64) (actual time=1152.155..27982.858 rows=59237 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=1065.318..11902.822 rows=1207974 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..1019.615 rows=120121 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..84.204 rows=8083 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=1064.784..1064.784 rows=120121 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=86.573..86.573 rows=8083 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92732.02..1383033.32 rows=810180 width=8) (actual time=141.378..37498.441 rows=795420 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.799..2514.329 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=100306.94..1940690.21 rows=1829282 width=46) (actual time=2675.133..32849.994 rows=1816415 loops=1)
Q5,1.0,->  Hash Join  (cost=104985.94..1959820.53 rows=73170 width=34) (actual time=2729.237..33691.984 rows=72761 loops=1)
Q5,1.0,->  Hash Join  (cost=100306.37..489931.12 rows=457153 width=38) (actual time=2675.109..23924.204 rows=454481 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2645.139..2645.139 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61964.74..438446.34 rows=2285765 width=8) (actual time=27.393..20056.912 rows=2275582 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.693..491.963 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5950.92..271921.05 rows=576675 width=20) (actual time=27.801..8621.729 rows=568326 loops=1)
Q3,1.0,->  Hash Join  (cost=106221.50..492682.45 rows=1457060 width=12) (actual time=1278.449..14626.195 rows=1452327 loops=1)
Q3,1.0,->  Hash  (cost=492682.45..492682.45 rows=1457060 width=12) (actual time=15183.182..15183.182 rows=1452327 loops=1)
Q3,1.0,->  Hash  (cost=45978.34..45978.34 rows=300045 width=4) (actual time=1249.066..1249.066 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.76 rows=300045 width=0) (actual time=79.585..79.585 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56492.60..401067.17 rows=7284206 width=16) (actual time=27.379..10351.097 rows=7264599 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251851.54..1724297.99 rows=32477876 width=12) (actual time=156.513..27625.572 rows=32433424 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.78..45978.34 rows=300045 width=4) (actual time=88.594..1158.809 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=4) (actual time=0.011..5119.709 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=409719.23..409719.23 rows=15239923 width=4) (actual time=10351.749..10351.749 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=603122.96..646623.98 rows=58975 width=20) (actual time=11292.432..12116.695 rows=63355 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6540.80 rows=380508 width=0) (actual time=87.163..87.163 rows=381019 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6635.93..51902.26 rows=380508 width=4) (actual time=111.846..689.808 rows=381019 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.308..32.890 rows=4049 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=34.040..34.040 rows=4049 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.295..32.236 rows=4049 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=8427.535..8594.698 rows=1603583 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.308..136.833 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7870 width=30) (actual time=0.170..1207.050 rows=8009 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=148.028..6857.967 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=147.880..147.880 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..26.500 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.302..43.440 rows=4044 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.195..9.195 rows=21780 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.285..42.809 rows=4044 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.906..320.816 rows=21780 loops=1)
Q19,1.0,->  Nested Loop  (cost=12825.66..609350.77 rows=1136 width=8) (actual time=35.030..1889.146 rows=1109 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.167..4.167 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7985 width=0) (actual time=3.436..3.436 rows=8051 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.91 rows=7919 width=0) (actual time=3.591..3.591 rows=8018 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..271.75 rows=7805 width=0) (actual time=3.595..3.595 rows=7920 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12825.09..26454.84 rows=4729 width=30) (actual time=32.767..303.570 rows=4740 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.006..6866.172 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680214.95 rows=60524195 width=8) (actual time=0.007..10006.111 rows=60044082 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680214.95 rows=60524195 width=8) (actual time=0.012..18676.285 rows=60044082 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.049 rows=30 loops=1954)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.049 rows=30 loops=1954)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.39 rows=1996 width=0) (actual time=0.891..0.891 rows=1954 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.89..6616.51 rows=1996 width=4) (actual time=1.246..32.829 rows=1954 loops=1)
Q16,1.0,Sort  (cost=413525.64..413595.37 rows=27894 width=40) (actual time=10827.619..10831.200 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51029.84..51029.84 rows=297533 width=40) (actual time=1292.444..1292.444 rows=296491 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403748.72..411465.99 rows=27894 width=40) (actual time=9968.245..10768.272 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2491.34..51029.84 rows=297533 width=40) (actual time=34.920..1169.302 rows=296491 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=264656.54..1865400.22 rows=2254825 width=12) (actual time=184.740..28365.943 rows=2248506 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=264656.54..1865400.22 rows=2254825 width=12) (actual time=120.449..31539.667 rows=2248506 loops=1)
Q14,1.0,->  Hash Join  (cost=93371.69..1143043.84 rows=751384 width=29) (actual time=1884.370..38551.823 rows=748228 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7849.69..1046251.08 rows=751384 width=12) (actual time=144.166..35822.264 rows=748228 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15058574 width=8) (actual time=0.018..8239.613 rows=14853725 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..741403.00 rows=15058574 width=8) (actual time=1400.089..20518.895 rows=15353747 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..410122.07 rows=15254907 width=20) (actual time=0.012..3988.594 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2456123.76 rows=294633 width=15) (actual time=0.020..23961.015 rows=312491 loops=1)
Q12,1.0,->  Hash Join  (cost=600808.41..3066139.45 rows=294633 width=27) (actual time=9145.961..33438.505 rows=312491 loops=1)
Q12,1.0,->  Hash  (cost=410122.07..410122.07 rows=15254907 width=20) (actual time=9076.100..9076.100 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..31.571 rows=3981 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..23.480 rows=3981 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.456..3918.665 rows=318480 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=32.652..4060.788 rows=318480 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.589..32.589 rows=3981 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.388..24.388 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..22.834 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.281..30.913 rows=3981 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1840630.49 rows=60379301 width=20) (actual time=0.017..20136.190 rows=59615863 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1829722.84 rows=14848097 width=12) (actual time=0.031..17694.467 rows=14823054 loops=1)
Q10,1.0,->  Hash  (cost=269844.81..269844.81 rows=574646 width=8) (actual time=8729.401..8729.401 rows=574042 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5930.12..269844.81 rows=574646 width=8) (actual time=27.631..8484.290 rows=574042 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=399629)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1534268)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.25 rows=1 width=16) (actual time=0.299..0.333 rows=0 loops=4740)
Q19,,->  BitmapOr  (cost=12825.09..12825.09 rows=4732 width=0) (actual time=28.938..28.938 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.83..6270.83 rows=2382 width=0) (actual time=8.349..8.349 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4279.39..4279.39 rows=1574 width=0) (actual time=8.519..8.519 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2274.37..2274.37 rows=776 width=0) (actual time=8.430..8.430 rows=0 loops=1)

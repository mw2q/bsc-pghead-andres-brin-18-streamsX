Q21,708198.0,->  Nested Loop Semi Join  (cost=2406.31..2891531.67 rows=1 width=34) (actual time=36.016..36612.762 rows=708198 loops=1)
Q3,319912.2,->  Sort  (cost=2572304.97..2580302.77 rows=3199122 width=20) (actual time=47519.196..47519.197 rows=10 loops=1)
Q18,303525.4,->  GroupAggregate  (cost=10266037.03..11100732.10 rows=30352548 width=39) (actual time=78855.232..78855.553 rows=100 loops=1)
Q18,67167.8,->  Hash Join  (cost=2201562.51..2821520.70 rows=7589964 width=39) (actual time=51105.829..58305.602 rows=113 loops=1)
Q18,67167.8,->  Hash Join  (cost=2132534.51..2638643.24 rows=7589964 width=20) (actual time=50210.431..57409.845 rows=113 loops=1)
Q18,67167.8,->  Hash  (cost=2821520.70..2821520.70 rows=7589964 width=39) (actual time=58305.837..58305.837 rows=113 loops=1)
Q18,43298.9,->  Sort  (cost=10266037.03..10341918.40 rows=30352548 width=39) (actual time=78855.221..78855.267 rows=701 loops=1)
Q21,40140.0,->  Nested Loop Anti Join  (cost=2406.88..2891533.46 rows=1 width=26) (actual time=36.591..39408.814 rows=40140 loops=1)
Q18,38372.3,->  Hash Join  (cost=2916395.25..5663971.43 rows=30352548 width=39) (actual time=58538.400..78854.107 rows=791 loops=1)
Q18,36351.9,->  Hash  (cost=2081187.35..2081187.35 rows=4107773 width=4) (actual time=50130.658..50130.658 rows=113 loops=1)
Q18,36351.9,->  HashAggregate  (cost=1988762.45..2040109.62 rows=4107773 width=8) (actual time=42439.257..50130.382 rows=113 loops=1)
Q10,28321.3,->  Sort  (cost=2277798.40..2279214.46 rows=566426 width=175) (actual time=38661.625..38661.628 rows=20 loops=1)
Q9,26968.4,->  Sort  (cost=1108501.69..1108501.99 rows=121 width=46) (actual time=116798.404..117512.062 rows=3263184 loops=1)
Q9,26968.4,->  Nested Loop  (cost=66774.67..1108493.67 rows=121 width=24) (actual time=1473.595..106601.068 rows=3263184 loops=1)
Q9,26968.4,->  Nested Loop  (cost=66774.23..1108435.03 rows=121 width=24) (actual time=1473.543..64265.397 rows=3263184 loops=1)
Q9,26968.4,->  Nested Loop  (cost=66773.94..1108395.99 rows=121 width=28) (actual time=1473.532..52201.708 rows=3263184 loops=1)
Q9,26968.4,->  Hash Join  (cost=66776.23..1108497.50 rows=121 width=46) (actual time=1473.660..110285.241 rows=3263184 loops=1)
Q2,4822.0,->  Merge Join  (cost=465687.75..885501.72 rows=1 width=190) (actual time=6572.022..8500.224 rows=4822 loops=1)
Q21,4004.0,->  HashAggregate  (cost=2891533.46..2891533.47 rows=1 width=26) (actual time=39457.088..39458.136 rows=4004 loops=1)
Q15,3762.0,->  Subquery Scan on revenue2  (cost=1852609.79..1852694.43 rows=3762 width=12) (actual time=68636.099..68652.219 rows=1 loops=1)
Q15,3762.0,->  Sort  (cost=1852917.84..1852927.25 rows=3762 width=12) (actual time=68652.237..68652.238 rows=1 loops=1)
Q15,3762.0,Merge Join  (cost=3688585.52..3693683.15 rows=3762 width=79) (actual time=68666.500..68666.502 rows=1 loops=1)
Q15,3762.0,->  HashAggregate  (cost=1852609.79..1852656.81 rows=3762 width=12) (actual time=68636.098..68652.217 rows=1 loops=1)
Q7,768.0,Sort  (cost=2134007.41..2134015.09 rows=3072 width=64) (actual time=25219.791..25219.791 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2133783.39..2133829.47 rows=3072 width=64) (actual time=25219.729..25219.736 rows=4 loops=1)
Q8,365.0,Sort  (cost=1753841.93..1753843.76 rows=730 width=38) (actual time=22439.415..22439.415 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1753794.44..1753807.22 rows=730 width=38) (actual time=22439.381..22439.382 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2891533.48..2891533.49 rows=1 width=26) (actual time=39459.281..39459.288 rows=100 loops=1)
Q21,100.0,Limit  (cost=2891533.48..2891533.49 rows=1 width=26) (actual time=39459.283..39459.301 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885501.73..885501.74 rows=1 width=190) (actual time=8505.137..8505.151 rows=100 loops=1)
Q2,100.0,Limit  (cost=885501.73..885501.74 rows=1 width=190) (actual time=8505.139..8505.161 rows=100 loops=1)
Q11,32.6,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6967.164..6968.329 rows=9789 loops=1)
Q11,32.6,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6868.771..6961.663 rows=9789 loops=1)
Q3,28.2,->  HashAggregate  (cost=2471181.87..2503173.09 rows=3199122 width=20) (actual time=47449.273..47497.921 rows=113419 loops=1)
Q15,26.5,->  HashAggregate  (cost=1835582.72..1835620.34 rows=3762 width=12) (actual time=34138.198..34210.410 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=734895)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8077.12 rows=792912 width=0) (actual time=171.311..171.311 rows=10676480 loops=1)
Q3,10.6,->  Hash Join  (cost=773414.84..2423195.04 rows=3199122 width=20) (actual time=12782.156..47175.237 rows=299745 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2425.16 rows=321753 width=0) (actual time=34.809..34.809 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.019..0.104 rows=8 loops=434832)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.599..3.599 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.936..3.936 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.285..0.285 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1918993.90..1918993.96 rows=25 width=34) (actual time=56235.747..56235.747 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1918993.07..1918993.32 rows=25 width=34) (actual time=56235.703..56235.705 rows=5 loops=1)
Q4,5.0,Sort  (cost=1498642.69..1498642.70 rows=1 width=16) (actual time=18786.571..18786.571 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.14 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=568326)
Q4,5.0,->  HashAggregate  (cost=1498642.67..1498642.68 rows=1 width=16) (actual time=18786.523..18786.523 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=708198)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5806.75 rows=576675 width=0) (actual time=27.659..27.659 rows=2574080 loops=1)
Q13,4.4,Sort  (cost=852422.93..852423.43 rows=200 width=8) (actual time=30975.582..30975.585 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852413.29..852415.29 rows=200 width=8) (actual time=30975.501..30975.509 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5807.88 rows=576788 width=0) (actual time=27.319..27.319 rows=2540800 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.010 rows=1 loops=1198910)
Q17,3.8,->  Nested Loop  (cost=78.37..112276.07 rows=19725 width=4) (actual time=1.622..234.208 rows=5159 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.048..0.052 rows=4 loops=456103)
Q4,3.3,->  Nested Loop Semi Join  (cost=5951.49..1497865.49 rows=155437 width=16) (actual time=27.859..18517.693 rows=520923 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.033 rows=3 loops=1971)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247230.76 rows=32944368 width=0) (actual time=168.390..168.390 rows=10824960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.49 rows=1 width=8) (actual time=0.449..0.543 rows=3 loops=21540)
Q15,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246937.80 rows=32905307 width=0) (actual time=223.446..223.446 rows=10728960 loops=1)
Q15,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246937.80 rows=32905307 width=0) (actual time=118.806..118.806 rows=10718720 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55527.92 rows=7398389 width=0) (actual time=27.600..27.600 rows=2574080 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.024..10.682 rows=35971 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44514.86 rows=5929982 width=0) (actual time=56.003..56.003 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=696449.47..696449.48 rows=3 width=20) (actual time=10310.119..10310.119 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643553.70..643553.75 rows=3 width=20) (actual time=10310.080..10310.081 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.98..10613277.84 rows=26897 width=4) (actual time=34.647..12002.891 rows=58634 loops=1)
Q20,2.1,->  Hash  (cost=10613277.84..10613277.84 rows=26897 width=4) (actual time=12039.600..12039.600 rows=58634 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.056 rows=2 loops=6532)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.285..4.285 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3050095.31..3050095.32 rows=1 width=27) (actual time=32929.081..32929.082 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3050095.29..3050095.30 rows=1 width=27) (actual time=32929.031..32929.031 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344871.31..2242901.09 rows=566426 width=175) (actual time=12250.422..36180.024 rows=1136357 loops=1)
Q10,2.0,->  Hash Join  (cost=344869.75..2235111.17 rows=566426 width=153) (actual time=12250.393..35761.467 rows=1136357 loops=1)
Q10,2.0,->  Hash Join  (cost=275841.75..2157586.78 rows=566426 width=12) (actual time=10938.202..33622.609 rows=1136357 loops=1)
Q16,1.9,->  Sort  (cost=404051.72..405544.98 rows=597304 width=40) (actual time=10741.545..10934.379 rows=1191482 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.448..3819.743 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54815.02..346746.06 rows=597304 width=40) (actual time=1490.940..6853.825 rows=1191482 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1846074.09 rows=20334989 width=8) (actual time=0.014..17943.862 rows=37965619 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2361150.78 rows=396844 width=38) (actual time=35.992..32089.828 rows=734895 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1932869.61 rows=813400 width=34) (actual time=35.920..24061.903 rows=1520912 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.414 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616050.06..10616052.75 rows=1076 width=51) (actual time=12072.098..12072.191 rows=1737 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613657.05..10615995.87 rows=1076 width=51) (actual time=12040.028..12070.274 rows=1737 loops=1)
Q1,1.5,Sort  (cost=4254613.99..4254614.01 rows=6 width=20) (actual time=95585.355..95585.356 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4254613.81..4254613.91 rows=6 width=20) (actual time=95585.308..95585.310 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1108501.69..1108505.92 rows=121 width=46) (actual time=116808.911..119711.141 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.189..4.189 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2257061.74..2262726.00 rows=566426 width=175) (actual time=38302.669..38515.657 rows=378761 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.02 rows=139905 width=0) (actual time=974.969..974.969 rows=190543 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.00..41859.51 rows=139905 width=24) (actual time=988.184..1332.074 rows=190543 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92053.49 rows=9190549 width=0) (actual time=118.524..118.524 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.54 rows=17999 width=0) (actual time=29.815..29.815 rows=21540 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100110 width=4) (actual time=0.016..1372.383 rows=108708 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.38..351735.78 rows=400440 width=16) (actual time=1473.438..5958.140 rows=434832 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100110 width=4) (actual time=1472.849..1472.849 rows=108708 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.703..2392.903 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.55..1705766.03 rows=124263 width=20) (actual time=27.638..19564.087 rows=122298 loops=1)
Q8,1.0,->  Nested Loop  (cost=426.11..1505135.93 rows=409739 width=16) (actual time=27.585..13881.902 rows=402461 loops=1)
Q8,1.0,->  Nested Loop  (cost=38756.99..1752829.82 rows=24853 width=16) (actual time=2518.024..22292.861 rows=24201 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.55..1753297.38 rows=24853 width=38) (actual time=2518.068..22360.997 rows=24201 loops=1)
Q8,1.0,->  Hash Join  (cost=38756.69..1744810.69 rows=24853 width=16) (actual time=2518.004..22142.342 rows=24201 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2488.392..2488.392 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.07 rows=13553 width=0) (actual time=24.967..24.967 rows=13421 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=13421)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=421.46..28390.70 rows=13553 width=4) (actual time=27.474..194.852 rows=13421 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.121..0.960 rows=30 loops=13421)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..468.376 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.006..3983.016 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2120925.98 rows=1475501 width=42) (actual time=680.059..24338.977 rows=1460405 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2132862.33 rows=61404 width=64) (actual time=724.640..25119.092 rows=59252 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534837.31 rows=1211997 width=30) (actual time=680.026..10999.001 rows=1198910 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.081..637.954 rows=119629 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..41.925 rows=8093 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=679.499..679.499 rows=119629 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=44.187..44.187 rows=8093 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92153.58..1365413.94 rows=400383 width=8) (actual time=119.274..34531.962 rows=397721 loops=1)
Q5,1.0,->  Nested Loop  (cost=83430.45..1899088.68 rows=1834388 width=46) (actual time=13188.543..55248.369 rows=1824511 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.729..12947.130 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=88109.45..1918259.33 rows=73374 width=34) (actual time=13263.329..56132.507 rows=72674 loops=1)
Q5,1.0,->  Hash Join  (cost=83429.88..440862.62 rows=458713 width=38) (actual time=13187.835..30796.993 rows=456103 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=13129.090..13129.090 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45088.25..389332.98 rows=2293566 width=8) (actual time=56.171..16524.666 rows=2281682 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.955..2573.414 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5950.92..271921.05 rows=576675 width=20) (actual time=27.830..9474.277 rows=568326 loops=1)
Q3,1.0,->  Hash Join  (cost=107106.42..499449.24 rows=1479900 width=12) (actual time=509.767..11975.922 rows=1455247 loops=1)
Q3,1.0,->  Hash  (cost=499449.24..499449.24 rows=1479900 width=12) (actual time=12602.587..12602.587 rows=1455247 loops=1)
Q3,1.0,->  Hash  (cost=45978.34..45978.34 rows=300045 width=4) (actual time=479.450..479.450 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.76 rows=300045 width=0) (actual time=68.536..68.536 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57377.52..407177.38 rows=7398389 width=16) (actual time=27.767..8411.548 rows=7278168 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255466.85..1749714.45 rows=32944368 width=12) (actual time=169.149..27772.790 rows=32439871 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.78..45978.34 rows=300045 width=4) (actual time=77.783..363.604 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=4) (actual time=0.015..3898.501 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=4) (actual time=8723.235..8723.235 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599584.08..643110.06 rows=59153 width=20) (actual time=9805.966..10280.032 rows=63464 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6549.46 rows=381663 width=0) (actual time=94.804..94.804 rows=381563 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6644.88..51941.53 rows=381663 width=4) (actual time=103.759..807.953 rows=381563 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.279..34.670 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.796..35.796 rows=4004 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.265..34.047 rows=4004 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6571.519..6689.141 rows=1603385 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.317..136.909 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7915 width=30) (actual time=0.254..1119.692 rows=8122 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=148.207..5385.561 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=148.064..148.064 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..26.513 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.276..28.805 rows=3988 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.259..28.225 rows=3988 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.55..33178.44 rows=20019 width=4) (actual time=33.550..263.775 rows=21540 loops=1)
Q19,1.0,->  Nested Loop  (cost=12809.80..607253.55 rows=1121 width=8) (actual time=42.460..1782.372 rows=1186 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.181..4.181 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7988 width=0) (actual time=7.502..7.502 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.43 rows=7874 width=0) (actual time=3.629..3.629 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.35 rows=7865 width=0) (actual time=3.428..3.428 rows=7979 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12809.23..26405.76 rows=4714 width=30) (actual time=40.199..310.063 rows=4951 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=16) (actual time=0.006..3578.043 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1685236.97 rows=60705097 width=8) (actual time=0.005..10311.463 rows=60044994 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1685236.97 rows=60705097 width=8) (actual time=0.009..9054.066 rows=60044994 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.044..0.058 rows=30 loops=1971)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.044..0.058 rows=30 loops=1971)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.12 rows=1969 width=0) (actual time=0.944..0.944 rows=1971 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.61..6533.41 rows=1969 width=4) (actual time=1.282..37.195 rows=1971 loops=1)
Q16,1.0,Sort  (cost=413866.17..413936.17 rows=27999 width=40) (actual time=11609.791..11613.352 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51065.65..51065.65 rows=298652 width=40) (actual time=1487.922..1487.922 rows=298037 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404051.72..411798.01 rows=27999 width=40) (actual time=10741.613..11549.595 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2499.82..51065.65 rows=298652 width=40) (actual time=34.876..1338.746 rows=298037 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=247505.37..1812879.97 rows=2270275 width=12) (actual time=224.206..31643.801 rows=2247675 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=247505.37..1812879.97 rows=2270275 width=12) (actual time=119.579..32043.416 rows=2247675 loops=1)
Q14,1.0,->  Hash Join  (cost=93797.35..1153804.02 rows=792912 width=29) (actual time=2053.627..35036.008 rows=774417 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8275.35..1056388.34 rows=792912 width=12) (actual time=172.218..32161.488 rows=774417 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15013475 width=8) (actual time=0.019..8263.128 rows=14852847 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739845.91 rows=15013475 width=8) (actual time=882.807..19668.071 rows=15352865 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=20) (actual time=0.012..4085.126 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2439195.16 rows=291796 width=15) (actual time=0.015..23272.035 rows=310916 loops=1)
Q12,1.0,->  Hash Join  (cost=596675.08..3044988.86 rows=291796 width=27) (actual time=8998.421..32611.553 rows=310916 loops=1)
Q12,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=20) (actual time=8910.825..8910.825 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.329..34.291 rows=3974 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.288..25.239 rows=3974 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.201..2415.103 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=35.328..4124.843 rows=317920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=35.264..35.264 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.148..26.148 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.262..24.622 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.307..33.576 rows=3974 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1840630.49 rows=60349583 width=20) (actual time=0.012..20477.743 rows=59588816 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.73 rows=14774680 width=12) (actual time=0.014..19171.163 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268631.90..268631.90 rows=576788 width=8) (actual time=10934.807..10934.807 rows=567893 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5952.08..268631.90 rows=576788 width=8) (actual time=27.479..10692.224 rows=567893 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=402461)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1520912)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.21 rows=1 width=16) (actual time=0.268..0.296 rows=0 loops=4951)
Q19,,->  BitmapOr  (cost=12809.23..12809.23 rows=4717 width=0) (actual time=36.266..36.266 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6253.63..6253.63 rows=2346 width=0) (actual time=8.347..8.347 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.07..4280.07 rows=1588 width=0) (actual time=15.532..15.532 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2275.04..2275.04 rows=783 width=0) (actual time=8.668..8.668 rows=0 loops=1)

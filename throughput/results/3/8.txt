BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'FRANCE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'STANDARD PLATED TIN'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1763545.02..1763546.85 rows=730 width=38) (actual time=17992.140..17992.140 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1990198 read=345196 dirtied=494 written=9162
   ->  HashAggregate  (cost=1763497.53..1763510.30 rows=730 width=38) (actual time=17992.096..17992.096 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1990195 read=345196 dirtied=494 written=9162
         ->  Hash Join  (cost=38755.30..1763000.03 rows=24875 width=38) (actual time=2871.458..17945.645 rows=24617 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1990195 read=345196 dirtied=494 written=9162
               ->  Nested Loop  (cost=38753.73..1762532.06 rows=24875 width=16) (actual time=2871.411..17883.356 rows=24617 loops=1)
                     Buffers: shared hit=1990191 read=345196 dirtied=494 written=9162
                     ->  Hash Join  (cost=38753.44..1754505.80 rows=24875 width=16) (actual time=2871.401..17728.347 rows=24617 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1916306 read=345102 dirtied=494 written=9162
                           ->  Nested Loop  (cost=423.29..1715460.50 rows=124376 width=20) (actual time=6.636..14775.601 rows=122593 loops=1)
                                 Buffers: shared hit=1741489 read=343521 dirtied=494 written=9162
                                 ->  Nested Loop  (cost=422.86..1514655.69 rows=410112 width=16) (actual time=6.566..8134.033 rows=403098 loops=1)
                                       Buffers: shared hit=226866 read=243518 dirtied=494 written=7958
                                       ->  Bitmap Heap Scan on part  (cost=422.29..28516.66 rows=13660 width=4) (actual time=6.499..56.063 rows=13457 loops=1)
                                             Recheck Cond: ((p_type)::text = 'STANDARD PLATED TIN'::text)
                                             Heap Blocks: exact=11498
                                             Buffers: shared hit=11156 read=411
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.88 rows=13660 width=0) (actual time=4.239..4.239 rows=13457 loops=1)
                                                   Index Cond: ((p_type)::text = 'STANDARD PLATED TIN'::text)
                                                   Buffers: shared hit=1 read=68
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.48 rows=31 width=20) (actual time=0.038..0.587 rows=30 loops=13457)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=215710 read=243107 dirtied=494 written=7958
                                 ->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.016..0.016 rows=0 loops=403098)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=1514623 read=100003 written=1204
                           ->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2861.060..2861.060 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=174817 read=1581
                                 ->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.676..2762.536 rows=300963 loops=1)
                                       Buffers: shared hit=174817 read=1581
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.029..0.053 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.011 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.660..542.903 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Rows Removed by Index Recheck: 1439807
                                             Heap Blocks: lossy=176390
                                             Buffers: shared hit=174815 read=1581
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.629..3.629 rows=353280 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=24617)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73885 read=94
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.006 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 5.439 ms
 Execution time: 17992.821 ms
(69 rows)

COMMIT;
COMMIT

Q21,704365.0,->  Nested Loop Semi Join  (cost=2406.31..2880125.27 rows=1 width=34) (actual time=37.760..84659.953 rows=704365 loops=1)
Q18,358843.4,->  GroupAggregate  (cost=10195349.04..11024277.36 rows=30142848 width=39) (actual time=81427.881..81428.162 rows=84 loops=1)
Q3,321518.2,->  Sort  (cost=2609720.81..2617758.76 rows=3215182 width=20) (actual time=40908.084..40908.086 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2187822.50..2803776.27 rows=7537460 width=39) (actual time=51704.768..58767.387 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2118794.50..2621686.38 rows=7537460 width=20) (actual time=50480.911..57543.195 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2803776.27..2803776.27 rows=7537460 width=39) (actual time=58767.596..58767.596 rows=84 loops=1)
Q18,51263.3,->  Sort  (cost=10195349.04..10270706.16 rows=30142848 width=39) (actual time=81427.870..81427.898 rows=588 loops=1)
Q18,51263.3,->  Hash Join  (cost=2897994.52..5626588.17 rows=30142848 width=39) (actual time=58818.428..81426.968 rows=588 loops=1)
Q18,48902.0,->  Hash  (cost=2067447.33..2067447.33 rows=4107773 width=4) (actual time=50348.408..50348.408 rows=84 loops=1)
Q18,48902.0,->  HashAggregate  (cost=1975022.44..2026369.60 rows=4107773 width=8) (actual time=43718.241..50348.171 rows=84 loops=1)
Q21,39315.0,->  Nested Loop Anti Join  (cost=2406.88..2880127.06 rows=1 width=26) (actual time=38.275..88370.340 rows=39315 loops=1)
Q10,28518.5,->  Sort  (cost=2293179.37..2294605.29 rows=570370 width=175) (actual time=37059.118..37059.120 rows=20 loops=1)
Q9,22375.9,->  Sort  (cost=1261905.11..1261905.47 rows=146 width=46) (actual time=101568.254..102269.275 rows=3266883 loops=1)
Q9,22375.9,->  Nested Loop  (cost=67024.90..1261895.56 rows=146 width=24) (actual time=984.815..91856.710 rows=3266883 loops=1)
Q9,22375.9,->  Nested Loop  (cost=67024.47..1261824.80 rows=146 width=24) (actual time=984.797..59058.698 rows=3266883 loops=1)
Q9,22375.9,->  Nested Loop  (cost=67024.18..1261777.69 rows=146 width=28) (actual time=984.785..47714.685 rows=3266883 loops=1)
Q9,22375.9,->  Hash Join  (cost=67026.47..1261899.86 rows=146 width=46) (actual time=984.879..95299.671 rows=3266883 loops=1)
Q2,4838.0,->  Merge Join  (cost=465687.75..889800.84 rows=1 width=190) (actual time=7879.329..10069.388 rows=4838 loops=1)
Q21,3991.0,->  HashAggregate  (cost=2880127.06..2880127.07 rows=1 width=26) (actual time=88435.997..88437.122 rows=3991 loops=1)
Q15,3702.0,->  Subquery Scan on revenue3  (cost=1323591.37..1323674.67 rows=3702 width=12) (actual time=67986.333..67990.371 rows=1 loops=1)
Q15,3702.0,->  Sort  (cost=1323894.09..1323903.34 rows=3702 width=12) (actual time=67990.388..67990.389 rows=1 loops=1)
Q15,3702.0,Merge Join  (cost=2630729.08..2635825.82 rows=3702 width=79) (actual time=68018.217..68018.219 rows=1 loops=1)
Q15,3702.0,->  HashAggregate  (cost=1323591.37..1323637.65 rows=3702 width=12) (actual time=67986.332..67990.369 rows=1 loops=1)
Q7,768.0,Sort  (cost=2118944.52..2118952.20 rows=3072 width=64) (actual time=22639.511..22639.511 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2118720.49..2118766.57 rows=3072 width=64) (actual time=22639.450..22639.458 rows=4 loops=1)
Q8,365.0,Sort  (cost=1763545.02..1763546.85 rows=730 width=38) (actual time=17992.140..17992.140 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1763497.53..1763510.30 rows=730 width=38) (actual time=17992.096..17992.096 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2880127.08..2880127.09 rows=1 width=26) (actual time=88438.287..88438.293 rows=100 loops=1)
Q21,100.0,Limit  (cost=2880127.08..2880127.09 rows=1 width=26) (actual time=88438.289..88438.305 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889800.85..889800.86 rows=1 width=190) (actual time=10074.425..10074.435 rows=100 loops=1)
Q2,100.0,Limit  (cost=889800.85..889800.86 rows=1 width=190) (actual time=10074.427..10074.450 rows=100 loops=1)
Q11,35.3,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=9426.153..9427.273 rows=9062 loops=1)
Q11,35.3,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=9334.385..9420.982 rows=9062 loops=1)
Q3,28.2,->  HashAggregate  (cost=2508090.06..2540241.88 rows=3215182 width=20) (actual time=40843.054..40887.138 rows=113939 loops=1)
Q15,27.0,->  HashAggregate  (cost=1306751.40..1306788.42 rows=3702 width=12) (actual time=33312.745..33379.368 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.022..0.022 rows=1 loops=731067)
Q14,13.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8039.18 rows=789118 width=0) (actual time=156.429..156.429 rows=10728960 loops=1)
Q3,10.6,->  Hash Join  (cost=774057.52..2459862.33 rows=3215182 width=20) (actual time=9947.928..40542.877 rows=301540 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2419.51 rows=321000 width=0) (actual time=53.419..53.419 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.018..0.094 rows=8 loops=435420)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.629..3.629 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.640..3.640 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1907197.65..1907197.71 rows=25 width=34) (actual time=21255.688..21255.688 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1907196.82..1907197.07 rows=25 width=34) (actual time=21255.649..21255.649 rows=5 loops=1)
Q4,5.0,Sort  (cost=1485025.17..1485025.17 rows=1 width=16) (actual time=15706.427..15706.427 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.10 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=568300)
Q4,5.0,->  HashAggregate  (cost=1485025.15..1485025.16 rows=1 width=16) (actual time=15706.378..15706.380 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.005..0.005 rows=1 loops=704365)
Q13,4.5,Sort  (cost=855370.89..855371.39 rows=200 width=8) (actual time=33684.225..33684.227 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=855361.25..855363.25 rows=200 width=8) (actual time=33684.156..33684.169 rows=44 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5755.57 rows=571557 width=0) (actual time=27.423..27.423 rows=2538240 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5848.14 rows=580814 width=0) (actual time=27.494..27.494 rows=2558720 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1207197)
Q17,3.8,->  Nested Loop  (cost=82.98..115593.55 rows=20336 width=4) (actual time=1.823..192.781 rows=5294 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.016..0.018 rows=4 loops=456297)
Q4,3.3,->  Nested Loop Semi Join  (cost=5899.03..1484244.10 rows=156210 width=16) (actual time=27.626..15405.662 rows=520887 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.015..0.035 rows=3 loops=1974)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244494.13 rows=32579485 width=0) (actual time=120.067..120.067 rows=10835200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.378..0.461 rows=3 loops=21499)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..56342.00 rows=7506934 width=0) (actual time=27.672..27.672 rows=2576640 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44250.06 rows=5894675 width=0) (actual time=27.205..27.205 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=694684.51..694684.51 rows=3 width=20) (actual time=9704.590..9704.591 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641784.25..641784.30 rows=3 width=20) (actual time=9704.545..9704.546 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.044..0.065 rows=2 loops=6644)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=29.451..29.451 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3068325.56..3068325.57 rows=1 width=27) (actual time=43072.607..43072.607 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3068325.54..3068325.55 rows=1 width=27) (actual time=43072.560..43072.560 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346796.29..2258039.08 rows=570370 width=175) (actual time=11523.140..34575.811 rows=1148385 loops=1)
Q10,2.0,->  Hash Join  (cost=346794.73..2250194.93 rows=570370 width=153) (actual time=11523.110..34166.498 rows=1148385 loops=1)
Q10,2.0,->  Hash Join  (cost=277766.73..2172611.38 rows=570370 width=12) (actual time=10133.829..32038.628 rows=1148385 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.62..11676008.11 rows=29605 width=4) (actual time=13.374..10236.751 rows=58479 loops=1)
Q20,1.9,->  Hash  (cost=11676008.11..11676008.11 rows=29605 width=4) (actual time=10274.615..10274.615 rows=58479 loops=1)
Q16,1.9,->  Sort  (cost=403857.77..405347.48 rows=595886 width=40) (actual time=10958.668..11131.813 rows=1185068 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.526..4073.979 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54781.51..346698.37 rows=595886 width=40) (actual time=1426.376..7162.302 rows=1185068 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838829.58 rows=20255189 width=8) (actual time=0.017..46997.546 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351867.95 rows=395287 width=38) (actual time=37.692..67839.084 rows=731067 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925293.93 rows=810208 width=34) (actual time=37.645..55899.886 rows=1514296 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.043..0.490 rows=56 loops=1)
Q20,1.5,Sort  (cost=11678822.04..11678825.00 rows=1184 width=51) (actual time=10306.281..10306.384 rows=1781 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11676421.18..11678761.60 rows=1184 width=51) (actual time=10275.073..10304.839 rows=1781 loops=1)
Q1,1.5,Sort  (cost=4207951.18..4207951.20 rows=6 width=20) (actual time=95641.251..95641.251 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4207951.00..4207951.10 rows=6 width=20) (actual time=95641.204..95641.206 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..20.823 rows=70888 loops=1)
Q10,1.4,->  HashAggregate  (cost=2272298.33..2278002.03 rows=570370 width=175) (actual time=36672.614..36917.831 rows=381739 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.51 rows=139950 width=0) (actual time=863.380..863.380 rows=190874 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.50..41861.19 rows=139950 width=24) (actual time=872.629..1391.026 rows=190874 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=120129 width=4) (actual time=0.014..939.496 rows=108855 loops=1)
Q9,1.1,->  Hash Join  (cost=67023.61..352786.77 rows=480516 width=16) (actual time=984.688..5643.726 rows=435420 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=120129 width=4) (actual time=984.154..984.154 rows=108855 loops=1)
Q9,1.1,GroupAggregate  (cost=1261905.11..1261910.22 rows=146 width=46) (actual time=101578.549..104474.492 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92145.70 rows=9199770 width=0) (actual time=140.536..140.536 rows=10676480 loops=1)
Q18,1.1,Limit  (cost=10195349.04..10195351.79 rows=100 width=39) (actual time=81427.884..81428.171 rows=84 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..68971.92 rows=9176523 width=0) (actual time=167.754..167.754 rows=10771200 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..68971.92 rows=9176523 width=0) (actual time=119.541..119.541 rows=10782720 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.676..2762.536 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.29..1715460.50 rows=124376 width=20) (actual time=6.636..14775.601 rows=122593 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.86..1514655.69 rows=410112 width=16) (actual time=6.566..8134.033 rows=403098 loops=1)
Q8,1.0,->  Nested Loop  (cost=38753.73..1762532.06 rows=24875 width=16) (actual time=2871.411..17883.356 rows=24617 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.48 rows=31 width=20) (actual time=0.038..0.587 rows=30 loops=13457)
Q8,1.0,->  Hash Join  (cost=38755.30..1763000.03 rows=24875 width=38) (actual time=2871.458..17945.645 rows=24617 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.44..1754505.80 rows=24875 width=16) (actual time=2871.401..17728.347 rows=24617 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2861.060..2861.060 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.88 rows=13660 width=0) (actual time=4.239..4.239 rows=13457 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.29..28516.66 rows=13660 width=4) (actual time=6.499..56.063 rows=13457 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.660..542.903 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..2990.627 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1463966 width=42) (actual time=628.102..21804.680 rows=1465209 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117806.63 rows=60924 width=64) (actual time=669.701..22548.726 rows=57804 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=628.076..9552.020 rows=1207197 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..587.871 rows=120322 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.040..39.176 rows=7965 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=627.538..627.538 rows=120322 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=41.364..41.364 rows=7965 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92241.22..1366779.05 rows=382108 width=8) (actual time=141.777..31133.864 rows=382471 loops=1)
Q5,1.0,->  Nested Loop  (cost=83162.24..1887382.78 rows=1823504 width=46) (actual time=3092.736..20273.138 rows=1824279 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.777..2945.916 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=87841.24..1906467.44 rows=72938 width=34) (actual time=3180.941..21146.407 rows=73354 loops=1)
Q5,1.0,->  Hash Join  (cost=83161.67..438466.28 rows=455982 width=38) (actual time=3092.718..11453.686 rows=456297 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=3063.314..3063.314 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44820.04..387015.16 rows=2279911 width=8) (actual time=27.365..7154.335 rows=2284056 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.677..578.686 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5898.46..268246.82 rows=571557 width=20) (actual time=27.591..6721.135 rows=568300 loops=1)
Q3,1.0,->  Hash Join  (cost=107984.86..502600.19 rows=1505466 width=12) (actual time=731.300..9279.378 rows=1479303 loops=1)
Q3,1.0,->  Hash  (cost=502600.19..502600.19 rows=1505466 width=12) (actual time=9818.080..9818.080 rows=1479303 loops=1)
Q3,1.0,->  Hash  (cost=46005.93..46005.93 rows=300815 width=4) (actual time=701.108..701.108 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.54 rows=300815 width=0) (actual time=68.426..68.426 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=58218.74..409628.41 rows=7506934 width=16) (actual time=27.835..5769.849 rows=7377845 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252639.01..1743394.57 rows=32579485 width=12) (actual time=120.823..25086.973 rows=32040600 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.74..46005.93 rows=300815 width=4) (actual time=77.369..603.637 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.013..3726.930 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8040.722..8040.722 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597811.83..641340.46 rows=59172 width=20) (actual time=8983.399..9677.041 rows=63717 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6550.41 rows=381785 width=0) (actual time=147.801..147.801 rows=382366 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.85..51945.71 rows=381785 width=4) (actual time=156.454..681.282 rows=382366 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.272..36.377 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=37.560..37.560 rows=3991 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.259..35.719 rows=3991 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7877.456..8009.131 rows=1603336 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..175.219 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8025 width=30) (actual time=0.127..1244.780 rows=8070 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=189.404..6598.067 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=189.260..189.260 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.276..34.040 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.292..28.350 rows=4049 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.68 rows=20013 width=0) (actual time=9.151..9.151 rows=21499 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..27.736 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.19..34901.16 rows=22035 width=4) (actual time=12.877..300.173 rows=21499 loops=1)
Q19,1.0,->  Nested Loop  (cost=12843.58..612547.85 rows=1146 width=8) (actual time=60.713..2477.824 rows=1107 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.180..4.180 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.71 rows=8000 width=0) (actual time=3.649..3.649 rows=7938 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7985 width=0) (actual time=3.479..3.479 rows=8051 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.83 rows=7912 width=0) (actual time=3.656..3.656 rows=8014 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12843.01..26536.49 rows=4755 width=30) (actual time=58.402..392.235 rows=4697 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..3516.529 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673593.96 rows=60285696 width=8) (actual time=0.012..10148.360 rows=59986308 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673593.96 rows=60285696 width=8) (actual time=0.040..10297.783 rows=59986308 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.039 rows=30 loops=1974)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.039 rows=30 loops=1974)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.71 rows=2028 width=0) (actual time=0.936..0.936 rows=1974 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.21..6707.60 rows=2028 width=4) (actual time=1.274..32.080 rows=1974 loops=1)
Q16,1.0,Sort  (cost=413648.48..413718.31 rows=27933 width=40) (actual time=11797.656..11801.257 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51040.99..51040.99 rows=297943 width=40) (actual time=1423.108..1423.108 rows=296440 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403857.77..411585.67 rows=27933 width=40) (actual time=10958.732..11737.308 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2493.99..51040.99 rows=297943 width=40) (actual time=53.474..1298.188 rows=296440 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=69533.25..1284298.10 rows=2245330 width=12) (actual time=120.333..31042.189 rows=2244598 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=69533.25..1284298.10 rows=2245330 width=12) (actual time=168.574..32282.286 rows=2244598 loops=1)
Q14,1.0,->  Hash Join  (cost=93758.46..1155942.74 rows=789118 width=29) (actual time=1935.175..33925.550 rows=773673 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8236.46..1058583.97 rows=789118 width=12) (actual time=157.254..31223.459 rows=773673 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15072813 width=8) (actual time=0.022..8157.177 rows=14838015 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742497.18 rows=15072813 width=8) (actual time=1025.789..20780.746 rows=15338033 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409719.23 rows=15239923 width=20) (actual time=0.015..5522.989 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2453700.53 rows=295523 width=15) (actual time=0.054..31086.139 rows=311202 loops=1)
Q12,1.0,->  Hash Join  (cost=600218.27..3063153.89 rows=295523 width=27) (actual time=11311.427..42750.896 rows=311202 loops=1)
Q12,1.0,->  Hash  (cost=409719.23..409719.23 rows=15239923 width=20) (actual time=11230.319..11230.319 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.297..25.197 rows=4021 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.286..97.114 rows=4021 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.184..4168.514 rows=321680 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=98.667..4756.170 rows=321680 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=98.620..98.620 rows=4021 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.111..26.111 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.269..24.572 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.264..96.198 rows=4021 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822480.04 rows=59636774 width=20) (actual time=0.014..21209.793 rows=59472715 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.20 rows=14877533 width=12) (actual time=0.010..18433.310 rows=14808082 loops=1)
Q10,1.0,->  Hash  (cost=270506.55..270506.55 rows=580814 width=8) (actual time=10129.213..10129.213 rows=574171 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5993.34..270506.55 rows=580814 width=8) (actual time=27.655..9908.010 rows=574171 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.016..0.016 rows=0 loops=403098)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=1514296)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.23 rows=1 width=16) (actual time=0.382..0.443 rows=0 loops=4697)
Q19,,->  BitmapOr  (cost=12843.01..12843.01 rows=4759 width=0) (actual time=54.491..54.491 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.85..6270.85 rows=2382 width=0) (actual time=8.329..8.329 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.21..4280.21 rows=1590 width=0) (actual time=8.537..8.537 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2291.46..2291.46 rows=786 width=0) (actual time=33.981..33.981 rows=0 loops=1)

Q21,694389.0,->  Nested Loop Semi Join  (cost=2406.31..2845824.41 rows=1 width=34) (actual time=83.064..42250.908 rows=694389 loops=1)
Q3,315853.3,->  Sort  (cost=2542510.15..2550406.48 rows=3158533 width=20) (actual time=62916.373..62916.373 rows=10 loops=1)
Q18,304125.4,->  GroupAggregate  (cost=10286255.16..11122600.01 rows=30412540 width=39) (actual time=78539.117..78539.459 rows=100 loops=1)
Q18,75296.5,->  Hash Join  (cost=2205493.24..2826594.25 rows=7604948 width=39) (actual time=52380.228..58608.005 rows=101 loops=1)
Q18,75296.5,->  Hash Join  (cost=2136465.24..2643492.03 rows=7604948 width=20) (actual time=50988.968..57216.414 rows=101 loops=1)
Q18,75296.5,->  Hash  (cost=2826594.25..2826594.25 rows=7604948 width=39) (actual time=58608.229..58608.229 rows=101 loops=1)
Q18,43384.5,->  Sort  (cost=10286255.16..10362286.51 rows=30412540 width=39) (actual time=78539.108..78539.155 rows=701 loops=1)
Q18,43016.3,->  Hash Join  (cost=2921656.10..5674662.78 rows=30412540 width=39) (actual time=58944.012..78538.112 rows=707 loops=1)
Q18,40671.0,->  Hash  (cost=2085118.08..2085118.08 rows=4107773 width=4) (actual time=50916.099..50916.099 rows=101 loops=1)
Q18,40671.0,->  HashAggregate  (cost=1992693.19..2044040.35 rows=4107773 width=8) (actual time=42984.600..50915.805 rows=101 loops=1)
Q21,39098.0,->  Nested Loop Anti Join  (cost=2406.88..2845826.20 rows=1 width=26) (actual time=83.701..45384.307 rows=39098 loops=1)
Q10,27668.0,->  Sort  (cost=2282344.48..2283727.88 rows=553361 width=175) (actual time=43910.006..43910.009 rows=20 loops=1)
Q9,23043.3,->  Sort  (cost=1231400.74..1231401.09 rows=141 width=46) (actual time=103433.915..104181.793 rows=3249106 loops=1)
Q9,23043.3,->  Nested Loop  (cost=66974.87..1231391.50 rows=141 width=24) (actual time=1356.663..93397.204 rows=3249106 loops=1)
Q9,23043.3,->  Nested Loop  (cost=66974.43..1231323.17 rows=141 width=24) (actual time=1356.644..60151.355 rows=3249106 loops=1)
Q9,23043.3,->  Nested Loop  (cost=66974.14..1231277.67 rows=141 width=28) (actual time=1356.635..48617.112 rows=3249106 loops=1)
Q9,23043.3,->  Hash Join  (cost=66976.43..1231395.71 rows=141 width=46) (actual time=1356.729..96815.290 rows=3249106 loops=1)
Q2,4692.0,->  Merge Join  (cost=465687.75..887358.16 rows=1 width=190) (actual time=7912.110..10112.258 rows=4692 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2845826.20..2845826.21 rows=1 width=26) (actual time=45440.908..45442.011 rows=3933 loops=1)
Q15,3762.0,->  Subquery Scan on revenue13  (cost=2036739.21..2036823.86 rows=3762 width=12) (actual time=50923.982..50935.089 rows=1 loops=1)
Q15,3762.0,->  Sort  (cost=2037047.27..2037056.67 rows=3762 width=12) (actual time=50935.111..50935.112 rows=1 loops=1)
Q15,3762.0,Merge Join  (cost=4056675.20..4061772.83 rows=3762 width=79) (actual time=50963.897..50963.900 rows=1 loops=1)
Q15,3762.0,->  HashAggregate  (cost=2036739.21..2036786.24 rows=3762 width=12) (actual time=50923.981..50935.086 rows=1 loops=1)
Q7,768.0,Sort  (cost=2116853.57..2116861.25 rows=3072 width=64) (actual time=24823.280..24823.280 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2116629.54..2116675.62 rows=3072 width=64) (actual time=24823.218..24823.225 rows=4 loops=1)
Q8,365.0,Sort  (cost=1715687.64..1715689.46 rows=730 width=38) (actual time=12662.628..12662.628 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1715640.14..1715652.92 rows=730 width=38) (actual time=12662.581..12662.583 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=45443.201..45443.207 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=45443.202..45443.219 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887358.17..887358.18 rows=1 width=190) (actual time=10117.335..10117.346 rows=100 loops=1)
Q2,100.0,Limit  (cost=887358.17..887358.18 rows=1 width=190) (actual time=10117.337..10117.363 rows=100 loops=1)
Q11,34.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8988.245..8989.319 rows=9363 loops=1)
Q11,34.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8898.369..8983.027 rows=9363 loops=1)
Q3,27.8,->  HashAggregate  (cost=2442670.06..2474255.39 rows=3158533 width=20) (actual time=62761.742..62859.579 rows=113496 loops=1)
Q15,26.5,->  HashAggregate  (cost=2019542.99..2019580.61 rows=3762 width=12) (actual time=28020.970..28054.566 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=720842)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7859.57 rows=771157 width=0) (actual time=148.647..148.647 rows=10782720 loops=1)
Q3,10.5,->  Hash Join  (cost=764370.41..2395292.06 rows=3158533 width=20) (actual time=20946.723..62399.051 rows=299799 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2430.46 rows=322460 width=0) (actual time=34.883..34.883 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.018..0.095 rows=8 loops=433088)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.595..3.595 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.604..3.604 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2022259.37..2022259.44 rows=25 width=34) (actual time=15154.362..15154.362 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2022258.54..2022258.79 rows=25 width=34) (actual time=15154.318..15154.318 rows=5 loops=1)
Q4,5.0,Sort  (cost=1493174.60..1493174.61 rows=1 width=16) (actual time=22095.064..22095.065 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.14 rows=5 width=4) (actual time=0.017..0.017 rows=1 loops=560109)
Q4,5.0,->  HashAggregate  (cost=1493174.58..1493174.59 rows=1 width=16) (actual time=22095.010..22095.011 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=694389)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5674.85 rows=563485 width=0) (actual time=27.431..27.431 rows=2548480 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5778.38 rows=573838 width=0) (actual time=27.582..27.582 rows=2561280 loops=1)
Q13,4.3,Sort  (cost=854635.93..854636.43 rows=200 width=8) (actual time=30024.668..30024.671 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854626.29..854628.29 rows=200 width=8) (actual time=30024.597..30024.606 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1199258)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=457119)
Q17,3.5,->  Nested Loop  (cost=78.17..111148.35 rows=19524 width=4) (actual time=1.701..296.966 rows=5570 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5922.40..1492397.40 rows=155437 width=16) (actual time=27.824..21752.344 rows=513769 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.039..0.065 rows=3 loops=2048)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245100.92 rows=32660389 width=0) (actual time=205.144..205.144 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.670..0.768 rows=3 loops=21730)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54593.32 rows=7273775 width=0) (actual time=73.991..73.991 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=695223.29..695223.30 rows=3 width=20) (actual time=9760.677..9760.678 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642354.09..642354.14 rows=3 width=20) (actual time=9760.637..9760.639 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.045..0.067 rows=2 loops=6365)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.210..4.210 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3041056.31..3041056.31 rows=1 width=27) (actual time=36167.463..36167.463 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041056.29..3041056.30 rows=1 width=27) (actual time=36167.417..36167.418 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345128.12..2248252.11 rows=553361 width=175) (actual time=11198.363..41353.734 rows=1110519 loops=1)
Q10,2.0,->  Hash Join  (cost=345126.56..2240641.83 rows=553361 width=153) (actual time=11198.334..40919.827 rows=1110519 loops=1)
Q10,2.0,->  Hash Join  (cost=276098.56..2163313.42 rows=553361 width=12) (actual time=9415.471..38191.471 rows=1110519 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.48..11668629.61 rows=29587 width=4) (actual time=16.446..17505.879 rows=59125 loops=1)
Q20,1.9,->  Hash  (cost=11668629.61..11668629.61 rows=29587 width=4) (actual time=17545.214..17545.214 rows=59125 loops=1)
Q16,1.9,->  Sort  (cost=404122.51..405616.77 rows=597704 width=40) (actual time=9271.956..9436.115 rows=1190963 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.440..2746.351 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54840.55..346775.59 rows=597704 width=40) (actual time=1322.262..5655.315 rows=1190963 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.25 rows=20015207 width=8) (actual time=26.172..21576.278 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323953.49 rows=390603 width=38) (actual time=83.002..37398.556 rows=720842 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902511.67 rows=800608 width=34) (actual time=82.761..29284.508 rows=1492137 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.033..0.393 rows=56 loops=1)
Q1,1.5,Sort  (cost=4194611.62..4194611.64 rows=6 width=20) (actual time=94470.789..94470.789 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4194611.44..4194611.54 rows=6 width=20) (actual time=94470.741..94470.744 rows=4 loops=1)
Q20,1.4,Sort  (cost=11671443.24..11671446.20 rows=1183 width=51) (actual time=17601.570..17601.673 rows=1746 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669042.45..11671382.86 rows=1183 width=51) (actual time=17545.666..17600.042 rows=1746 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2262086.13..2267619.74 rows=553361 width=175) (actual time=43538.213..43773.062 rows=372167 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.36 rows=139638 width=0) (actual time=490.878..490.878 rows=190544 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.27..41849.77 rows=139638 width=24) (actual time=512.291..1033.529 rows=190544 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..21.692 rows=71902 loops=1)
Q9,1.2,GroupAggregate  (cost=1231400.74..1231405.68 rows=141 width=46) (actual time=103444.029..106506.668 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92421.60 rows=9227360 width=0) (actual time=119.645..119.645 rows=10760960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116126 width=4) (actual time=0.013..1312.955 rows=108272 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.57..352576.61 rows=464504 width=16) (actual time=1356.583..6469.088 rows=433088 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116126 width=4) (actual time=1356.052..1356.052 rows=108272 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.692..1955.733 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.52..1667836.87 rows=121380 width=20) (actual time=6.990..10274.465 rows=122329 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.08..1471856.68 rows=400232 width=16) (actual time=6.947..5384.593 rows=402244 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.96..1714697.88 rows=24276 width=16) (actual time=2061.184..12578.004 rows=24377 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.30 rows=31 width=20) (actual time=0.031..0.379 rows=30 loops=13402)
Q8,1.0,->  Hash Join  (cost=38739.52..1715154.62 rows=24276 width=38) (actual time=2061.225..12619.891 rows=24377 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.67..1706864.95 rows=24276 width=16) (actual time=2061.174..12414.612 rows=24377 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2051.286..2051.286 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..403.23 rows=13173 width=0) (actual time=4.647..4.647 rows=13402 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.52..27921.42 rows=13173 width=4) (actual time=6.895..169.217 rows=13402 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.630..381.693 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404074.68 rows=15029968 width=8) (actual time=0.006..3529.422 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2103852.43 rows=1462511 width=42) (actual time=877.449..23865.929 rows=1462553 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2115716.58 rows=60864 width=64) (actual time=962.262..24719.530 rows=59126 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531065.43 rows=1202397 width=30) (actual time=877.406..10774.527 rows=1199258 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..832.140 rows=119889 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..81.175 rows=8036 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=876.913..876.913 rows=119889 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=83.384..83.384 rows=8036 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92612.48..1376272.08 rows=763530 width=8) (actual time=120.503..32807.771 rows=760319 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..484005.91 rows=2313071 width=8) (actual time=0.012..4352.293 rows=2277983 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.714..2126.298 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..2002224.47 rows=1850012 width=46) (actual time=2255.433..14123.216 rows=1827097 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2021518.55 rows=73999 width=34) (actual time=2334.952..15076.514 rows=73081 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..535647.69 rows=462614 width=38) (actual time=2255.409..7768.797 rows=457119 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2252.834..2252.834 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.637..415.303 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5921.84..270583.41 rows=573838 width=20) (actual time=27.767..11537.468 rows=560109 loops=1)
Q3,1.0,->  Hash Join  (cost=106140.66..492917.23 rows=1454973 width=12) (actual time=613.734..20079.267 rows=1448971 loops=1)
Q3,1.0,->  Hash  (cost=492917.23..492917.23 rows=1454973 width=12) (actual time=20729.287..20729.287 rows=1448971 loops=1)
Q3,1.0,->  Hash  (cost=45978.34..45978.34 rows=300045 width=4) (actual time=536.850..536.850 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.76 rows=300045 width=0) (actual time=80.619..80.619 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56411.76..401361.95 rows=7273775 width=16) (actual time=74.148..16479.216 rows=7246854 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253266.01..1730125.88 rows=32660389 width=12) (actual time=206.022..34821.032 rows=32565824 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.78..45978.34 rows=300045 width=4) (actual time=91.215..440.222 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.012..3746.352 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=8458.051..8458.051 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598401.07..641911.28 rows=59041 width=20) (actual time=9048.887..9733.925 rows=63278 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.00 rows=380935 width=0) (actual time=90.759..90.759 rows=381768 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.24..51916.78 rows=380935 width=4) (actual time=100.703..352.053 rows=381768 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.319..54.899 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=56.513..56.513 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.299..53.932 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=7911.673..8075.654 rows=1603947 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.309..137.299 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7963 width=30) (actual time=0.188..1216.982 rows=7981 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=148.771..6567.998 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=148.624..148.624 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..26.581 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.293..52.892 rows=3945 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=12.052..12.052 rows=21730 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..52.307 rows=3945 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=15.724..784.998 rows=21730 loops=1)
Q19,1.0,->  Nested Loop  (cost=12844.06..612613.79 rows=1148 width=8) (actual time=33.912..1678.530 rows=1113 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.267..4.267 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8029 width=0) (actual time=3.677..3.677 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.47 rows=7977 width=0) (actual time=3.630..3.630 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.11 rows=7941 width=0) (actual time=3.459..3.459 rows=8175 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12843.49..26534.43 rows=4755 width=30) (actual time=33.538..271.233 rows=4837 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=16) (actual time=0.007..2536.946 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1688567.79 rows=60825079 width=8) (actual time=0.005..10506.144 rows=59984976 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688567.79 rows=60825079 width=8) (actual time=0.012..8762.656 rows=59984976 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.037..0.051 rows=30 loops=2048)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.037..0.051 rows=30 loops=2048)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..67.92 rows=1949 width=0) (actual time=0.921..0.921 rows=2048 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.40..6475.48 rows=1949 width=4) (actual time=1.243..18.731 rows=2048 loops=1)
Q16,1.0,Sort  (cost=413943.69..414013.74 rows=28018 width=40) (actual time=10116.346..10119.609 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51088.67..51088.67 rows=298852 width=40) (actual time=1319.434..1319.434 rows=297908 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404122.51..411873.99 rows=28018 width=40) (actual time=9272.010..10055.943 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2505.17..51088.67 rows=298852 width=40) (actual time=34.950..1187.446 rows=297908 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1996614.69 rows=2292830 width=12) (actual time=0.027..25568.317 rows=2247339 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1996614.69 rows=2292830 width=12) (actual time=0.056..20560.029 rows=2247339 loops=1)
Q14,1.0,->  Hash Join  (cost=93574.36..1151933.25 rows=771157 width=29) (actual time=1943.132..31842.545 rows=774230 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8052.36..1054843.89 rows=771157 width=12) (actual time=149.587..29111.449 rows=774230 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=15058080 width=8) (actual time=0.019..7488.846 rows=14853638 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..741835.89 rows=15058080 width=8) (actual time=816.290..18708.109 rows=15353656 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.012..4144.435 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431964.00 rows=291076 width=15) (actual time=0.016..26266.873 rows=311445 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035962.46 rows=291076 width=27) (actual time=9123.061..35751.172 rows=311445 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=9032.736..9032.736 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.308..36.210 rows=3995 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..25.209 rows=3995 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.192..4196.302 rows=319600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.302..4353.679 rows=319600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.185..37.185 rows=3995 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.097..26.097 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.278..24.554 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.291..35.475 rows=3995 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822480.04 rows=59303285 width=20) (actual time=0.011..20809.193 rows=59144147 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1826110.80 rows=14818785 width=12) (actual time=0.011..24803.329 rows=14823276 loops=1)
Q10,1.0,->  Hash  (cost=269055.00..269055.00 rows=563485 width=8) (actual time=9410.243..9410.243 rows=554771 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5815.72..269055.00 rows=563485 width=8) (actual time=27.598..9119.349 rows=554771 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=402244)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1492137)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.25 rows=1 width=16) (actual time=0.256..0.289 rows=0 loops=4837)
Q19,,->  BitmapOr  (cost=12843.49..12843.49 rows=4758 width=0) (actual time=29.664..29.664 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.41..6270.41 rows=2369 width=0) (actual time=8.448..8.448 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.49..4280.49 rows=1596 width=0) (actual time=8.873..8.873 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.10..2292.10 rows=793 width=0) (actual time=8.644..8.644 rows=0 loops=1)

Q21,708250.0,->  Nested Loop Semi Join  (cost=2406.31..2857261.59 rows=1 width=34) (actual time=37.973..39633.912 rows=708250 loops=1)
Q18,402301.7,->  GroupAggregate  (cost=10205392.16..11035139.54 rows=30172632 width=39) (actual time=82054.190..82054.436 rows=75 loops=1)
Q3,314895.2,->  Sort  (cost=2543210.76..2551083.14 rows=3148952 width=20) (actual time=62947.609..62947.612 rows=10 loops=1)
Q18,100599.3,->  Hash Join  (cost=2189774.02..2806299.21 rows=7544952 width=39) (actual time=52274.916..60824.052 rows=75 loops=1)
Q18,100599.3,->  Hash Join  (cost=2120746.02..2624096.93 rows=7544952 width=20) (actual time=51226.959..59775.791 rows=75 loops=1)
Q18,100599.3,->  Hash  (cost=2806299.21..2806299.21 rows=7544952 width=39) (actual time=60824.237..60824.237 rows=75 loops=1)
Q18,57471.6,->  Sort  (cost=10205392.16..10280823.74 rows=30172632 width=39) (actual time=82054.178..82054.209 rows=525 loops=1)
Q18,57471.6,->  Hash Join  (cost=2900611.10..5631900.87 rows=30172632 width=39) (actual time=61357.906..82053.429 rows=525 loops=1)
Q18,54770.3,->  Hash  (cost=2069398.85..2069398.85 rows=4107773 width=4) (actual time=50962.073..50962.073 rows=75 loops=1)
Q18,54770.3,->  HashAggregate  (cost=1976973.96..2028321.12 rows=4107773 width=8) (actual time=43958.378..50961.904 rows=75 loops=1)
Q21,39482.0,->  Nested Loop Anti Join  (cost=2406.88..2857263.38 rows=1 width=26) (actual time=38.076..42640.171 rows=39482 loops=1)
Q9,29594.6,->  Sort  (cost=1033938.17..1033938.44 rows=110 width=46) (actual time=109216.544..109886.338 rows=3255408 loops=1)
Q9,29594.6,->  Nested Loop  (cost=66649.38..1033930.81 rows=110 width=24) (actual time=1078.466..99230.841 rows=3255408 loops=1)
Q9,29594.6,->  Nested Loop  (cost=66648.94..1033877.50 rows=110 width=24) (actual time=1078.448..63864.553 rows=3255408 loops=1)
Q9,29594.6,->  Nested Loop  (cost=66648.65..1033842.01 rows=110 width=28) (actual time=1078.438..51635.416 rows=3255408 loops=1)
Q9,29594.6,->  Hash Join  (cost=66650.94..1033934.44 rows=110 width=46) (actual time=1078.551..102815.339 rows=3255408 loops=1)
Q10,28237.0,->  Sort  (cost=2288154.18..2289566.03 rows=564740 width=175) (actual time=35825.253..35825.254 rows=20 loops=1)
Q2,4730.0,->  Merge Join  (cost=465687.75..886625.36 rows=1 width=190) (actual time=6703.540..8670.399 rows=4730 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2857263.38..2857263.39 rows=1 width=26) (actual time=42693.653..42694.982 rows=4009 loops=1)
Q15,3762.0,->  Subquery Scan on revenue9  (cost=2020692.81..2020777.46 rows=3762 width=12) (actual time=42214.221..42234.431 rows=1 loops=1)
Q15,3762.0,->  Sort  (cost=2021000.87..2021010.27 rows=3762 width=12) (actual time=42234.448..42234.449 rows=1 loops=1)
Q15,3762.0,Merge Join  (cost=4024717.88..4029815.51 rows=3762 width=79) (actual time=42242.860..42242.863 rows=1 loops=1)
Q15,3762.0,->  HashAggregate  (cost=2020692.81..2020739.83 rows=3762 width=12) (actual time=42214.221..42234.429 rows=1 loops=1)
Q7,768.0,Sort  (cost=2137786.28..2137793.96 rows=3072 width=64) (actual time=23101.916..23101.917 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2137562.26..2137608.34 rows=3072 width=64) (actual time=23101.851..23101.854 rows=4 loops=1)
Q8,365.0,Sort  (cost=1795128.37..1795130.19 rows=730 width=38) (actual time=18113.400..18113.400 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1795080.87..1795093.65 rows=730 width=38) (actual time=18113.358..18113.358 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2857263.40..2857263.41 rows=1 width=26) (actual time=42696.153..42696.211 rows=100 loops=1)
Q21,100.0,Limit  (cost=2857263.40..2857263.41 rows=1 width=26) (actual time=42696.155..42696.225 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886625.37..886625.37 rows=1 width=190) (actual time=8675.370..8675.389 rows=100 loops=1)
Q2,100.0,Limit  (cost=886625.37..886625.37 rows=1 width=190) (actual time=8675.371..8675.394 rows=100 loops=1)
Q11,31.5,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8913.950..8915.143 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8818.059..8908.305 rows=10130 loops=1)
Q3,27.6,->  HashAggregate  (cost=2443673.52..2475163.04 rows=3148952 width=20) (actual time=62873.274..62926.517 rows=113874 loops=1)
Q15,26.5,->  HashAggregate  (cost=2003632.06..2003669.69 rows=3762 width=12) (actual time=20727.164..20759.068 rows=100000 loops=1)
Q14,15.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7195.23 rows=704723 width=0) (actual time=121.067..121.067 rows=10824960 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=735201)
Q3,10.4,->  Hash Join  (cost=764180.33..2396439.24 rows=3148952 width=20) (actual time=21088.985..62553.240 rows=300515 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2413.51 rows=320200 width=0) (actual time=61.402..61.402 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.019..0.102 rows=8 loops=433464)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.648..3.648 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.648..3.648 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.276..0.276 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.278..0.278 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2028416.68..2028416.75 rows=25 width=34) (actual time=20485.367..20485.368 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2028415.85..2028416.10 rows=25 width=34) (actual time=20485.326..20485.326 rows=5 loops=1)
Q4,5.0,Sort  (cost=1498673.84..1498673.85 rows=1 width=16) (actual time=13181.089..13181.089 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.06 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=574292)
Q4,5.0,->  HashAggregate  (cost=1498673.82..1498673.83 rows=1 width=16) (actual time=13181.046..13181.047 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=708250)
Q15,4.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..6.358 rows=20959 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5849.27 rows=580927 width=0) (actual time=39.646..39.646 rows=2556160 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5790.81 rows=575081 width=0) (actual time=27.430..27.430 rows=2553600 loops=1)
Q13,4.3,Sort  (cost=846390.70..846391.20 rows=200 width=8) (actual time=31520.052..31520.055 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=846381.06..846383.06 rows=200 width=8) (actual time=31519.982..31519.992 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1200924)
Q17,3.9,->  Nested Loop  (cost=82.51..113007.78 rows=19875 width=4) (actual time=1.772..249.768 rows=4998 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.019..0.020 rows=4 loops=455571)
Q4,3.3,->  Nested Loop Semi Join  (cost=5995.07..1497885.48 rows=157669 width=16) (actual time=39.854..12899.255 rows=526675 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.018..0.043 rows=3 loops=1851)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245762.33 rows=32748578 width=0) (actual time=131.279..131.279 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.10 rows=1 width=8) (actual time=0.388..0.464 rows=3 loops=21998)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54387.32 rows=7246309 width=0) (actual time=51.250..51.250 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=696745.60..696745.61 rows=3 width=20) (actual time=10503.603..10503.604 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643676.07..643676.11 rows=3 width=20) (actual time=10503.557..10503.560 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.055 rows=2 loops=6416)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.220..4.220 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3056215.40..3056215.41 rows=1 width=27) (actual time=38438.380..38438.380 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056215.38..3056215.39 rows=1 width=27) (actual time=38438.327..38438.327 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403682.15..405168.74 rows=594634 width=40) (actual time=10992.237..11193.544 rows=1186740 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.409..3942.830 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54747.53..346651.87 rows=594634 width=40) (actual time=1381.591..7002.743 rows=1186740 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1824308.20 rows=20095232 width=8) (actual time=0.014..19770.147 rows=37966982 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2333261.58 rows=392165 width=38) (actual time=37.918..35048.778 rows=735201 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1910108.72 rows=803809 width=34) (actual time=37.885..27025.100 rows=1523831 loops=1)
Q20,1.8,->  Nested Loop  (cost=826.98..12723184.79 rows=32276 width=4) (actual time=14.343..10538.544 rows=59715 loops=1)
Q20,1.8,->  Hash  (cost=12723184.79..12723184.79 rows=32276 width=4) (actual time=10582.563..10582.563 rows=59715 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.373 rows=56 loops=1)
Q10,1.6,->  Hash Join  (cost=346073.87..2253360.75 rows=564740 width=175) (actual time=8887.071..33697.550 rows=940668 loops=1)
Q10,1.6,->  Hash Join  (cost=346072.31..2245594.01 rows=564740 width=153) (actual time=8887.042..33340.136 rows=940668 loops=1)
Q10,1.6,->  Hash Join  (cost=277044.31..2168094.91 rows=564740 width=12) (actual time=7562.262..31311.461 rows=940668 loops=1)
Q9,1.5,GroupAggregate  (cost=1033938.17..1033942.02 rows=110 width=46) (actual time=109226.562..112061.472 rows=175 loops=1)
Q1,1.5,Sort  (cost=4240627.30..4240627.32 rows=6 width=20) (actual time=94577.471..94577.471 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4240627.12..4240627.22 rows=6 width=20) (actual time=94577.423..94577.426 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2267479.25..2273126.65 rows=564740 width=175) (actual time=35472.695..35693.331 rows=354576 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=39.726..39.726 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2915.11 rows=141208 width=0) (actual time=1163.659..1163.659 rows=190987 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2950.42..41935.13 rows=141208 width=24) (actual time=1174.790..1455.562 rows=190987 loops=1)
Q20,1.3,Sort  (cost=12726039.96..12726043.19 rows=1291 width=51) (actual time=10621.538..10621.644 rows=1791 loops=1)
Q20,1.3,->  Hash Semi Join  (cost=12723631.24..12725973.25 rows=1291 width=51) (actual time=10583.030..10620.034 rows=1791 loops=1)
Q18,1.3,Limit  (cost=10205392.16..10205394.91 rows=100 width=39) (actual time=82054.191..82054.444 rows=75 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=90087 width=4) (actual time=0.013..1029.373 rows=108366 loops=1)
Q9,1.2,->  Hash Join  (cost=66648.09..351209.57 rows=360348 width=16) (actual time=1078.277..6272.502 rows=433464 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=90087 width=4) (actual time=1077.651..1077.651 rows=108366 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91093.32 rows=9094532 width=0) (actual time=135.381..135.381 rows=10696960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.977..2799.991 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=433.56..1746835.50 rows=127044 width=20) (actual time=6.902..14822.808 rows=122581 loops=1)
Q8,1.0,->  Nested Loop  (cost=433.13..1541723.87 rows=418908 width=16) (actual time=6.746..8224.433 rows=402157 loops=1)
Q8,1.0,->  Nested Loop  (cost=38764.00..1794094.71 rows=25409 width=16) (actual time=2911.489..18001.263 rows=24676 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.12 rows=31 width=20) (actual time=0.039..0.597 rows=30 loops=13423)
Q8,1.0,->  Hash Join  (cost=38765.57..1794572.69 rows=25409 width=38) (actual time=2911.542..18066.408 rows=24676 loops=1)
Q8,1.0,->  Hash Join  (cost=38763.71..1785896.15 rows=25409 width=16) (actual time=2911.479..17821.042 rows=24676 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2901.144..2901.144 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..429.07 rows=13953 width=0) (actual time=4.349..4.349 rows=13423 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=432.56..28866.99 rows=13953 width=4) (actual time=6.678..55.725 rows=13423 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.684..550.139 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=8) (actual time=0.006..2923.162 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2124695.00 rows=1477092 width=42) (actual time=615.357..22289.806 rows=1463429 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2136640.19 rows=61471 width=64) (actual time=658.739..23005.314 rows=58989 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535779.34 rows=1214394 width=30) (actual time=615.269..9302.705 rows=1200924 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..574.814 rows=120056 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..40.884 rows=8086 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=614.669..614.669 rows=120056 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=43.327..43.327 rows=8086 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91283.18..1365574.15 rows=759452 width=8) (actual time=136.261..37337.278 rows=763812 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..485918.84 rows=2312452 width=8) (actual time=0.014..5784.825 rows=2277044 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.794..2250.942 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..2008385.96 rows=1849509 width=46) (actual time=2370.746..19438.002 rows=1821538 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2027676.06 rows=73979 width=34) (actual time=2429.483..20391.708 rows=73064 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..537557.07 rows=462490 width=38) (actual time=2370.726..9390.089 rows=455571 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2368.168..2368.168 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.682..439.683 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5994.50..270256.41 rows=580927 width=20) (actual time=39.823..6063.600 rows=574292 loops=1)
Q3,1.0,->  Hash Join  (cost=105900.64..492147.69 rows=1446653 width=12) (actual time=805.835..20267.084 rows=1444122 loops=1)
Q3,1.0,->  Hash  (cost=492147.69..492147.69 rows=1446653 width=12) (actual time=20944.876..20944.876 rows=1444122 loops=1)
Q3,1.0,->  Hash  (cost=45958.49..45958.49 rows=299460 width=4) (actual time=751.578..751.578 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6862.38 rows=299460 width=0) (actual time=74.373..74.373 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56198.90..400805.76 rows=7246309 width=16) (actual time=51.411..16433.556 rows=7221675 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253949.48..1731911.70 rows=32748578 width=12) (actual time=132.374..34994.205 rows=32665961 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6937.24..45958.49 rows=299460 width=4) (actual time=83.983..658.267 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=4) (actual time=0.016..3915.830 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=4) (actual time=8813.220..8813.220 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599625.49..643228.29 rows=59704 width=20) (actual time=10068.011..10479.779 rows=63301 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6620.13 rows=385218 width=0) (actual time=103.182..103.182 rows=382124 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6716.44..52106.41 rows=385218 width=4) (actual time=112.208..1001.473 rows=382124 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.331..36.649 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=37.828..37.828 rows=4010 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.316..35.935 rows=4010 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6692.800..6812.828 rows=1586852 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.350..165.894 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7944 width=30) (actual time=9.864..1182.729 rows=8084 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=177.889..5525.734 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=177.727..177.727 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.262..32.323 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.314..34.907 rows=3987 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..820.54 rows=21999 width=0) (actual time=9.792..9.792 rows=21998 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.294..34.321 rows=3987 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=826.55..36393.37 rows=24023 width=4) (actual time=13.632..302.831 rows=21998 loops=1)
Q19,1.0,->  Nested Loop  (cost=12826.73..608608.11 rows=1128 width=8) (actual time=69.484..2230.125 rows=1142 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.170..4.170 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.83 rows=8011 width=0) (actual time=3.611..3.611 rows=7865 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.07 rows=7935 width=0) (actual time=3.473..3.473 rows=8038 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.39 rows=7869 width=0) (actual time=3.577..3.577 rows=7853 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12826.17..26448.23 rows=4724 width=30) (actual time=68.798..408.912 rows=4699 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.007..4645.973 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675247.64 rows=60345264 width=8) (actual time=0.006..10113.453 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675247.64 rows=60345264 width=8) (actual time=0.013..9555.867 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.029..0.054 rows=30 loops=1851)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.029..0.054 rows=30 loops=1851)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.25 rows=1982 width=0) (actual time=0.981..0.981 rows=1851 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.74..6573.95 rows=1982 width=4) (actual time=1.300..47.547 rows=1851 loops=1)
Q16,1.0,Sort  (cost=413451.84..413521.53 rows=27874 width=40) (actual time=11878.840..11883.579 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51014.84..51014.84 rows=297317 width=40) (actual time=1378.741..1378.741 rows=296850 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403682.15..411393.82 rows=27874 width=40) (actual time=10992.294..11817.301 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2487.84..51014.84 rows=297317 width=40) (actual time=61.474..1254.804 rows=296850 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1980884.40 rows=2274766 width=12) (actual time=0.024..18485.680 rows=2244075 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1980884.40 rows=2274766 width=12) (actual time=0.027..19336.019 rows=2244075 loops=1)
Q14,1.0,->  Hash Join  (cost=92893.41..1122858.11 rows=704723 width=29) (actual time=1736.418..33151.212 rows=698906 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7371.41..1026765.27 rows=704723 width=12) (actual time=121.823..30674.411 rows=698906 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14910173 width=8) (actual time=0.018..7259.355 rows=14853644 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734330.19 rows=14910173 width=8) (actual time=1004.018..19103.060 rows=15353662 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.013..6543.065 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444050.68 rows=293525 width=15) (actual time=0.063..25283.797 rows=310632 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051078.70 rows=293525 width=27) (actual time=12433.999..38093.390 rows=310632 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=12352.523..12352.523 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..36.311 rows=3934 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.296..25.313 rows=3934 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.257..3985.510 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=37.383..4452.610 rows=314720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.309..37.309 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.191..26.191 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.273..24.679 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.282..35.683 rows=3934 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1833350.20 rows=60181923 width=20) (actual time=0.013..20137.282 rows=59654108 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1829722.84 rows=14848097 width=12) (actual time=0.017..20063.440 rows=14808293 loops=1)
Q10,1.0,->  Hash  (cost=269855.80..269855.80 rows=575081 width=8) (actual time=7557.194..7557.194 rows=561470 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5934.58..269855.80 rows=575081 width=8) (actual time=27.594..7305.530 rows=561470 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=402157)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1523831)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.22 rows=1 width=16) (actual time=0.350..0.386 rows=0 loops=4699)
Q19,,->  BitmapOr  (cost=12826.17..12826.17 rows=4728 width=0) (actual time=64.848..64.848 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.35..6270.35 rows=2367 width=0) (actual time=44.079..44.079 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4262.87..4262.87 rows=1564 width=0) (actual time=8.509..8.509 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2292.44..2292.44 rows=796 width=0) (actual time=8.582..8.582 rows=0 loops=1)

Q21,709196.0,->  Nested Loop Semi Join  (cost=2406.31..2871498.95 rows=1 width=34) (actual time=54.594..38368.854 rows=709196 loops=1)
Q3,318509.9,->  Sort  (cost=2565634.46..2573597.21 rows=3185099 width=20) (actual time=40693.995..40693.999 rows=10 loops=1)
Q18,304138.8,->  GroupAggregate  (cost=10183598.59..11011616.49 rows=30109742 width=39) (actual time=82507.555..82507.881 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2185653.31..2800464.27 rows=7522476 width=39) (actual time=53743.857..60204.635 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2116625.31..2618599.13 rows=7522476 width=20) (actual time=52329.233..58789.668 rows=99 loops=1)
Q18,75984.6,->  Hash  (cost=2800464.27..2800464.27 rows=7522476 width=39) (actual time=60204.866..60204.866 rows=99 loops=1)
Q18,43448.4,->  Sort  (cost=10183598.59..10258872.94 rows=30109742 width=39) (actual time=82507.545..82507.581 rows=693 loops=1)
Q18,43448.4,->  Hash Join  (cost=2894495.23..5620092.04 rows=30109742 width=39) (actual time=60728.688..82506.537 rows=693 loops=1)
Q18,41492.6,->  Hash  (cost=2065278.15..2065278.15 rows=4107773 width=4) (actual time=52161.761..52161.761 rows=99 loops=1)
Q18,41492.6,->  HashAggregate  (cost=1972853.26..2024200.42 rows=4107773 width=8) (actual time=45279.883..52161.503 rows=99 loops=1)
Q21,40097.0,->  Nested Loop Anti Join  (cost=2406.88..2871500.74 rows=1 width=26) (actual time=54.971..41246.846 rows=40097 loops=1)
Q10,28546.9,->  Sort  (cost=2295394.84..2296822.18 rows=570938 width=175) (actual time=35198.235..35198.239 rows=20 loops=1)
Q9,19823.5,->  Sort  (cost=1369744.18..1369744.59 rows=164 width=46) (actual time=116156.697..116833.133 rows=3251058 loops=1)
Q9,19823.5,->  Nested Loop  (cost=67199.92..1369733.51 rows=164 width=24) (actual time=1118.011..105200.718 rows=3251058 loops=1)
Q9,19823.5,->  Nested Loop  (cost=67199.48..1369654.02 rows=164 width=24) (actual time=1117.991..64831.997 rows=3251058 loops=1)
Q9,19823.5,->  Nested Loop  (cost=67199.19..1369601.11 rows=164 width=28) (actual time=1117.982..52718.391 rows=3251058 loops=1)
Q9,19823.5,->  Hash Join  (cost=67201.48..1369738.15 rows=164 width=46) (actual time=1118.067..109130.118 rows=3251058 loops=1)
Q2,4618.0,->  Merge Join  (cost=465687.75..889898.55 rows=1 width=190) (actual time=9463.267..13980.276 rows=4618 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2871500.74..2871500.75 rows=1 width=26) (actual time=41304.425..41305.517 rows=4009 loops=1)
Q15,3749.0,->  Subquery Scan on revenue10  (cost=1605102.69..1605187.05 rows=3749 width=12) (actual time=73554.314..73562.038 rows=1 loops=1)
Q15,3749.0,->  Sort  (cost=1605409.59..1605418.97 rows=3749 width=12) (actual time=73562.061..73562.062 rows=1 loops=1)
Q15,3749.0,Merge Join  (cost=3193696.05..3198793.49 rows=3749 width=79) (actual time=73589.514..73589.517 rows=1 loops=1)
Q15,3749.0,->  HashAggregate  (cost=1605102.69..1605149.56 rows=3749 width=12) (actual time=73554.313..73562.036 rows=1 loops=1)
Q7,768.0,Sort  (cost=2129410.41..2129418.09 rows=3072 width=64) (actual time=25461.674..25461.675 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2129186.38..2129232.46 rows=3072 width=64) (actual time=25461.604..25461.614 rows=4 loops=1)
Q8,365.0,Sort  (cost=1713734.70..1713736.53 rows=730 width=38) (actual time=12252.574..12252.575 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1713687.21..1713699.98 rows=730 width=38) (actual time=12252.532..12252.533 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2871500.76..2871500.77 rows=1 width=26) (actual time=41306.685..41306.692 rows=100 loops=1)
Q21,100.0,Limit  (cost=2871500.76..2871500.77 rows=1 width=26) (actual time=41306.686..41306.706 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889898.56..889898.56 rows=1 width=190) (actual time=13986.450..13986.467 rows=100 loops=1)
Q2,100.0,Limit  (cost=889898.56..889898.56 rows=1 width=190) (actual time=13986.451..13986.475 rows=100 loops=1)
Q11,30.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=11215.041..11216.300 rows=10364 loops=1)
Q11,30.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=11119.418..11208.535 rows=10364 loops=1)
Q3,28.1,->  HashAggregate  (cost=2464954.62..2496805.61 rows=3185099 width=20) (actual time=40619.564..40672.618 rows=113105 loops=1)
Q15,26.6,->  HashAggregate  (cost=1588201.80..1588239.29 rows=3749 width=12) (actual time=37524.535..37559.209 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=736182)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7851.93 rows=770393 width=0) (actual time=155.461..155.461 rows=10771200 loops=1)
Q3,10.6,->  Hash Join  (cost=772351.06..2417178.14 rows=3185099 width=20) (actual time=9956.376..40348.593 rows=298388 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2441.81 rows=323973 width=0) (actual time=45.903..45.903 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.021..0.104 rows=8 loops=433248)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.609..3.609 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.281..0.281 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2030480.56..2030480.63 rows=25 width=34) (actual time=15050.068..15050.069 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2030479.73..2030479.98 rows=25 width=34) (actual time=15050.025..15050.026 rows=5 loops=1)
Q4,5.0,Sort  (cost=1497266.42..1497266.42 rows=1 width=16) (actual time=14738.961..14738.962 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.16 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=567642)
Q4,5.0,->  HashAggregate  (cost=1497266.40..1497266.41 rows=1 width=16) (actual time=14738.909..14738.911 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=709196)
Q13,4.5,Sort  (cost=850649.65..850650.15 rows=200 width=8) (actual time=34108.398..34108.401 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=850640.01..850642.01 rows=200 width=8) (actual time=34108.336..34108.344 rows=44 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5787.10 rows=574710 width=0) (actual time=52.888..52.888 rows=2576640 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5853.88 rows=581388 width=0) (actual time=27.518..27.518 rows=2561280 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.012 rows=1 loops=1202594)
Q17,3.8,->  Nested Loop  (cost=82.73..114245.60 rows=20135 width=4) (actual time=1.450..351.685 rows=5202 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.014 rows=4 loops=457447)
Q4,3.3,->  Nested Loop Semi Join  (cost=5931.35..1496492.62 rows=154755 width=16) (actual time=53.075..14378.268 rows=520468 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.037 rows=3 loops=1961)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245500.50 rows=32713667 width=0) (actual time=225.123..225.123 rows=10814720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.49 rows=1 width=8) (actual time=0.708..0.809 rows=3 loops=21569)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55833.21 rows=7439095 width=0) (actual time=27.622..27.622 rows=2571520 loops=1)
Q22,2.3,Sort  (cost=696030.00..696030.00 rows=3 width=20) (actual time=10816.186..10816.186 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643041.53..643041.57 rows=3 width=20) (actual time=10816.142..10816.145 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.98..10613277.84 rows=26897 width=4) (actual time=34.199..18105.949 rows=58458 loops=1)
Q20,2.1,->  Hash  (cost=10613277.84..10613277.84 rows=26897 width=4) (actual time=18144.723..18144.723 rows=58458 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.104..0.126 rows=2 loops=6306)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.196..4.196 rows=405760 loops=1)
Q15,2.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..165952.31 rows=22107241 width=0) (actual time=166.455..166.455 rows=10676480 loops=1)
Q15,2.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..165952.31 rows=22107241 width=0) (actual time=146.336..146.336 rows=10686720 loops=1)
Q12,2.0,Sort  (cost=3035107.25..3035107.26 rows=1 width=27) (actual time=36393.403..36393.404 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035107.23..3035107.24 rows=1 width=27) (actual time=36393.349..36393.349 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347070.96..2260219.55 rows=570938 width=175) (actual time=9155.914..32618.623 rows=1148455 loops=1)
Q10,2.0,->  Hash Join  (cost=347069.40..2252367.59 rows=570938 width=153) (actual time=9155.884..32204.742 rows=1148455 loops=1)
Q10,2.0,->  Hash Join  (cost=278041.40..2174775.52 rows=570938 width=12) (actual time=7305.337..29567.525 rows=1148455 loops=1)
Q16,1.9,->  Sort  (cost=404538.95..406040.89 rows=600776 width=40) (actual time=9986.820..10179.163 rows=1191401 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.406..3457.021 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54909.31..346875.07 rows=600776 width=40) (actual time=1023.369..6084.597 rows=1191401 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1833350.20 rows=20194832 width=8) (actual time=0.015..19158.678 rows=37965313 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2344848.08 rows=394109 width=38) (actual time=54.564..33880.518 rows=736182 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1919564.06 rows=807793 width=34) (actual time=54.523..26445.637 rows=1523260 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.360 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616050.06..10616052.75 rows=1076 width=51) (actual time=18192.842..18192.942 rows=1778 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613657.05..10615995.87 rows=1076 width=51) (actual time=18145.158..18191.343 rows=1778 loops=1)
Q1,1.5,Sort  (cost=4219282.66..4219282.68 rows=6 width=20) (actual time=93991.284..93991.285 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4219282.48..4219282.58 rows=6 width=20) (actual time=93991.234..93991.237 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.174..4.174 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2274493.00..2280202.38 rows=570938 width=175) (actual time=34770.183..34985.580 rows=381460 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.95 rows=140595 width=0) (actual time=801.487..801.487 rows=190849 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2944.10..41912.72 rows=140595 width=24) (actual time=810.507..1298.822 rows=190849 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..20.318 rows=71847 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=134130 width=4) (actual time=0.014..1054.015 rows=108312 loops=1)
Q9,1.2,->  Hash Join  (cost=67198.62..353521.83 rows=536520 width=16) (actual time=1117.953..6516.640 rows=433248 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=134130 width=4) (actual time=1116.647..1116.647 rows=108312 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..90822.01 rows=9067401 width=0) (actual time=118.219..118.219 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.54 rows=17999 width=0) (actual time=29.937..29.937 rows=21569 loops=1)
Q9,1.0,GroupAggregate  (cost=1369744.18..1369749.92 rows=164 width=46) (actual time=116166.927..118995.702 rows=175 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.791..2193.621 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.26..1665870.30 rows=121553 width=20) (actual time=7.292..9630.950 rows=122848 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.83..1469606.15 rows=400803 width=16) (actual time=7.252..3971.435 rows=403424 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.70..1712743.59 rows=24311 width=16) (actual time=2315.661..12168.674 rows=24593 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.41 rows=31 width=20) (actual time=0.024..0.274 rows=30 loops=13451)
Q8,1.0,->  Hash Join  (cost=38739.27..1713200.99 rows=24311 width=38) (actual time=2315.713..12210.746 rows=24593 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.41..1704899.38 rows=24311 width=16) (actual time=2315.642..12022.195 rows=24593 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2303.713..2303.713 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.98 rows=13140 width=0) (actual time=4.871..4.871 rows=13451 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.26..27880.21 rows=13140 width=4) (actual time=7.191..158.160 rows=13451 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.648..428.703 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.006..3142.715 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2116355.31 rows=1471240 width=42) (actual time=686.498..24615.733 rows=1462857 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2128267.98 rows=61227 width=64) (actual time=738.235..25365.249 rows=57815 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=686.317..9909.271 rows=1202594 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..645.778 rows=119981 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..49.097 rows=7922 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=685.795..685.795 rows=119981 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=51.455..51.455 rows=7922 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91009.59..1361499.11 rows=750294 width=8) (actual time=119.051..34439.487 rows=763489 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..486396.60 rows=2314725 width=8) (actual time=0.014..4166.984 rows=2279317 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.754..1997.054 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..2010434.68 rows=1851335 width=46) (actual time=2106.954..14257.806 rows=1829168 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2029739.21 rows=74052 width=34) (actual time=2165.372..14969.292 rows=72793 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..538047.91 rows=462945 width=38) (actual time=2106.920..7133.075 rows=457447 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2104.850..2104.850 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.637..389.674 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5930.78..272124.43 rows=574710 width=20) (actual time=53.051..5587.677 rows=567642 loops=1)
Q3,1.0,->  Hash Join  (cost=107368.22..500142.91 rows=1482339 width=12) (actual time=619.130..9143.309 rows=1461687 loops=1)
Q3,1.0,->  Hash  (cost=500142.91..500142.91 rows=1482339 width=12) (actual time=9719.859..9719.859 rows=1461687 loops=1)
Q3,1.0,->  Hash  (cost=45939.05..45939.05 rows=298895 width=4) (actual time=588.780..588.780 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6850.14 rows=298895 width=0) (actual time=125.596..125.596 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57692.98..407747.67 rows=7439095 width=16) (actual time=27.784..5804.820 rows=7328330 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253678.92..1743978.75 rows=32713667 width=12) (actual time=225.943..24248.024 rows=32239681 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6924.86..45939.05 rows=298895 width=4) (actual time=139.110..489.244 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.011..3903.193 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=9256.675..9256.675 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599029.04..642595.69 rows=59445 width=20) (actual time=10147.184..10788.688 rows=63900 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6587.58 rows=383545 width=0) (actual time=88.444..88.444 rows=381648 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6683.47..52029.53 rows=383545 width=4) (actual time=97.268..662.460 rows=381648 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.327..53.258 rows=4009 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=54.424..54.424 rows=4009 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.313..52.581 rows=4009 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=9462.998..9658.933 rows=1602632 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.508..144.136 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8027 width=30) (actual time=0.021..2979.800 rows=7869 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=155.555..8225.095 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.405..155.405 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.283..27.944 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.273..44.736 rows=4023 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.258..44.129 rows=4023 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.55..33178.44 rows=20019 width=4) (actual time=33.629..619.964 rows=21569 loops=1)
Q19,1.0,->  Nested Loop  (cost=12845.41..615056.42 rows=1152 width=8) (actual time=89.033..4739.297 rows=1208 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.47 rows=8075 width=0) (actual time=3.673..3.673 rows=8055 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.79 rows=8008 width=0) (actual time=18.347..18.347 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7992 width=0) (actual time=26.520..26.520 rows=7906 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12844.84..26581.67 rows=4776 width=30) (actual time=79.468..1132.504 rows=4741 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.007..3053.840 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1671755.84 rows=60219484 width=8) (actual time=0.006..10975.324 rows=59985653 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671755.84 rows=60219484 width=8) (actual time=0.049..11169.057 rows=59985653 loops=1)
Q18,1.0,Limit  (cost=10183598.59..10183601.34 rows=100 width=39) (actual time=82507.558..82507.896 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.050..0.066 rows=30 loops=1961)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.050..0.066 rows=30 loops=1961)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.47 rows=2004 width=0) (actual time=0.891..0.891 rows=1961 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.97..6637.80 rows=2004 width=4) (actual time=1.222..133.340 rows=1961 loops=1)
Q16,1.0,Sort  (cost=414411.65..414482.05 rows=28162 width=40) (actual time=10832.198..10835.803 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51138.23..51138.23 rows=300388 width=40) (actual time=1011.197..1011.197 rows=298012 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404538.95..412330.27 rows=28162 width=40) (actual time=9986.884..10772.023 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2516.90..51138.23 rows=300388 width=40) (actual time=45.962..897.482 rows=298012 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=166515.67..1565667.28 rows=2253452 width=12) (actual time=149.041..35363.266 rows=2246039 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=166515.67..1565667.28 rows=2253452 width=12) (actual time=167.229..33620.581 rows=2246039 loops=1)
Q14,1.0,->  Hash Join  (cost=93566.53..1150876.22 rows=770393 width=29) (actual time=1810.056..35373.868 rows=772911 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8044.53..1053798.33 rows=770393 width=12) (actual time=156.299..32757.201 rows=772911 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14968841 width=8) (actual time=0.016..9493.979 rows=14852330 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738295.80 rows=14968841 width=8) (actual time=1000.272..21981.904 rows=15352348 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.013..4268.122 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427165.16 rows=291741 width=15) (actual time=0.026..25741.289 rows=312816 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3030001.77 rows=291741 width=27) (actual time=9943.451..36054.475 rows=312816 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9854.466..9854.466 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.304..59.978 rows=3933 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..25.192 rows=3933 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.171..6408.941 rows=314640 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=61.061..4351.529 rows=314640 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=60.996..60.996 rows=3933 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.094..26.094 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..24.538 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..59.328 rows=3933 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826110.80 rows=59829292 width=20) (actual time=0.017..19962.003 rows=59547421 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1835178.36 rows=14892368 width=12) (actual time=0.019..18351.232 rows=14822651 loops=1)
Q10,1.0,->  Hash  (cost=270774.05..270774.05 rows=581388 width=8) (actual time=7300.128..7300.128 rows=573892 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5999.23..270774.05 rows=581388 width=8) (actual time=27.684..7054.466 rows=573892 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=403424)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1523260)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.20 rows=1 width=16) (actual time=0.641..0.759 rows=0 loops=4741)
Q19,,->  BitmapOr  (cost=12844.84..12844.84 rows=4779 width=0) (actual time=67.240..67.240 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6270.94..6270.94 rows=2384 width=0) (actual time=31.494..31.494 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.30..4280.30 rows=1592 width=0) (actual time=23.412..23.412 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2293.11..2293.11 rows=803 width=0) (actual time=8.657..8.657 rows=0 loops=1)

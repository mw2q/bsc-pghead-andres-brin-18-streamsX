BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('20', '10', '27', '30', '18', '16', '31')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('20', '10', '27', '30', '18', '16', '31')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=696030.00..696030.00 rows=3 width=20) (actual time=10816.186..10816.186 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=224639 read=102970 written=351
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52988.39..52988.40 rows=1 width=4) (actual time=739.069..739.069 rows=1 loops=1)
           Buffers: shared hit=9 read=36333 written=77
           ->  Bitmap Heap Scan on customer customer_1  (cost=6683.47..52029.53 rows=383545 width=4) (actual time=97.268..662.460 rows=381648 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{20,10,27,30,18,16,31}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=9 read=36333 written=77
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6587.58 rows=383545 width=0) (actual time=88.444..88.444 rows=381648 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{20,10,27,30,18,16,31}'::text[]))
                       Buffers: shared hit=7 read=1057 written=2
   ->  HashAggregate  (cost=643041.53..643041.57 rows=3 width=20) (actual time=10816.142..10816.145 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=224636 read=102970 written=351
         ->  Hash Anti Join  (cost=599029.04..642595.69 rows=59445 width=20) (actual time=10147.184..10788.688 rows=63900 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=224636 read=102970 written=351
               ->  Bitmap Heap Scan on customer  (cost=2944.10..41912.72 rows=140595 width=24) (actual time=810.507..1298.822 rows=190849 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{20,10,27,30,18,16,31}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35166
                     Buffers: shared hit=20 read=72035 written=239
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.95 rows=140595 width=0) (actual time=801.487..801.487 rows=190849 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{20,10,27,30,18,16,31}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=18 read=36871 written=79
               ->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=9256.675..9256.675 rows=15015000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658944kB
                     Buffers: shared hit=224613 read=30935 written=112
                     ->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.011..3903.193 rows=15015000 loops=1)
                           Buffers: shared hit=224613 read=30935 written=112
 Planning time: 2.903 ms
 Execution time: 10835.486 ms
(34 rows)

COMMIT;
COMMIT

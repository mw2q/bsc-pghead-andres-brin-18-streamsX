Q21,704386.0,->  Nested Loop Semi Join  (cost=2406.31..2845824.41 rows=1 width=34) (actual time=38.129..39173.026 rows=704386 loops=1)
Q3,314513.0,->  Sort  (cost=2535430.42..2543293.24 rows=3145130 width=20) (actual time=44317.496..44317.498 rows=10 loops=1)
Q18,303260.7,->  GroupAggregate  (cost=10154902.00..10980529.27 rows=30022810 width=39) (actual time=71537.338..71537.651 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2179957.36..2793625.50 rows=7507492 width=39) (actual time=44724.284..51886.708 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2110929.36..2611985.12 rows=7507492 width=20) (actual time=43551.302..50713.446 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2793625.50..2793625.50 rows=7507492 width=39) (actual time=51886.959..51886.959 rows=99 loops=1)
Q18,43322.9,->  Sort  (cost=10154902.00..10229959.02 rows=30022810 width=39) (actual time=71537.328..71537.376 rows=693 loops=1)
Q18,43322.9,->  Hash Join  (cost=2887469.15..5605196.70 rows=30022810 width=39) (actual time=52354.556..71536.285 rows=693 loops=1)
Q18,41492.6,->  Hash  (cost=2059582.19..2059582.19 rows=4107773 width=4) (actual time=43360.041..43360.041 rows=99 loops=1)
Q18,41492.6,->  HashAggregate  (cost=1967157.30..2018504.46 rows=4107773 width=8) (actual time=38243.901..43359.687 rows=99 loops=1)
Q21,39780.0,->  Nested Loop Anti Join  (cost=2406.88..2845826.20 rows=1 width=26) (actual time=39.933..42000.737 rows=39780 loops=1)
Q10,27530.7,->  Sort  (cost=2271354.72..2272731.25 rows=550614 width=175) (actual time=35615.531..35615.535 rows=20 loops=1)
Q9,18989.6,->  Sort  (cost=1427497.48..1427497.91 rows=172 width=46) (actual time=88668.820..89136.127 rows=3266218 loops=1)
Q9,18989.6,->  Nested Loop  (cost=67300.00..1427486.31 rows=172 width=24) (actual time=654.654..80059.138 rows=3266218 loops=1)
Q9,18989.6,->  Nested Loop  (cost=67299.57..1427402.95 rows=172 width=24) (actual time=654.584..49161.112 rows=3266218 loops=1)
Q9,18989.6,->  Nested Loop  (cost=67299.28..1427347.46 rows=172 width=28) (actual time=654.570..38982.181 rows=3266218 loops=1)
Q9,18989.6,->  Hash Join  (cost=67301.57..1427491.10 rows=172 width=46) (actual time=654.721..83260.970 rows=3266218 loops=1)
Q2,4633.0,->  Merge Join  (cost=465687.75..889116.89 rows=1 width=190) (actual time=6170.151..8074.028 rows=4633 loops=1)
Q21,3989.0,->  HashAggregate  (cost=2845826.20..2845826.21 rows=1 width=26) (actual time=42060.747..42061.808 rows=3989 loops=1)
Q15,3733.0,->  Subquery Scan on revenue0  (cost=1893531.02..1893615.02 rows=3733 width=12) (actual time=55474.375..55474.450 rows=1 loops=1)
Q15,3733.0,->  Sort  (cost=1893836.50..1893845.83 rows=3733 width=12) (actual time=55474.473..55474.473 rows=1 loops=1)
Q15,3733.0,Merge Join  (cost=3770641.21..3775738.41 rows=3733 width=79) (actual time=55492.771..55492.772 rows=1 loops=1)
Q15,3733.0,->  HashAggregate  (cost=1893531.02..1893577.69 rows=3733 width=12) (actual time=55474.371..55474.445 rows=1 loops=1)
Q7,768.0,Sort  (cost=2114762.26..2114769.94 rows=3072 width=64) (actual time=23480.252..23480.252 rows=4 loops=1)
Q7,768.0,->  HashAggregate  (cost=2114538.23..2114584.31 rows=3072 width=64) (actual time=23480.191..23480.197 rows=4 loops=1)
Q8,365.0,Sort  (cost=1710628.53..1710630.36 rows=730 width=38) (actual time=11108.523..11108.523 rows=2 loops=1)
Q8,365.0,->  HashAggregate  (cost=1710581.04..1710593.81 rows=730 width=38) (actual time=11108.482..11108.483 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=42062.937..42062.944 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845826.22..2845826.23 rows=1 width=26) (actual time=42062.939..42062.956 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889116.90..889116.91 rows=1 width=190) (actual time=8078.794..8078.804 rows=100 loops=1)
Q2,100.0,Limit  (cost=889116.90..889116.91 rows=1 width=190) (actual time=8078.797..8078.822 rows=100 loops=1)
Q11,37.9,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7326.420..7327.586 rows=8440 loops=1)
Q11,37.9,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7230.481..7321.588 rows=8440 loops=1)
Q3,27.6,->  HashAggregate  (cost=2436013.99..2467465.29 rows=3145130 width=20) (actual time=44252.348..44295.999 rows=113872 loops=1)
Q15,26.7,->  HashAggregate  (cost=1876720.42..1876757.75 rows=3733 width=12) (actual time=25549.273..25574.298 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=731312)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7795.51 rows=764751 width=0) (actual time=117.814..117.814 rows=10664960 loops=1)
Q3,10.4,->  Hash Join  (cost=762670.51..2388837.04 rows=3145130 width=20) (actual time=7766.085..43925.922 rows=300736 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2417.81 rows=320773 width=0) (actual time=34.466..34.466 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=8 loops=435164)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.622..3.622 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.642..3.642 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.307..0.307 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1905230.51..1905230.57 rows=25 width=34) (actual time=16343.307..16343.307 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1905229.68..1905229.93 rows=25 width=34) (actual time=16343.259..16343.261 rows=5 loops=1)
Q4,5.0,Sort  (cost=1488550.96..1488550.96 rows=1 width=16) (actual time=15162.405..15162.405 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.06 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=574844)
Q4,5.0,->  HashAggregate  (cost=1488550.94..1488550.95 rows=1 width=16) (actual time=15162.351..15162.353 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=704386)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5646.88 rows=560688 width=0) (actual time=27.559..27.559 rows=2535680 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5796.39 rows=575639 width=0) (actual time=27.266..27.266 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=844752.28..844752.78 rows=200 width=8) (actual time=26870.175..26870.179 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=844742.64..844744.64 rows=200 width=8) (actual time=26870.087..26870.094 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1209669)
Q17,3.8,->  Nested Loop  (cost=82.71..114127.35 rows=20035 width=4) (actual time=1.500..185.166 rows=5207 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=456897)
Q4,3.3,->  Nested Loop Semi Join  (cost=5940.87..1487763.53 rows=157482 width=16) (actual time=27.456..14836.717 rows=527086 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.011..0.024 rows=3 loops=2011)
Q15,3.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..262522.97 rows=34983330 width=0) (actual time=118.730..118.730 rows=10664960 loops=1)
Q15,3.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..262522.97 rows=34983330 width=0) (actual time=118.726..118.726 rows=10664960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243952.11 rows=32507214 width=0) (actual time=118.793..118.793 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.294..0.364 rows=3 loops=22026)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54615.48 rows=7276730 width=0) (actual time=27.416..27.416 rows=2535680 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.024..14.584 rows=37000 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44205.99 rows=5888798 width=0) (actual time=27.296..27.296 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691155.61..691155.62 rows=3 width=20) (actual time=8841.827..8841.828 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638247.06..638247.11 rows=3 width=20) (actual time=8841.773..8841.774 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.050 rows=2 loops=6341)
Q20,2.0,->  Nested Loop  (cost=754.48..11668629.61 rows=29587 width=4) (actual time=13.054..8624.700 rows=59690 loops=1)
Q20,2.0,->  Hash  (cost=11668629.61..11668629.61 rows=29587 width=4) (actual time=8664.624..8664.624 rows=59690 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2000.00 rows=198800 width=0) (actual time=4.166..4.166 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3023042.86..3023042.87 rows=1 width=27) (actual time=35377.504..35377.505 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3023042.84..3023042.85 rows=1 width=27) (actual time=35377.447..35377.448 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=343757.53..2237431.58 rows=550614 width=175) (actual time=11235.426..33492.638 rows=1110626 loops=1)
Q10,2.0,->  Hash Join  (cost=343755.97..2229859.08 rows=550614 width=153) (actual time=11235.399..33089.805 rows=1110626 loops=1)
Q10,2.0,->  Hash Join  (cost=274727.97..2152571.87 rows=550614 width=12) (actual time=9594.957..30667.554 rows=1110626 loops=1)
Q16,1.9,->  Sort  (cost=403741.17..405228.60 rows=594972 width=40) (actual time=10422.209..10616.211 rows=1187051 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.520..3757.790 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54768.31..346676.03 rows=594972 width=40) (actual time=1459.927..6984.811 rows=1187051 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.25 rows=20015207 width=8) (actual time=0.005..20245.236 rows=37967116 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323953.49 rows=390603 width=38) (actual time=38.106..34059.157 rows=731312 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902511.67 rows=800608 width=34) (actual time=38.077..26413.643 rows=1514717 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.030..0.474 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671443.24..11671446.20 rows=1183 width=51) (actual time=8696.198..8696.320 rows=1796 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669042.45..11671382.86 rows=1183 width=51) (actual time=8665.167..8694.825 rows=1796 loops=1)
Q1,1.5,Sort  (cost=4167233.91..4167233.93 rows=6 width=20) (actual time=88860.870..88860.871 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4167233.73..4167233.83 rows=6 width=20) (actual time=88860.819..88860.821 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5978.67 rows=596667 width=0) (actual time=4.119..4.119 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2251196.93..2256703.07 rows=550614 width=175) (actual time=35293.256..35480.532 rows=372215 loops=1)
Q9,1.3,->  Seq Scan on part  (cost=0.00..65522.00 rows=142137 width=4) (actual time=0.030..619.003 rows=108791 loops=1)
Q9,1.3,->  Hash Join  (cost=67298.71..353942.19 rows=568548 width=16) (actual time=654.472..4710.387 rows=435164 loops=1)
Q9,1.3,->  Hash  (cost=65522.00..65522.00 rows=142137 width=4) (actual time=653.147..653.147 rows=108791 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.35 rows=140033 width=0) (actual time=428.154..428.154 rows=190417 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.36..41864.23 rows=140033 width=24) (actual time=436.277..543.257 rows=190417 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92053.49 rows=9190549 width=0) (actual time=119.583..119.583 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=8.730..8.730 rows=22026 loops=1)
Q9,1.0,GroupAggregate  (cost=1427497.48..1427503.50 rows=172 width=46) (actual time=88678.196..91261.933 rows=175 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.696..1964.134 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.52..1662890.08 rows=119942 width=20) (actual time=6.769..8711.940 rows=119878 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.08..1469244.70 rows=395490 width=16) (actual time=6.690..3931.241 rows=395713 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.96..1709649.94 rows=23988 width=16) (actual time=2070.648..11030.221 rows=24159 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.10 rows=31 width=20) (actual time=0.027..0.267 rows=30 loops=13163)
Q8,1.0,->  Hash Join  (cost=38739.52..1710101.28 rows=23988 width=38) (actual time=2070.698..11068.397 rows=24159 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.67..1701909.89 rows=23988 width=16) (actual time=2070.570..10849.126 rows=24159 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2061.863..2061.863 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..403.23 rows=13173 width=0) (actual time=4.463..4.463 rows=13163 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.52..27921.42 rows=13173 width=4) (actual time=6.666..282.638 rows=13163 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.657..383.607 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.006..3518.005 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2101770.17 rows=1461045 width=42) (actual time=629.610..22788.672 rows=1466760 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2113626.19 rows=60803 width=64) (actual time=669.562..23390.491 rows=57588 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=629.564..8955.336 rows=1209669 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..588.568 rows=120852 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.048..37.440 rows=7918 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=629.061..629.061 rows=120852 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.579..39.579 rows=7918 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92148.92..1365409.27 rows=381725 width=8) (actual time=120.702..26991.531 rows=382805 loops=1)
Q5,1.0,->  Nested Loop  (cost=83117.59..1885430.81 rows=1821676 width=46) (actual time=2463.917..15464.598 rows=1827091 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.864..2322.434 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=87796.59..1904501.03 rows=72865 width=34) (actual time=2534.766..16259.042 rows=72843 loops=1)
Q5,1.0,->  Hash Join  (cost=83117.03..438067.42 rows=455528 width=38) (actual time=2463.849..7753.146 rows=456897 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2434.333..2434.333 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44775.40..386629.37 rows=2277638 width=8) (actual time=27.477..4358.343 rows=2284131 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.698..454.168 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5940.30..268096.89 rows=575639 width=20) (actual time=27.440..4913.616 rows=574844 loops=1)
Q3,1.0,->  Hash Join  (cost=106136.40..492432.53 rows=1452726 width=12) (actual time=415.470..7051.314 rows=1452895 loops=1)
Q3,1.0,->  Hash  (cost=492432.53..492432.53 rows=1452726 width=12) (actual time=7635.268..7635.268 rows=1452895 loops=1)
Q3,1.0,->  Hash  (cost=45958.49..45958.49 rows=299460 width=4) (actual time=385.194..385.194 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6862.38 rows=299460 width=0) (actual time=63.582..63.582 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56434.66..400915.79 rows=7276730 width=16) (actual time=27.587..4306.115 rows=7265540 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252078.91..1724892.08 rows=32507214 width=12) (actual time=119.538..29789.259 rows=32491428 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6937.24..45958.49 rows=299460 width=4) (actual time=71.479..302.402 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.012..3931.098 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=8127.236..8127.236 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594269.50..637803.00 rows=59208 width=20) (actual time=8611.202..8820.704 rows=63298 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6552.09 rows=382013 width=0) (actual time=71.387..71.387 rows=381586 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6647.59..51953.43 rows=382013 width=4) (actual time=79.117..306.412 rows=381586 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.293..36.951 rows=3990 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=38.041..38.041 rows=3990 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.280..36.279 rows=3990 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6169.463..6293.995 rows=1603983 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.356..182.800 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8008 width=30) (actual time=0.066..1141.161 rows=7885 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=195.218..5033.198 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=195.085..195.085 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.270..35.605 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.348..28.847 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.329..28.276 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.330..574.928 rows=22026 loops=1)
Q19,1.0,->  Nested Loop  (cost=12831.63..609706.74 rows=1130 width=8) (actual time=34.037..1537.336 rows=1154 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3987.87 rows=397587 width=0) (actual time=4.131..4.131 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.43 rows=8072 width=0) (actual time=3.423..3.423 rows=7986 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.11 rows=7941 width=0) (actual time=3.274..3.274 rows=8175 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.43 rows=7874 width=0) (actual time=3.482..3.482 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4792)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12826.89..26512.73 rows=4753 width=30) (actual time=30.782..271.364 rows=4792 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..3503.785 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666929.20 rows=60045620 width=8) (actual time=0.004..7678.745 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666929.20 rows=60045620 width=8) (actual time=0.005..7761.184 rows=60045669 loops=1)
Q18,1.0,Limit  (cost=10154902.00..10154904.75 rows=100 width=39) (actual time=71537.341..71537.669 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.036 rows=30 loops=2011)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.036 rows=30 loops=2011)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.45 rows=2002 width=0) (actual time=0.853..0.853 rows=2011 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.95..6631.73 rows=2002 width=4) (actual time=1.184..48.437 rows=2011 loops=1)
Q16,1.0,Sort  (cost=413516.54..413586.26 rows=27890 width=40) (actual time=11304.040..11305.894 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=51033.50..51033.50 rows=297486 width=40) (actual time=1457.018..1457.018 rows=296924 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403741.17..411457.22 rows=27890 width=40) (actual time=10422.272..11244.368 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2492.18..51033.50 rows=297486 width=40) (actual time=34.548..1313.930 rows=296924 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=263083.33..1854306.28 rows=2241414 width=12) (actual time=119.519..23327.759 rows=2248348 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=263083.33..1854306.28 rows=2241414 width=12) (actual time=119.529..27512.339 rows=2248348 loops=1)
Q14,1.0,->  Hash Join  (cost=93508.69..1141211.69 rows=764751 width=29) (actual time=1668.512..41463.774 rows=750329 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7986.69..1044218.42 rows=764751 width=12) (actual time=118.642..38905.299 rows=750329 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14850267 width=8) (actual time=0.023..7969.984 rows=14853971 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732991.31 rows=14850267 width=8) (actual time=844.717..17781.936 rows=15353989 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.007..5122.013 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417499.45 rows=290959 width=15) (actual time=0.206..24636.437 rows=313901 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017951.06 rows=290959 width=27) (actual time=9978.682..35049.828 rows=313901 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=9934.013..9934.013 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..46.027 rows=4079 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.288..23.662 rows=4079 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.789..2704.922 rows=326320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=47.414..4161.793 rows=326320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=47.362..47.362 rows=4079 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.706..24.706 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.257..23.009 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..45.085 rows=4079 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.25 rows=58754762 width=20) (actual time=0.027..18478.933 rows=58763568 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.25 rows=14745203 width=12) (actual time=0.013..17772.931 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=267719.37..267719.37 rows=560688 width=8) (actual time=9591.440..9591.440 rows=554821 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5787.05..267719.37 rows=560688 width=8) (actual time=27.829..9316.343 rows=554821 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=395713)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1514717)
Q19,,->  BitmapOr  (cost=12826.89..12826.89 rows=4756 width=0) (actual time=27.004..27.004 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.240..0.259 rows=0 loops=4792)
Q19,,->  BitmapAnd  (cost=6270.41..6270.41 rows=2369 width=0) (actual time=7.966..7.966 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4280.93..4280.93 rows=1605 width=0) (actual time=8.112..8.112 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2275.06..2275.06 rows=783 width=0) (actual time=8.207..8.207 rows=0 loops=1)
